
Tic-Tac-Toe-AI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000bab8  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000010d4  0800bc58  0800bc58  0000cc58  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800cd2c  0800cd2c  0000e744  2**0
                  CONTENTS
  4 .ARM          00000008  0800cd2c  0800cd2c  0000dd2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800cd34  0800cd34  0000e744  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800cd34  0800cd34  0000dd34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800cd38  0800cd38  0000dd38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000744  20000000  0800cd3c  0000e000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003d4  20000744  0800d480  0000e744  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000b18  0800d480  0000eb18  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000e744  2**0
                  CONTENTS, READONLY
 12 .debug_info   00013a86  00000000  00000000  0000e774  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003ab8  00000000  00000000  000221fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000f70  00000000  00000000  00025cb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000ba1  00000000  00000000  00026c28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019cf7  00000000  00000000  000277c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001849f  00000000  00000000  000414c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008e1cf  00000000  00000000  0005995f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000e7b2e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005214  00000000  00000000  000e7b74  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000067  00000000  00000000  000ecd88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000744 	.word	0x20000744
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800bc40 	.word	0x0800bc40

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000748 	.word	0x20000748
 80001dc:	0800bc40 	.word	0x0800bc40

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2uiz>:
 8000bb8:	004a      	lsls	r2, r1, #1
 8000bba:	d211      	bcs.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bbc:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bc0:	d211      	bcs.n	8000be6 <__aeabi_d2uiz+0x2e>
 8000bc2:	d50d      	bpl.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bc4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bcc:	d40e      	bmi.n	8000bec <__aeabi_d2uiz+0x34>
 8000bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bda:	fa23 f002 	lsr.w	r0, r3, r2
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bea:	d102      	bne.n	8000bf2 <__aeabi_d2uiz+0x3a>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf0:	4770      	bx	lr
 8000bf2:	f04f 0000 	mov.w	r0, #0
 8000bf6:	4770      	bx	lr

08000bf8 <__aeabi_d2f>:
 8000bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000c00:	bf24      	itt	cs
 8000c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000c0a:	d90d      	bls.n	8000c28 <__aeabi_d2f+0x30>
 8000c0c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c18:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c20:	bf08      	it	eq
 8000c22:	f020 0001 	biceq.w	r0, r0, #1
 8000c26:	4770      	bx	lr
 8000c28:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c2c:	d121      	bne.n	8000c72 <__aeabi_d2f+0x7a>
 8000c2e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c32:	bfbc      	itt	lt
 8000c34:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c38:	4770      	bxlt	lr
 8000c3a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c42:	f1c2 0218 	rsb	r2, r2, #24
 8000c46:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c52:	bf18      	it	ne
 8000c54:	f040 0001 	orrne.w	r0, r0, #1
 8000c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c64:	ea40 000c 	orr.w	r0, r0, ip
 8000c68:	fa23 f302 	lsr.w	r3, r3, r2
 8000c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c70:	e7cc      	b.n	8000c0c <__aeabi_d2f+0x14>
 8000c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c76:	d107      	bne.n	8000c88 <__aeabi_d2f+0x90>
 8000c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c7c:	bf1e      	ittt	ne
 8000c7e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c82:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c86:	4770      	bxne	lr
 8000c88:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop

08000c98 <__aeabi_frsub>:
 8000c98:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000c9c:	e002      	b.n	8000ca4 <__addsf3>
 8000c9e:	bf00      	nop

08000ca0 <__aeabi_fsub>:
 8000ca0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000ca4 <__addsf3>:
 8000ca4:	0042      	lsls	r2, r0, #1
 8000ca6:	bf1f      	itttt	ne
 8000ca8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000cac:	ea92 0f03 	teqne	r2, r3
 8000cb0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000cb4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cb8:	d06a      	beq.n	8000d90 <__addsf3+0xec>
 8000cba:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000cbe:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000cc2:	bfc1      	itttt	gt
 8000cc4:	18d2      	addgt	r2, r2, r3
 8000cc6:	4041      	eorgt	r1, r0
 8000cc8:	4048      	eorgt	r0, r1
 8000cca:	4041      	eorgt	r1, r0
 8000ccc:	bfb8      	it	lt
 8000cce:	425b      	neglt	r3, r3
 8000cd0:	2b19      	cmp	r3, #25
 8000cd2:	bf88      	it	hi
 8000cd4:	4770      	bxhi	lr
 8000cd6:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000cda:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cde:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000ce2:	bf18      	it	ne
 8000ce4:	4240      	negne	r0, r0
 8000ce6:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000cea:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000cee:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000cf2:	bf18      	it	ne
 8000cf4:	4249      	negne	r1, r1
 8000cf6:	ea92 0f03 	teq	r2, r3
 8000cfa:	d03f      	beq.n	8000d7c <__addsf3+0xd8>
 8000cfc:	f1a2 0201 	sub.w	r2, r2, #1
 8000d00:	fa41 fc03 	asr.w	ip, r1, r3
 8000d04:	eb10 000c 	adds.w	r0, r0, ip
 8000d08:	f1c3 0320 	rsb	r3, r3, #32
 8000d0c:	fa01 f103 	lsl.w	r1, r1, r3
 8000d10:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000d14:	d502      	bpl.n	8000d1c <__addsf3+0x78>
 8000d16:	4249      	negs	r1, r1
 8000d18:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000d1c:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000d20:	d313      	bcc.n	8000d4a <__addsf3+0xa6>
 8000d22:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000d26:	d306      	bcc.n	8000d36 <__addsf3+0x92>
 8000d28:	0840      	lsrs	r0, r0, #1
 8000d2a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000d2e:	f102 0201 	add.w	r2, r2, #1
 8000d32:	2afe      	cmp	r2, #254	@ 0xfe
 8000d34:	d251      	bcs.n	8000dda <__addsf3+0x136>
 8000d36:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000d3a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d3e:	bf08      	it	eq
 8000d40:	f020 0001 	biceq.w	r0, r0, #1
 8000d44:	ea40 0003 	orr.w	r0, r0, r3
 8000d48:	4770      	bx	lr
 8000d4a:	0049      	lsls	r1, r1, #1
 8000d4c:	eb40 0000 	adc.w	r0, r0, r0
 8000d50:	3a01      	subs	r2, #1
 8000d52:	bf28      	it	cs
 8000d54:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000d58:	d2ed      	bcs.n	8000d36 <__addsf3+0x92>
 8000d5a:	fab0 fc80 	clz	ip, r0
 8000d5e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000d62:	ebb2 020c 	subs.w	r2, r2, ip
 8000d66:	fa00 f00c 	lsl.w	r0, r0, ip
 8000d6a:	bfaa      	itet	ge
 8000d6c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000d70:	4252      	neglt	r2, r2
 8000d72:	4318      	orrge	r0, r3
 8000d74:	bfbc      	itt	lt
 8000d76:	40d0      	lsrlt	r0, r2
 8000d78:	4318      	orrlt	r0, r3
 8000d7a:	4770      	bx	lr
 8000d7c:	f092 0f00 	teq	r2, #0
 8000d80:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000d84:	bf06      	itte	eq
 8000d86:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000d8a:	3201      	addeq	r2, #1
 8000d8c:	3b01      	subne	r3, #1
 8000d8e:	e7b5      	b.n	8000cfc <__addsf3+0x58>
 8000d90:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000d94:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000d98:	bf18      	it	ne
 8000d9a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000d9e:	d021      	beq.n	8000de4 <__addsf3+0x140>
 8000da0:	ea92 0f03 	teq	r2, r3
 8000da4:	d004      	beq.n	8000db0 <__addsf3+0x10c>
 8000da6:	f092 0f00 	teq	r2, #0
 8000daa:	bf08      	it	eq
 8000dac:	4608      	moveq	r0, r1
 8000dae:	4770      	bx	lr
 8000db0:	ea90 0f01 	teq	r0, r1
 8000db4:	bf1c      	itt	ne
 8000db6:	2000      	movne	r0, #0
 8000db8:	4770      	bxne	lr
 8000dba:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000dbe:	d104      	bne.n	8000dca <__addsf3+0x126>
 8000dc0:	0040      	lsls	r0, r0, #1
 8000dc2:	bf28      	it	cs
 8000dc4:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000dc8:	4770      	bx	lr
 8000dca:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000dce:	bf3c      	itt	cc
 8000dd0:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000dd4:	4770      	bxcc	lr
 8000dd6:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000dda:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000dde:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000de2:	4770      	bx	lr
 8000de4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000de8:	bf16      	itet	ne
 8000dea:	4608      	movne	r0, r1
 8000dec:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000df0:	4601      	movne	r1, r0
 8000df2:	0242      	lsls	r2, r0, #9
 8000df4:	bf06      	itte	eq
 8000df6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000dfa:	ea90 0f01 	teqeq	r0, r1
 8000dfe:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000e02:	4770      	bx	lr

08000e04 <__aeabi_ui2f>:
 8000e04:	f04f 0300 	mov.w	r3, #0
 8000e08:	e004      	b.n	8000e14 <__aeabi_i2f+0x8>
 8000e0a:	bf00      	nop

08000e0c <__aeabi_i2f>:
 8000e0c:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000e10:	bf48      	it	mi
 8000e12:	4240      	negmi	r0, r0
 8000e14:	ea5f 0c00 	movs.w	ip, r0
 8000e18:	bf08      	it	eq
 8000e1a:	4770      	bxeq	lr
 8000e1c:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000e20:	4601      	mov	r1, r0
 8000e22:	f04f 0000 	mov.w	r0, #0
 8000e26:	e01c      	b.n	8000e62 <__aeabi_l2f+0x2a>

08000e28 <__aeabi_ul2f>:
 8000e28:	ea50 0201 	orrs.w	r2, r0, r1
 8000e2c:	bf08      	it	eq
 8000e2e:	4770      	bxeq	lr
 8000e30:	f04f 0300 	mov.w	r3, #0
 8000e34:	e00a      	b.n	8000e4c <__aeabi_l2f+0x14>
 8000e36:	bf00      	nop

08000e38 <__aeabi_l2f>:
 8000e38:	ea50 0201 	orrs.w	r2, r0, r1
 8000e3c:	bf08      	it	eq
 8000e3e:	4770      	bxeq	lr
 8000e40:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000e44:	d502      	bpl.n	8000e4c <__aeabi_l2f+0x14>
 8000e46:	4240      	negs	r0, r0
 8000e48:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000e4c:	ea5f 0c01 	movs.w	ip, r1
 8000e50:	bf02      	ittt	eq
 8000e52:	4684      	moveq	ip, r0
 8000e54:	4601      	moveq	r1, r0
 8000e56:	2000      	moveq	r0, #0
 8000e58:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000e5c:	bf08      	it	eq
 8000e5e:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000e62:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000e66:	fabc f28c 	clz	r2, ip
 8000e6a:	3a08      	subs	r2, #8
 8000e6c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000e70:	db10      	blt.n	8000e94 <__aeabi_l2f+0x5c>
 8000e72:	fa01 fc02 	lsl.w	ip, r1, r2
 8000e76:	4463      	add	r3, ip
 8000e78:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e7c:	f1c2 0220 	rsb	r2, r2, #32
 8000e80:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000e84:	fa20 f202 	lsr.w	r2, r0, r2
 8000e88:	eb43 0002 	adc.w	r0, r3, r2
 8000e8c:	bf08      	it	eq
 8000e8e:	f020 0001 	biceq.w	r0, r0, #1
 8000e92:	4770      	bx	lr
 8000e94:	f102 0220 	add.w	r2, r2, #32
 8000e98:	fa01 fc02 	lsl.w	ip, r1, r2
 8000e9c:	f1c2 0220 	rsb	r2, r2, #32
 8000ea0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000ea4:	fa21 f202 	lsr.w	r2, r1, r2
 8000ea8:	eb43 0002 	adc.w	r0, r3, r2
 8000eac:	bf08      	it	eq
 8000eae:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000eb2:	4770      	bx	lr

08000eb4 <__aeabi_uldivmod>:
 8000eb4:	b953      	cbnz	r3, 8000ecc <__aeabi_uldivmod+0x18>
 8000eb6:	b94a      	cbnz	r2, 8000ecc <__aeabi_uldivmod+0x18>
 8000eb8:	2900      	cmp	r1, #0
 8000eba:	bf08      	it	eq
 8000ebc:	2800      	cmpeq	r0, #0
 8000ebe:	bf1c      	itt	ne
 8000ec0:	f04f 31ff 	movne.w	r1, #4294967295
 8000ec4:	f04f 30ff 	movne.w	r0, #4294967295
 8000ec8:	f000 b9a0 	b.w	800120c <__aeabi_idiv0>
 8000ecc:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ed0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ed4:	f000 f83c 	bl	8000f50 <__udivmoddi4>
 8000ed8:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000edc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000ee0:	b004      	add	sp, #16
 8000ee2:	4770      	bx	lr

08000ee4 <__aeabi_d2lz>:
 8000ee4:	b538      	push	{r3, r4, r5, lr}
 8000ee6:	2200      	movs	r2, #0
 8000ee8:	2300      	movs	r3, #0
 8000eea:	4604      	mov	r4, r0
 8000eec:	460d      	mov	r5, r1
 8000eee:	f7ff fdfd 	bl	8000aec <__aeabi_dcmplt>
 8000ef2:	b928      	cbnz	r0, 8000f00 <__aeabi_d2lz+0x1c>
 8000ef4:	4620      	mov	r0, r4
 8000ef6:	4629      	mov	r1, r5
 8000ef8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000efc:	f000 b80a 	b.w	8000f14 <__aeabi_d2ulz>
 8000f00:	4620      	mov	r0, r4
 8000f02:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000f06:	f000 f805 	bl	8000f14 <__aeabi_d2ulz>
 8000f0a:	4240      	negs	r0, r0
 8000f0c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000f10:	bd38      	pop	{r3, r4, r5, pc}
 8000f12:	bf00      	nop

08000f14 <__aeabi_d2ulz>:
 8000f14:	b5d0      	push	{r4, r6, r7, lr}
 8000f16:	4b0c      	ldr	r3, [pc, #48]	@ (8000f48 <__aeabi_d2ulz+0x34>)
 8000f18:	2200      	movs	r2, #0
 8000f1a:	4606      	mov	r6, r0
 8000f1c:	460f      	mov	r7, r1
 8000f1e:	f7ff fb73 	bl	8000608 <__aeabi_dmul>
 8000f22:	f7ff fe49 	bl	8000bb8 <__aeabi_d2uiz>
 8000f26:	4604      	mov	r4, r0
 8000f28:	f7ff faf4 	bl	8000514 <__aeabi_ui2d>
 8000f2c:	4b07      	ldr	r3, [pc, #28]	@ (8000f4c <__aeabi_d2ulz+0x38>)
 8000f2e:	2200      	movs	r2, #0
 8000f30:	f7ff fb6a 	bl	8000608 <__aeabi_dmul>
 8000f34:	4602      	mov	r2, r0
 8000f36:	460b      	mov	r3, r1
 8000f38:	4630      	mov	r0, r6
 8000f3a:	4639      	mov	r1, r7
 8000f3c:	f7ff f9ac 	bl	8000298 <__aeabi_dsub>
 8000f40:	f7ff fe3a 	bl	8000bb8 <__aeabi_d2uiz>
 8000f44:	4621      	mov	r1, r4
 8000f46:	bdd0      	pop	{r4, r6, r7, pc}
 8000f48:	3df00000 	.word	0x3df00000
 8000f4c:	41f00000 	.word	0x41f00000

08000f50 <__udivmoddi4>:
 8000f50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f54:	9d08      	ldr	r5, [sp, #32]
 8000f56:	460c      	mov	r4, r1
 8000f58:	2b00      	cmp	r3, #0
 8000f5a:	d14e      	bne.n	8000ffa <__udivmoddi4+0xaa>
 8000f5c:	4694      	mov	ip, r2
 8000f5e:	458c      	cmp	ip, r1
 8000f60:	4686      	mov	lr, r0
 8000f62:	fab2 f282 	clz	r2, r2
 8000f66:	d962      	bls.n	800102e <__udivmoddi4+0xde>
 8000f68:	b14a      	cbz	r2, 8000f7e <__udivmoddi4+0x2e>
 8000f6a:	f1c2 0320 	rsb	r3, r2, #32
 8000f6e:	4091      	lsls	r1, r2
 8000f70:	fa20 f303 	lsr.w	r3, r0, r3
 8000f74:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f78:	4319      	orrs	r1, r3
 8000f7a:	fa00 fe02 	lsl.w	lr, r0, r2
 8000f7e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f82:	fa1f f68c 	uxth.w	r6, ip
 8000f86:	fbb1 f4f7 	udiv	r4, r1, r7
 8000f8a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000f8e:	fb07 1114 	mls	r1, r7, r4, r1
 8000f92:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000f96:	fb04 f106 	mul.w	r1, r4, r6
 8000f9a:	4299      	cmp	r1, r3
 8000f9c:	d90a      	bls.n	8000fb4 <__udivmoddi4+0x64>
 8000f9e:	eb1c 0303 	adds.w	r3, ip, r3
 8000fa2:	f104 30ff 	add.w	r0, r4, #4294967295
 8000fa6:	f080 8112 	bcs.w	80011ce <__udivmoddi4+0x27e>
 8000faa:	4299      	cmp	r1, r3
 8000fac:	f240 810f 	bls.w	80011ce <__udivmoddi4+0x27e>
 8000fb0:	3c02      	subs	r4, #2
 8000fb2:	4463      	add	r3, ip
 8000fb4:	1a59      	subs	r1, r3, r1
 8000fb6:	fa1f f38e 	uxth.w	r3, lr
 8000fba:	fbb1 f0f7 	udiv	r0, r1, r7
 8000fbe:	fb07 1110 	mls	r1, r7, r0, r1
 8000fc2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000fc6:	fb00 f606 	mul.w	r6, r0, r6
 8000fca:	429e      	cmp	r6, r3
 8000fcc:	d90a      	bls.n	8000fe4 <__udivmoddi4+0x94>
 8000fce:	eb1c 0303 	adds.w	r3, ip, r3
 8000fd2:	f100 31ff 	add.w	r1, r0, #4294967295
 8000fd6:	f080 80fc 	bcs.w	80011d2 <__udivmoddi4+0x282>
 8000fda:	429e      	cmp	r6, r3
 8000fdc:	f240 80f9 	bls.w	80011d2 <__udivmoddi4+0x282>
 8000fe0:	4463      	add	r3, ip
 8000fe2:	3802      	subs	r0, #2
 8000fe4:	1b9b      	subs	r3, r3, r6
 8000fe6:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000fea:	2100      	movs	r1, #0
 8000fec:	b11d      	cbz	r5, 8000ff6 <__udivmoddi4+0xa6>
 8000fee:	40d3      	lsrs	r3, r2
 8000ff0:	2200      	movs	r2, #0
 8000ff2:	e9c5 3200 	strd	r3, r2, [r5]
 8000ff6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ffa:	428b      	cmp	r3, r1
 8000ffc:	d905      	bls.n	800100a <__udivmoddi4+0xba>
 8000ffe:	b10d      	cbz	r5, 8001004 <__udivmoddi4+0xb4>
 8001000:	e9c5 0100 	strd	r0, r1, [r5]
 8001004:	2100      	movs	r1, #0
 8001006:	4608      	mov	r0, r1
 8001008:	e7f5      	b.n	8000ff6 <__udivmoddi4+0xa6>
 800100a:	fab3 f183 	clz	r1, r3
 800100e:	2900      	cmp	r1, #0
 8001010:	d146      	bne.n	80010a0 <__udivmoddi4+0x150>
 8001012:	42a3      	cmp	r3, r4
 8001014:	d302      	bcc.n	800101c <__udivmoddi4+0xcc>
 8001016:	4290      	cmp	r0, r2
 8001018:	f0c0 80f0 	bcc.w	80011fc <__udivmoddi4+0x2ac>
 800101c:	1a86      	subs	r6, r0, r2
 800101e:	eb64 0303 	sbc.w	r3, r4, r3
 8001022:	2001      	movs	r0, #1
 8001024:	2d00      	cmp	r5, #0
 8001026:	d0e6      	beq.n	8000ff6 <__udivmoddi4+0xa6>
 8001028:	e9c5 6300 	strd	r6, r3, [r5]
 800102c:	e7e3      	b.n	8000ff6 <__udivmoddi4+0xa6>
 800102e:	2a00      	cmp	r2, #0
 8001030:	f040 8090 	bne.w	8001154 <__udivmoddi4+0x204>
 8001034:	eba1 040c 	sub.w	r4, r1, ip
 8001038:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800103c:	fa1f f78c 	uxth.w	r7, ip
 8001040:	2101      	movs	r1, #1
 8001042:	fbb4 f6f8 	udiv	r6, r4, r8
 8001046:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800104a:	fb08 4416 	mls	r4, r8, r6, r4
 800104e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8001052:	fb07 f006 	mul.w	r0, r7, r6
 8001056:	4298      	cmp	r0, r3
 8001058:	d908      	bls.n	800106c <__udivmoddi4+0x11c>
 800105a:	eb1c 0303 	adds.w	r3, ip, r3
 800105e:	f106 34ff 	add.w	r4, r6, #4294967295
 8001062:	d202      	bcs.n	800106a <__udivmoddi4+0x11a>
 8001064:	4298      	cmp	r0, r3
 8001066:	f200 80cd 	bhi.w	8001204 <__udivmoddi4+0x2b4>
 800106a:	4626      	mov	r6, r4
 800106c:	1a1c      	subs	r4, r3, r0
 800106e:	fa1f f38e 	uxth.w	r3, lr
 8001072:	fbb4 f0f8 	udiv	r0, r4, r8
 8001076:	fb08 4410 	mls	r4, r8, r0, r4
 800107a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800107e:	fb00 f707 	mul.w	r7, r0, r7
 8001082:	429f      	cmp	r7, r3
 8001084:	d908      	bls.n	8001098 <__udivmoddi4+0x148>
 8001086:	eb1c 0303 	adds.w	r3, ip, r3
 800108a:	f100 34ff 	add.w	r4, r0, #4294967295
 800108e:	d202      	bcs.n	8001096 <__udivmoddi4+0x146>
 8001090:	429f      	cmp	r7, r3
 8001092:	f200 80b0 	bhi.w	80011f6 <__udivmoddi4+0x2a6>
 8001096:	4620      	mov	r0, r4
 8001098:	1bdb      	subs	r3, r3, r7
 800109a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800109e:	e7a5      	b.n	8000fec <__udivmoddi4+0x9c>
 80010a0:	f1c1 0620 	rsb	r6, r1, #32
 80010a4:	408b      	lsls	r3, r1
 80010a6:	fa22 f706 	lsr.w	r7, r2, r6
 80010aa:	431f      	orrs	r7, r3
 80010ac:	fa20 fc06 	lsr.w	ip, r0, r6
 80010b0:	fa04 f301 	lsl.w	r3, r4, r1
 80010b4:	ea43 030c 	orr.w	r3, r3, ip
 80010b8:	40f4      	lsrs	r4, r6
 80010ba:	fa00 f801 	lsl.w	r8, r0, r1
 80010be:	0c38      	lsrs	r0, r7, #16
 80010c0:	ea4f 4913 	mov.w	r9, r3, lsr #16
 80010c4:	fbb4 fef0 	udiv	lr, r4, r0
 80010c8:	fa1f fc87 	uxth.w	ip, r7
 80010cc:	fb00 441e 	mls	r4, r0, lr, r4
 80010d0:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80010d4:	fb0e f90c 	mul.w	r9, lr, ip
 80010d8:	45a1      	cmp	r9, r4
 80010da:	fa02 f201 	lsl.w	r2, r2, r1
 80010de:	d90a      	bls.n	80010f6 <__udivmoddi4+0x1a6>
 80010e0:	193c      	adds	r4, r7, r4
 80010e2:	f10e 3aff 	add.w	sl, lr, #4294967295
 80010e6:	f080 8084 	bcs.w	80011f2 <__udivmoddi4+0x2a2>
 80010ea:	45a1      	cmp	r9, r4
 80010ec:	f240 8081 	bls.w	80011f2 <__udivmoddi4+0x2a2>
 80010f0:	f1ae 0e02 	sub.w	lr, lr, #2
 80010f4:	443c      	add	r4, r7
 80010f6:	eba4 0409 	sub.w	r4, r4, r9
 80010fa:	fa1f f983 	uxth.w	r9, r3
 80010fe:	fbb4 f3f0 	udiv	r3, r4, r0
 8001102:	fb00 4413 	mls	r4, r0, r3, r4
 8001106:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800110a:	fb03 fc0c 	mul.w	ip, r3, ip
 800110e:	45a4      	cmp	ip, r4
 8001110:	d907      	bls.n	8001122 <__udivmoddi4+0x1d2>
 8001112:	193c      	adds	r4, r7, r4
 8001114:	f103 30ff 	add.w	r0, r3, #4294967295
 8001118:	d267      	bcs.n	80011ea <__udivmoddi4+0x29a>
 800111a:	45a4      	cmp	ip, r4
 800111c:	d965      	bls.n	80011ea <__udivmoddi4+0x29a>
 800111e:	3b02      	subs	r3, #2
 8001120:	443c      	add	r4, r7
 8001122:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8001126:	fba0 9302 	umull	r9, r3, r0, r2
 800112a:	eba4 040c 	sub.w	r4, r4, ip
 800112e:	429c      	cmp	r4, r3
 8001130:	46ce      	mov	lr, r9
 8001132:	469c      	mov	ip, r3
 8001134:	d351      	bcc.n	80011da <__udivmoddi4+0x28a>
 8001136:	d04e      	beq.n	80011d6 <__udivmoddi4+0x286>
 8001138:	b155      	cbz	r5, 8001150 <__udivmoddi4+0x200>
 800113a:	ebb8 030e 	subs.w	r3, r8, lr
 800113e:	eb64 040c 	sbc.w	r4, r4, ip
 8001142:	fa04 f606 	lsl.w	r6, r4, r6
 8001146:	40cb      	lsrs	r3, r1
 8001148:	431e      	orrs	r6, r3
 800114a:	40cc      	lsrs	r4, r1
 800114c:	e9c5 6400 	strd	r6, r4, [r5]
 8001150:	2100      	movs	r1, #0
 8001152:	e750      	b.n	8000ff6 <__udivmoddi4+0xa6>
 8001154:	f1c2 0320 	rsb	r3, r2, #32
 8001158:	fa20 f103 	lsr.w	r1, r0, r3
 800115c:	fa0c fc02 	lsl.w	ip, ip, r2
 8001160:	fa24 f303 	lsr.w	r3, r4, r3
 8001164:	4094      	lsls	r4, r2
 8001166:	430c      	orrs	r4, r1
 8001168:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800116c:	fa00 fe02 	lsl.w	lr, r0, r2
 8001170:	fa1f f78c 	uxth.w	r7, ip
 8001174:	fbb3 f0f8 	udiv	r0, r3, r8
 8001178:	fb08 3110 	mls	r1, r8, r0, r3
 800117c:	0c23      	lsrs	r3, r4, #16
 800117e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8001182:	fb00 f107 	mul.w	r1, r0, r7
 8001186:	4299      	cmp	r1, r3
 8001188:	d908      	bls.n	800119c <__udivmoddi4+0x24c>
 800118a:	eb1c 0303 	adds.w	r3, ip, r3
 800118e:	f100 36ff 	add.w	r6, r0, #4294967295
 8001192:	d22c      	bcs.n	80011ee <__udivmoddi4+0x29e>
 8001194:	4299      	cmp	r1, r3
 8001196:	d92a      	bls.n	80011ee <__udivmoddi4+0x29e>
 8001198:	3802      	subs	r0, #2
 800119a:	4463      	add	r3, ip
 800119c:	1a5b      	subs	r3, r3, r1
 800119e:	b2a4      	uxth	r4, r4
 80011a0:	fbb3 f1f8 	udiv	r1, r3, r8
 80011a4:	fb08 3311 	mls	r3, r8, r1, r3
 80011a8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80011ac:	fb01 f307 	mul.w	r3, r1, r7
 80011b0:	42a3      	cmp	r3, r4
 80011b2:	d908      	bls.n	80011c6 <__udivmoddi4+0x276>
 80011b4:	eb1c 0404 	adds.w	r4, ip, r4
 80011b8:	f101 36ff 	add.w	r6, r1, #4294967295
 80011bc:	d213      	bcs.n	80011e6 <__udivmoddi4+0x296>
 80011be:	42a3      	cmp	r3, r4
 80011c0:	d911      	bls.n	80011e6 <__udivmoddi4+0x296>
 80011c2:	3902      	subs	r1, #2
 80011c4:	4464      	add	r4, ip
 80011c6:	1ae4      	subs	r4, r4, r3
 80011c8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80011cc:	e739      	b.n	8001042 <__udivmoddi4+0xf2>
 80011ce:	4604      	mov	r4, r0
 80011d0:	e6f0      	b.n	8000fb4 <__udivmoddi4+0x64>
 80011d2:	4608      	mov	r0, r1
 80011d4:	e706      	b.n	8000fe4 <__udivmoddi4+0x94>
 80011d6:	45c8      	cmp	r8, r9
 80011d8:	d2ae      	bcs.n	8001138 <__udivmoddi4+0x1e8>
 80011da:	ebb9 0e02 	subs.w	lr, r9, r2
 80011de:	eb63 0c07 	sbc.w	ip, r3, r7
 80011e2:	3801      	subs	r0, #1
 80011e4:	e7a8      	b.n	8001138 <__udivmoddi4+0x1e8>
 80011e6:	4631      	mov	r1, r6
 80011e8:	e7ed      	b.n	80011c6 <__udivmoddi4+0x276>
 80011ea:	4603      	mov	r3, r0
 80011ec:	e799      	b.n	8001122 <__udivmoddi4+0x1d2>
 80011ee:	4630      	mov	r0, r6
 80011f0:	e7d4      	b.n	800119c <__udivmoddi4+0x24c>
 80011f2:	46d6      	mov	lr, sl
 80011f4:	e77f      	b.n	80010f6 <__udivmoddi4+0x1a6>
 80011f6:	4463      	add	r3, ip
 80011f8:	3802      	subs	r0, #2
 80011fa:	e74d      	b.n	8001098 <__udivmoddi4+0x148>
 80011fc:	4606      	mov	r6, r0
 80011fe:	4623      	mov	r3, r4
 8001200:	4608      	mov	r0, r1
 8001202:	e70f      	b.n	8001024 <__udivmoddi4+0xd4>
 8001204:	3e02      	subs	r6, #2
 8001206:	4463      	add	r3, ip
 8001208:	e730      	b.n	800106c <__udivmoddi4+0x11c>
 800120a:	bf00      	nop

0800120c <__aeabi_idiv0>:
 800120c:	4770      	bx	lr
 800120e:	bf00      	nop

08001210 <draw_tictactoe_grid>:
 *
 * The grid consists of 3x3 cells, with appropriate spacing and positioning
 * for the labels and lines. The drawing is done using the `setChar()` function
 * for characters and `setPixel1()` for drawing the grid lines.
 */
void draw_tictactoe_grid() {
 8001210:	b580      	push	{r7, lr}
 8001212:	b082      	sub	sp, #8
 8001214:	af00      	add	r7, sp, #0
    int i, j;

    // Draw the letters above the grid for column labels (a, b, c)
    setChar('a', GRID_X_OFFSET + CELL_WIDTH / 2, GRID_Y_OFFSET - CELL_HEIGHT, true);  // 'a' above the first column
 8001216:	2301      	movs	r3, #1
 8001218:	2200      	movs	r2, #0
 800121a:	210f      	movs	r1, #15
 800121c:	2061      	movs	r0, #97	@ 0x61
 800121e:	f000 f9f1 	bl	8001604 <setChar>
    setChar('b', GRID_X_OFFSET + CELL_WIDTH * 3 / 2, GRID_Y_OFFSET - CELL_HEIGHT, true); // 'b' above the second column
 8001222:	2301      	movs	r3, #1
 8001224:	2200      	movs	r2, #0
 8001226:	2119      	movs	r1, #25
 8001228:	2062      	movs	r0, #98	@ 0x62
 800122a:	f000 f9eb 	bl	8001604 <setChar>
    setChar('c', GRID_X_OFFSET + CELL_WIDTH * 5 / 2, GRID_Y_OFFSET - CELL_HEIGHT, true); // 'c' above the third column
 800122e:	2301      	movs	r3, #1
 8001230:	2200      	movs	r2, #0
 8001232:	2123      	movs	r1, #35	@ 0x23
 8001234:	2063      	movs	r0, #99	@ 0x63
 8001236:	f000 f9e5 	bl	8001604 <setChar>

    // Draw the numbers to the left of the grid for row labels (1, 2, 3)
    setChar('1', GRID_X_OFFSET - CELL_WIDTH, GRID_Y_OFFSET + CELL_HEIGHT / 2, true);  // '1' left of the first row
 800123a:	2301      	movs	r3, #1
 800123c:	220f      	movs	r2, #15
 800123e:	2100      	movs	r1, #0
 8001240:	2031      	movs	r0, #49	@ 0x31
 8001242:	f000 f9df 	bl	8001604 <setChar>
    setChar('2', GRID_X_OFFSET - CELL_WIDTH, GRID_Y_OFFSET + CELL_HEIGHT * 3 / 2, true); // '2' left of the second row
 8001246:	2301      	movs	r3, #1
 8001248:	2219      	movs	r2, #25
 800124a:	2100      	movs	r1, #0
 800124c:	2032      	movs	r0, #50	@ 0x32
 800124e:	f000 f9d9 	bl	8001604 <setChar>
    setChar('3', GRID_X_OFFSET - CELL_WIDTH, GRID_Y_OFFSET + CELL_HEIGHT * 5 / 2, true); // '3' left of the third row
 8001252:	2301      	movs	r3, #1
 8001254:	2223      	movs	r2, #35	@ 0x23
 8001256:	2100      	movs	r1, #0
 8001258:	2033      	movs	r0, #51	@ 0x33
 800125a:	f000 f9d3 	bl	8001604 <setChar>

    // Draw horizontal lines to form the grid structure
    for (i = 0; i <= 3; i++) {  // Loop through 4 lines (3 cells + separators)
 800125e:	2300      	movs	r3, #0
 8001260:	607b      	str	r3, [r7, #4]
 8001262:	e018      	b.n	8001296 <draw_tictactoe_grid+0x86>
        for (j = 0; j < GRID_WIDTH; j++) {  // Draw the horizontal pixels for each line
 8001264:	2300      	movs	r3, #0
 8001266:	603b      	str	r3, [r7, #0]
 8001268:	e00f      	b.n	800128a <draw_tictactoe_grid+0x7a>
            setPixel1(GRID_X_OFFSET + j, GRID_Y_OFFSET + i * CELL_HEIGHT, true);
 800126a:	683b      	ldr	r3, [r7, #0]
 800126c:	f103 000a 	add.w	r0, r3, #10
 8001270:	687b      	ldr	r3, [r7, #4]
 8001272:	1c5a      	adds	r2, r3, #1
 8001274:	4613      	mov	r3, r2
 8001276:	009b      	lsls	r3, r3, #2
 8001278:	4413      	add	r3, r2
 800127a:	005b      	lsls	r3, r3, #1
 800127c:	2201      	movs	r2, #1
 800127e:	4619      	mov	r1, r3
 8001280:	f000 f95e 	bl	8001540 <setPixel1>
        for (j = 0; j < GRID_WIDTH; j++) {  // Draw the horizontal pixels for each line
 8001284:	683b      	ldr	r3, [r7, #0]
 8001286:	3301      	adds	r3, #1
 8001288:	603b      	str	r3, [r7, #0]
 800128a:	683b      	ldr	r3, [r7, #0]
 800128c:	2b1d      	cmp	r3, #29
 800128e:	ddec      	ble.n	800126a <draw_tictactoe_grid+0x5a>
    for (i = 0; i <= 3; i++) {  // Loop through 4 lines (3 cells + separators)
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	3301      	adds	r3, #1
 8001294:	607b      	str	r3, [r7, #4]
 8001296:	687b      	ldr	r3, [r7, #4]
 8001298:	2b03      	cmp	r3, #3
 800129a:	dde3      	ble.n	8001264 <draw_tictactoe_grid+0x54>
        }
    }

    // Draw vertical lines to form the grid structure
    for (i = 0; i <= 3; i++) {  // Loop through 4 lines (3 cells + separators)
 800129c:	2300      	movs	r3, #0
 800129e:	607b      	str	r3, [r7, #4]
 80012a0:	e018      	b.n	80012d4 <draw_tictactoe_grid+0xc4>
        for (j = 0; j < GRID_HEIGHT; j++) {  // Draw the vertical pixels for each line
 80012a2:	2300      	movs	r3, #0
 80012a4:	603b      	str	r3, [r7, #0]
 80012a6:	e00f      	b.n	80012c8 <draw_tictactoe_grid+0xb8>
            setPixel1(GRID_X_OFFSET + i * CELL_WIDTH, GRID_Y_OFFSET + j, true);
 80012a8:	687b      	ldr	r3, [r7, #4]
 80012aa:	1c5a      	adds	r2, r3, #1
 80012ac:	4613      	mov	r3, r2
 80012ae:	009b      	lsls	r3, r3, #2
 80012b0:	4413      	add	r3, r2
 80012b2:	005b      	lsls	r3, r3, #1
 80012b4:	4618      	mov	r0, r3
 80012b6:	683b      	ldr	r3, [r7, #0]
 80012b8:	330a      	adds	r3, #10
 80012ba:	2201      	movs	r2, #1
 80012bc:	4619      	mov	r1, r3
 80012be:	f000 f93f 	bl	8001540 <setPixel1>
        for (j = 0; j < GRID_HEIGHT; j++) {  // Draw the vertical pixels for each line
 80012c2:	683b      	ldr	r3, [r7, #0]
 80012c4:	3301      	adds	r3, #1
 80012c6:	603b      	str	r3, [r7, #0]
 80012c8:	683b      	ldr	r3, [r7, #0]
 80012ca:	2b1d      	cmp	r3, #29
 80012cc:	ddec      	ble.n	80012a8 <draw_tictactoe_grid+0x98>
    for (i = 0; i <= 3; i++) {  // Loop through 4 lines (3 cells + separators)
 80012ce:	687b      	ldr	r3, [r7, #4]
 80012d0:	3301      	adds	r3, #1
 80012d2:	607b      	str	r3, [r7, #4]
 80012d4:	687b      	ldr	r3, [r7, #4]
 80012d6:	2b03      	cmp	r3, #3
 80012d8:	dde3      	ble.n	80012a2 <draw_tictactoe_grid+0x92>
        }
    }
}
 80012da:	bf00      	nop
 80012dc:	bf00      	nop
 80012de:	3708      	adds	r7, #8
 80012e0:	46bd      	mov	sp, r7
 80012e2:	bd80      	pop	{r7, pc}

080012e4 <print_tictactoe_board>:
 *
 * @param board A pointer to the array representing the Tic-Tac-Toe game board.
 *              The board is a 1D array of size 9, where each element represents a cell.
 *              Values should be either `O`, `X`, or a neutral value (like 0 or -1) for an empty cell.
 */
void print_tictactoe_board(int8_t *board) {
 80012e4:	b580      	push	{r7, lr}
 80012e6:	b084      	sub	sp, #16
 80012e8:	af00      	add	r7, sp, #0
 80012ea:	6078      	str	r0, [r7, #4]
    uint8_t i, j;

    // Loop through each cell in the 3x3 Tic-Tac-Toe grid
    for (i = 0; i < 3; i++) {
 80012ec:	2300      	movs	r3, #0
 80012ee:	73fb      	strb	r3, [r7, #15]
 80012f0:	e03a      	b.n	8001368 <print_tictactoe_board+0x84>
        for (j = 0; j < 3; j++) {
 80012f2:	2300      	movs	r3, #0
 80012f4:	73bb      	strb	r3, [r7, #14]
 80012f6:	e031      	b.n	800135c <print_tictactoe_board+0x78>
            // Draw the appropriate symbol for the current cell
            if (board[i * 3 + j] == O) {
 80012f8:	7bfa      	ldrb	r2, [r7, #15]
 80012fa:	4613      	mov	r3, r2
 80012fc:	005b      	lsls	r3, r3, #1
 80012fe:	441a      	add	r2, r3
 8001300:	7bbb      	ldrb	r3, [r7, #14]
 8001302:	4413      	add	r3, r2
 8001304:	461a      	mov	r2, r3
 8001306:	687b      	ldr	r3, [r7, #4]
 8001308:	4413      	add	r3, r2
 800130a:	f993 3000 	ldrsb.w	r3, [r3]
 800130e:	f113 0f40 	cmn.w	r3, #64	@ 0x40
 8001312:	d106      	bne.n	8001322 <print_tictactoe_board+0x3e>
                draw_symbol_in_cell(i, j, 'O');  // Draw 'O' symbol
 8001314:	7bfb      	ldrb	r3, [r7, #15]
 8001316:	7bb9      	ldrb	r1, [r7, #14]
 8001318:	224f      	movs	r2, #79	@ 0x4f
 800131a:	4618      	mov	r0, r3
 800131c:	f000 f82c 	bl	8001378 <draw_symbol_in_cell>
 8001320:	e019      	b.n	8001356 <print_tictactoe_board+0x72>
            } else if (board[i * 3 + j] == X) {
 8001322:	7bfa      	ldrb	r2, [r7, #15]
 8001324:	4613      	mov	r3, r2
 8001326:	005b      	lsls	r3, r3, #1
 8001328:	441a      	add	r2, r3
 800132a:	7bbb      	ldrb	r3, [r7, #14]
 800132c:	4413      	add	r3, r2
 800132e:	461a      	mov	r2, r3
 8001330:	687b      	ldr	r3, [r7, #4]
 8001332:	4413      	add	r3, r2
 8001334:	f993 3000 	ldrsb.w	r3, [r3]
 8001338:	2b40      	cmp	r3, #64	@ 0x40
 800133a:	d106      	bne.n	800134a <print_tictactoe_board+0x66>
                draw_symbol_in_cell(i, j, 'X');  // Draw 'X' symbol
 800133c:	7bfb      	ldrb	r3, [r7, #15]
 800133e:	7bb9      	ldrb	r1, [r7, #14]
 8001340:	2258      	movs	r2, #88	@ 0x58
 8001342:	4618      	mov	r0, r3
 8001344:	f000 f818 	bl	8001378 <draw_symbol_in_cell>
 8001348:	e005      	b.n	8001356 <print_tictactoe_board+0x72>
            } else {
                draw_symbol_in_cell(i, j, ' ');  // Draw empty cell
 800134a:	7bfb      	ldrb	r3, [r7, #15]
 800134c:	7bb9      	ldrb	r1, [r7, #14]
 800134e:	2220      	movs	r2, #32
 8001350:	4618      	mov	r0, r3
 8001352:	f000 f811 	bl	8001378 <draw_symbol_in_cell>
        for (j = 0; j < 3; j++) {
 8001356:	7bbb      	ldrb	r3, [r7, #14]
 8001358:	3301      	adds	r3, #1
 800135a:	73bb      	strb	r3, [r7, #14]
 800135c:	7bbb      	ldrb	r3, [r7, #14]
 800135e:	2b02      	cmp	r3, #2
 8001360:	d9ca      	bls.n	80012f8 <print_tictactoe_board+0x14>
    for (i = 0; i < 3; i++) {
 8001362:	7bfb      	ldrb	r3, [r7, #15]
 8001364:	3301      	adds	r3, #1
 8001366:	73fb      	strb	r3, [r7, #15]
 8001368:	7bfb      	ldrb	r3, [r7, #15]
 800136a:	2b02      	cmp	r3, #2
 800136c:	d9c1      	bls.n	80012f2 <print_tictactoe_board+0xe>
            }
        }
    }
}
 800136e:	bf00      	nop
 8001370:	bf00      	nop
 8001372:	3710      	adds	r7, #16
 8001374:	46bd      	mov	sp, r7
 8001376:	bd80      	pop	{r7, pc}

08001378 <draw_symbol_in_cell>:
 *
 * @param row The row index (0 to 2) of the cell where the symbol should be drawn.
 * @param col The column index (0 to 2) of the cell where the symbol should be drawn.
 * @param symbol The symbol to draw: either 'X' or 'O'.
 */
void draw_symbol_in_cell(int row, int col, char symbol){
 8001378:	b580      	push	{r7, lr}
 800137a:	b088      	sub	sp, #32
 800137c:	af00      	add	r7, sp, #0
 800137e:	60f8      	str	r0, [r7, #12]
 8001380:	60b9      	str	r1, [r7, #8]
 8001382:	4613      	mov	r3, r2
 8001384:	71fb      	strb	r3, [r7, #7]
    int i, j;
    // Calculate the top-left position of the cell
    int base_x = GRID_X_OFFSET + col * CELL_WIDTH;
 8001386:	68bb      	ldr	r3, [r7, #8]
 8001388:	1c5a      	adds	r2, r3, #1
 800138a:	4613      	mov	r3, r2
 800138c:	009b      	lsls	r3, r3, #2
 800138e:	4413      	add	r3, r2
 8001390:	005b      	lsls	r3, r3, #1
 8001392:	617b      	str	r3, [r7, #20]
    int base_y = GRID_Y_OFFSET + row * CELL_HEIGHT;
 8001394:	68fb      	ldr	r3, [r7, #12]
 8001396:	1c5a      	adds	r2, r3, #1
 8001398:	4613      	mov	r3, r2
 800139a:	009b      	lsls	r3, r3, #2
 800139c:	4413      	add	r3, r2
 800139e:	005b      	lsls	r3, r3, #1
 80013a0:	613b      	str	r3, [r7, #16]

    // Check if the symbol is 'X'
    if (symbol == 'X') {
 80013a2:	79fb      	ldrb	r3, [r7, #7]
 80013a4:	2b58      	cmp	r3, #88	@ 0x58
 80013a6:	d11f      	bne.n	80013e8 <draw_symbol_in_cell+0x70>
        // Draw the 'X': two intersecting diagonals
        for (i = 0; i < CELL_WIDTH; i++) {
 80013a8:	2300      	movs	r3, #0
 80013aa:	61fb      	str	r3, [r7, #28]
 80013ac:	e018      	b.n	80013e0 <draw_symbol_in_cell+0x68>
            // Draw the first diagonal (from top-left to bottom-right)
            setPixel1(base_x + i, base_y + i, true);
 80013ae:	697a      	ldr	r2, [r7, #20]
 80013b0:	69fb      	ldr	r3, [r7, #28]
 80013b2:	18d0      	adds	r0, r2, r3
 80013b4:	693a      	ldr	r2, [r7, #16]
 80013b6:	69fb      	ldr	r3, [r7, #28]
 80013b8:	4413      	add	r3, r2
 80013ba:	2201      	movs	r2, #1
 80013bc:	4619      	mov	r1, r3
 80013be:	f000 f8bf 	bl	8001540 <setPixel1>
            // Draw the second diagonal (from top-right to bottom-left)
            setPixel1(base_x + i, base_y + (CELL_HEIGHT - 1 - i), true);
 80013c2:	697a      	ldr	r2, [r7, #20]
 80013c4:	69fb      	ldr	r3, [r7, #28]
 80013c6:	18d0      	adds	r0, r2, r3
 80013c8:	69fb      	ldr	r3, [r7, #28]
 80013ca:	f1c3 0209 	rsb	r2, r3, #9
 80013ce:	693b      	ldr	r3, [r7, #16]
 80013d0:	4413      	add	r3, r2
 80013d2:	2201      	movs	r2, #1
 80013d4:	4619      	mov	r1, r3
 80013d6:	f000 f8b3 	bl	8001540 <setPixel1>
        for (i = 0; i < CELL_WIDTH; i++) {
 80013da:	69fb      	ldr	r3, [r7, #28]
 80013dc:	3301      	adds	r3, #1
 80013de:	61fb      	str	r3, [r7, #28]
 80013e0:	69fb      	ldr	r3, [r7, #28]
 80013e2:	2b09      	cmp	r3, #9
 80013e4:	dde3      	ble.n	80013ae <draw_symbol_in_cell+0x36>
                    setPixel1(base_x + i, base_y + j, true);
                }
            }
        }
    }
}
 80013e6:	e02d      	b.n	8001444 <draw_symbol_in_cell+0xcc>
    else if (symbol == 'O') {
 80013e8:	79fb      	ldrb	r3, [r7, #7]
 80013ea:	2b4f      	cmp	r3, #79	@ 0x4f
 80013ec:	d12a      	bne.n	8001444 <draw_symbol_in_cell+0xcc>
        for (i = 0; i < CELL_WIDTH; i++) {
 80013ee:	2300      	movs	r3, #0
 80013f0:	61fb      	str	r3, [r7, #28]
 80013f2:	e024      	b.n	800143e <draw_symbol_in_cell+0xc6>
            for (j = 0; j < CELL_HEIGHT; j++) {
 80013f4:	2300      	movs	r3, #0
 80013f6:	61bb      	str	r3, [r7, #24]
 80013f8:	e01b      	b.n	8001432 <draw_symbol_in_cell+0xba>
                if ((i - CELL_WIDTH / 2) * (i - CELL_WIDTH / 2) + (j - CELL_HEIGHT / 2) * (j - CELL_HEIGHT / 2)
 80013fa:	69fb      	ldr	r3, [r7, #28]
 80013fc:	3b05      	subs	r3, #5
 80013fe:	69fa      	ldr	r2, [r7, #28]
 8001400:	3a05      	subs	r2, #5
 8001402:	fb03 f202 	mul.w	r2, r3, r2
 8001406:	69bb      	ldr	r3, [r7, #24]
 8001408:	3b05      	subs	r3, #5
 800140a:	69b9      	ldr	r1, [r7, #24]
 800140c:	3905      	subs	r1, #5
 800140e:	fb01 f303 	mul.w	r3, r1, r3
 8001412:	4413      	add	r3, r2
 8001414:	2b19      	cmp	r3, #25
 8001416:	dc09      	bgt.n	800142c <draw_symbol_in_cell+0xb4>
                    setPixel1(base_x + i, base_y + j, true);
 8001418:	697a      	ldr	r2, [r7, #20]
 800141a:	69fb      	ldr	r3, [r7, #28]
 800141c:	18d0      	adds	r0, r2, r3
 800141e:	693a      	ldr	r2, [r7, #16]
 8001420:	69bb      	ldr	r3, [r7, #24]
 8001422:	4413      	add	r3, r2
 8001424:	2201      	movs	r2, #1
 8001426:	4619      	mov	r1, r3
 8001428:	f000 f88a 	bl	8001540 <setPixel1>
            for (j = 0; j < CELL_HEIGHT; j++) {
 800142c:	69bb      	ldr	r3, [r7, #24]
 800142e:	3301      	adds	r3, #1
 8001430:	61bb      	str	r3, [r7, #24]
 8001432:	69bb      	ldr	r3, [r7, #24]
 8001434:	2b09      	cmp	r3, #9
 8001436:	dde0      	ble.n	80013fa <draw_symbol_in_cell+0x82>
        for (i = 0; i < CELL_WIDTH; i++) {
 8001438:	69fb      	ldr	r3, [r7, #28]
 800143a:	3301      	adds	r3, #1
 800143c:	61fb      	str	r3, [r7, #28]
 800143e:	69fb      	ldr	r3, [r7, #28]
 8001440:	2b09      	cmp	r3, #9
 8001442:	ddd7      	ble.n	80013f4 <draw_symbol_in_cell+0x7c>
}
 8001444:	bf00      	nop
 8001446:	3720      	adds	r7, #32
 8001448:	46bd      	mov	sp, r7
 800144a:	bd80      	pop	{r7, pc}

0800144c <spi_write>:
 * 2. It sends the byte using the `HAL_SPI_Transmit()` function and checks the result.
 * 3. It waits for the SPI bus to be idle after the transmission is completed.
 *
 * @param c The byte to transmit.
 */
void spi_write(unsigned char c) {
 800144c:	b580      	push	{r7, lr}
 800144e:	b084      	sub	sp, #16
 8001450:	af00      	add	r7, sp, #0
 8001452:	4603      	mov	r3, r0
 8001454:	71fb      	strb	r3, [r7, #7]
    // Check for overrun errors before transmission
    if (__HAL_SPI_GET_FLAG(&hspi2, SPI_FLAG_OVR)) {
 8001456:	4b16      	ldr	r3, [pc, #88]	@ (80014b0 <spi_write+0x64>)
 8001458:	681b      	ldr	r3, [r3, #0]
 800145a:	689b      	ldr	r3, [r3, #8]
 800145c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001460:	2b40      	cmp	r3, #64	@ 0x40
 8001462:	d10a      	bne.n	800147a <spi_write+0x2e>
        // Clear overrun error flag if it is set
        __HAL_SPI_CLEAR_OVRFLAG(&hspi2);
 8001464:	2300      	movs	r3, #0
 8001466:	60bb      	str	r3, [r7, #8]
 8001468:	4b11      	ldr	r3, [pc, #68]	@ (80014b0 <spi_write+0x64>)
 800146a:	681b      	ldr	r3, [r3, #0]
 800146c:	68db      	ldr	r3, [r3, #12]
 800146e:	60bb      	str	r3, [r7, #8]
 8001470:	4b0f      	ldr	r3, [pc, #60]	@ (80014b0 <spi_write+0x64>)
 8001472:	681b      	ldr	r3, [r3, #0]
 8001474:	689b      	ldr	r3, [r3, #8]
 8001476:	60bb      	str	r3, [r7, #8]
 8001478:	68bb      	ldr	r3, [r7, #8]
    }

    // Use HAL function to transmit a byte over SPI
    HAL_StatusTypeDef status = HAL_SPI_Transmit(&hspi2, &c, 1, HAL_MAX_DELAY);
 800147a:	1df9      	adds	r1, r7, #7
 800147c:	f04f 33ff 	mov.w	r3, #4294967295
 8001480:	2201      	movs	r2, #1
 8001482:	480b      	ldr	r0, [pc, #44]	@ (80014b0 <spi_write+0x64>)
 8001484:	f004 fd59 	bl	8005f3a <HAL_SPI_Transmit>
 8001488:	4603      	mov	r3, r0
 800148a:	73fb      	strb	r3, [r7, #15]

    // Check the status of the transmission
    if (status != HAL_OK) {
 800148c:	7bfb      	ldrb	r3, [r7, #15]
 800148e:	2b00      	cmp	r3, #0
 8001490:	d001      	beq.n	8001496 <spi_write+0x4a>
        // Handle error if the transmission fails
        Error_Handler();
 8001492:	f000 fe1d 	bl	80020d0 <Error_Handler>
    }

    // Wait for the SPI bus to be idle (no ongoing transmission)
    while (__HAL_SPI_GET_FLAG(&hspi2, SPI_FLAG_BSY)) {
 8001496:	bf00      	nop
 8001498:	4b05      	ldr	r3, [pc, #20]	@ (80014b0 <spi_write+0x64>)
 800149a:	681b      	ldr	r3, [r3, #0]
 800149c:	689b      	ldr	r3, [r3, #8]
 800149e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80014a2:	2b80      	cmp	r3, #128	@ 0x80
 80014a4:	d0f8      	beq.n	8001498 <spi_write+0x4c>
        // Wait until SPI is not busy
    }
}
 80014a6:	bf00      	nop
 80014a8:	bf00      	nop
 80014aa:	3710      	adds	r7, #16
 80014ac:	46bd      	mov	sp, r7
 80014ae:	bd80      	pop	{r7, pc}
 80014b0:	20000924 	.word	0x20000924

080014b4 <LCDcommand>:
 * by pulling the Chip Select (CS) low, then sends the command using the `spi_write()` function,
 * and finally deselects the LCD chip by pulling the CS high.
 *
 * @param data The command byte to send to the LCD.
 */
void LCDcommand(unsigned char data) {
 80014b4:	b580      	push	{r7, lr}
 80014b6:	b082      	sub	sp, #8
 80014b8:	af00      	add	r7, sp, #0
 80014ba:	4603      	mov	r3, r0
 80014bc:	71fb      	strb	r3, [r7, #7]
    CS0;              // Pull CS low to select the LCD chip
 80014be:	4b09      	ldr	r3, [pc, #36]	@ (80014e4 <LCDcommand+0x30>)
 80014c0:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 80014c4:	619a      	str	r2, [r3, #24]
    LCD_COMMAND;      // Set the LCD in command mode
 80014c6:	4b07      	ldr	r3, [pc, #28]	@ (80014e4 <LCDcommand+0x30>)
 80014c8:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80014cc:	619a      	str	r2, [r3, #24]
    spi_write(data);  // Send the command byte using SPI
 80014ce:	79fb      	ldrb	r3, [r7, #7]
 80014d0:	4618      	mov	r0, r3
 80014d2:	f7ff ffbb 	bl	800144c <spi_write>
    CS1;              // Pull CS high to deselect the LCD chip
 80014d6:	4b03      	ldr	r3, [pc, #12]	@ (80014e4 <LCDcommand+0x30>)
 80014d8:	2210      	movs	r2, #16
 80014da:	619a      	str	r2, [r3, #24]
}
 80014dc:	bf00      	nop
 80014de:	3708      	adds	r7, #8
 80014e0:	46bd      	mov	sp, r7
 80014e2:	bd80      	pop	{r7, pc}
 80014e4:	40020000 	.word	0x40020000

080014e8 <LCDdata>:
 * by pulling the Chip Select (CS) low, then sends the data using the `spi_write()` function,
 * and finally deselects the LCD chip by pulling the CS high.
 *
 * @param data The data byte to send to the LCD.
 */
void LCDdata(unsigned char data) {
 80014e8:	b580      	push	{r7, lr}
 80014ea:	b082      	sub	sp, #8
 80014ec:	af00      	add	r7, sp, #0
 80014ee:	4603      	mov	r3, r0
 80014f0:	71fb      	strb	r3, [r7, #7]
    CS0;              // Pull CS low to select the LCD chip
 80014f2:	4b09      	ldr	r3, [pc, #36]	@ (8001518 <LCDdata+0x30>)
 80014f4:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 80014f8:	619a      	str	r2, [r3, #24]
    LCD_DATA;         // Set the LCD in data mode
 80014fa:	4b07      	ldr	r3, [pc, #28]	@ (8001518 <LCDdata+0x30>)
 80014fc:	2201      	movs	r2, #1
 80014fe:	619a      	str	r2, [r3, #24]
    spi_write(data);  // Send the data byte using SPI
 8001500:	79fb      	ldrb	r3, [r7, #7]
 8001502:	4618      	mov	r0, r3
 8001504:	f7ff ffa2 	bl	800144c <spi_write>
    CS1;              // Pull CS high to deselect the LCD chip
 8001508:	4b03      	ldr	r3, [pc, #12]	@ (8001518 <LCDdata+0x30>)
 800150a:	2210      	movs	r2, #16
 800150c:	619a      	str	r2, [r3, #24]
}
 800150e:	bf00      	nop
 8001510:	3708      	adds	r7, #8
 8001512:	46bd      	mov	sp, r7
 8001514:	bd80      	pop	{r7, pc}
 8001516:	bf00      	nop
 8001518:	40020000 	.word	0x40020000

0800151c <LCD_Print>:
 *
 * @param message The string to display on the LCD.
 * @param x The x-coordinate where the string should be displayed.
 * @param y The y-coordinate where the string should be displayed.
 */
void LCD_Print(const char *message, int x, int y) {
 800151c:	b580      	push	{r7, lr}
 800151e:	b084      	sub	sp, #16
 8001520:	af00      	add	r7, sp, #0
 8001522:	60f8      	str	r0, [r7, #12]
 8001524:	60b9      	str	r1, [r7, #8]
 8001526:	607a      	str	r2, [r7, #4]
    setStr((char *)message, x, y, BLACK);  // Use the existing setStr() function to print the string
 8001528:	2301      	movs	r3, #1
 800152a:	687a      	ldr	r2, [r7, #4]
 800152c:	68b9      	ldr	r1, [r7, #8]
 800152e:	68f8      	ldr	r0, [r7, #12]
 8001530:	f000 f8c0 	bl	80016b4 <setStr>
    updateDisplay();  // Update the display to show the new string
 8001534:	f000 f942 	bl	80017bc <updateDisplay>
}
 8001538:	bf00      	nop
 800153a:	3710      	adds	r7, #16
 800153c:	46bd      	mov	sp, r7
 800153e:	bd80      	pop	{r7, pc}

08001540 <setPixel1>:
 * @param bw A boolean value indicating the color to set the pixel to:
 *           - `true` for black
 *           - `false` for white
 */
void setPixel1(int x, int y, bool bw)
{
 8001540:	b480      	push	{r7}
 8001542:	b087      	sub	sp, #28
 8001544:	af00      	add	r7, sp, #0
 8001546:	60f8      	str	r0, [r7, #12]
 8001548:	60b9      	str	r1, [r7, #8]
 800154a:	4613      	mov	r3, r2
 800154c:	71fb      	strb	r3, [r7, #7]
  // First, double check that the coordinate is in range.
  if ((x >= 0) && (x < LCD_WIDTH) && (y >= 0) && (y < LCD_HEIGHT))
 800154e:	68fb      	ldr	r3, [r7, #12]
 8001550:	2b00      	cmp	r3, #0
 8001552:	db4f      	blt.n	80015f4 <setPixel1+0xb4>
 8001554:	68fb      	ldr	r3, [r7, #12]
 8001556:	2b53      	cmp	r3, #83	@ 0x53
 8001558:	dc4c      	bgt.n	80015f4 <setPixel1+0xb4>
 800155a:	68bb      	ldr	r3, [r7, #8]
 800155c:	2b00      	cmp	r3, #0
 800155e:	db49      	blt.n	80015f4 <setPixel1+0xb4>
 8001560:	68bb      	ldr	r3, [r7, #8]
 8001562:	2b2f      	cmp	r3, #47	@ 0x2f
 8001564:	dc46      	bgt.n	80015f4 <setPixel1+0xb4>
  {
    int shift = y % 8;
 8001566:	68bb      	ldr	r3, [r7, #8]
 8001568:	425a      	negs	r2, r3
 800156a:	f003 0307 	and.w	r3, r3, #7
 800156e:	f002 0207 	and.w	r2, r2, #7
 8001572:	bf58      	it	pl
 8001574:	4253      	negpl	r3, r2
 8001576:	617b      	str	r3, [r7, #20]

    if (bw) // If black, set the bit.
 8001578:	79fb      	ldrb	r3, [r7, #7]
 800157a:	2b00      	cmp	r3, #0
 800157c:	d01c      	beq.n	80015b8 <setPixel1+0x78>
      displayMap_5110[x + (y / 8) * LCD_WIDTH] |= 1 << shift;
 800157e:	68bb      	ldr	r3, [r7, #8]
 8001580:	2b00      	cmp	r3, #0
 8001582:	da00      	bge.n	8001586 <setPixel1+0x46>
 8001584:	3307      	adds	r3, #7
 8001586:	10db      	asrs	r3, r3, #3
 8001588:	2254      	movs	r2, #84	@ 0x54
 800158a:	fb02 f103 	mul.w	r1, r2, r3
 800158e:	68fa      	ldr	r2, [r7, #12]
 8001590:	440a      	add	r2, r1
 8001592:	491b      	ldr	r1, [pc, #108]	@ (8001600 <setPixel1+0xc0>)
 8001594:	5c8a      	ldrb	r2, [r1, r2]
 8001596:	b251      	sxtb	r1, r2
 8001598:	2001      	movs	r0, #1
 800159a:	697a      	ldr	r2, [r7, #20]
 800159c:	fa00 f202 	lsl.w	r2, r0, r2
 80015a0:	b252      	sxtb	r2, r2
 80015a2:	430a      	orrs	r2, r1
 80015a4:	b251      	sxtb	r1, r2
 80015a6:	2254      	movs	r2, #84	@ 0x54
 80015a8:	fb03 f202 	mul.w	r2, r3, r2
 80015ac:	68fb      	ldr	r3, [r7, #12]
 80015ae:	4413      	add	r3, r2
 80015b0:	b2c9      	uxtb	r1, r1
 80015b2:	4a13      	ldr	r2, [pc, #76]	@ (8001600 <setPixel1+0xc0>)
 80015b4:	54d1      	strb	r1, [r2, r3]
    else   // If white clear the bit.
      displayMap_5110[x + (y / 8) * LCD_WIDTH] &= ~(1 << shift);
  }
}
 80015b6:	e01d      	b.n	80015f4 <setPixel1+0xb4>
      displayMap_5110[x + (y / 8) * LCD_WIDTH] &= ~(1 << shift);
 80015b8:	68bb      	ldr	r3, [r7, #8]
 80015ba:	2b00      	cmp	r3, #0
 80015bc:	da00      	bge.n	80015c0 <setPixel1+0x80>
 80015be:	3307      	adds	r3, #7
 80015c0:	10db      	asrs	r3, r3, #3
 80015c2:	2254      	movs	r2, #84	@ 0x54
 80015c4:	fb02 f103 	mul.w	r1, r2, r3
 80015c8:	68fa      	ldr	r2, [r7, #12]
 80015ca:	440a      	add	r2, r1
 80015cc:	490c      	ldr	r1, [pc, #48]	@ (8001600 <setPixel1+0xc0>)
 80015ce:	5c8a      	ldrb	r2, [r1, r2]
 80015d0:	b251      	sxtb	r1, r2
 80015d2:	2001      	movs	r0, #1
 80015d4:	697a      	ldr	r2, [r7, #20]
 80015d6:	fa00 f202 	lsl.w	r2, r0, r2
 80015da:	b252      	sxtb	r2, r2
 80015dc:	43d2      	mvns	r2, r2
 80015de:	b252      	sxtb	r2, r2
 80015e0:	400a      	ands	r2, r1
 80015e2:	b251      	sxtb	r1, r2
 80015e4:	2254      	movs	r2, #84	@ 0x54
 80015e6:	fb03 f202 	mul.w	r2, r3, r2
 80015ea:	68fb      	ldr	r3, [r7, #12]
 80015ec:	4413      	add	r3, r2
 80015ee:	b2c9      	uxtb	r1, r1
 80015f0:	4a03      	ldr	r2, [pc, #12]	@ (8001600 <setPixel1+0xc0>)
 80015f2:	54d1      	strb	r1, [r2, r3]
}
 80015f4:	bf00      	nop
 80015f6:	371c      	adds	r7, #28
 80015f8:	46bd      	mov	sp, r7
 80015fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015fe:	4770      	bx	lr
 8001600:	20000000 	.word	0x20000000

08001604 <setChar>:
 * @param x The x-coordinate where the character will be placed.
 * @param y The y-coordinate where the character will be placed.
 * @param bw The color of the character, `true` for black, `false` for white.
 */
void setChar(char character, int x, int y, bool bw)
{
 8001604:	b580      	push	{r7, lr}
 8001606:	b088      	sub	sp, #32
 8001608:	af00      	add	r7, sp, #0
 800160a:	60b9      	str	r1, [r7, #8]
 800160c:	607a      	str	r2, [r7, #4]
 800160e:	461a      	mov	r2, r3
 8001610:	4603      	mov	r3, r0
 8001612:	73fb      	strb	r3, [r7, #15]
 8001614:	4613      	mov	r3, r2
 8001616:	73bb      	strb	r3, [r7, #14]
  int column; // Temporary byte to store character's column bitmap
  for (int i = 0; i < 5; i++) // 5 columns per character
 8001618:	2300      	movs	r3, #0
 800161a:	61fb      	str	r3, [r7, #28]
 800161c:	e03f      	b.n	800169e <setChar+0x9a>
  {
    column = ASCII[character - 0x20][i];
 800161e:	7bfb      	ldrb	r3, [r7, #15]
 8001620:	f1a3 0220 	sub.w	r2, r3, #32
 8001624:	4922      	ldr	r1, [pc, #136]	@ (80016b0 <setChar+0xac>)
 8001626:	4613      	mov	r3, r2
 8001628:	009b      	lsls	r3, r3, #2
 800162a:	4413      	add	r3, r2
 800162c:	18ca      	adds	r2, r1, r3
 800162e:	69fb      	ldr	r3, [r7, #28]
 8001630:	4413      	add	r3, r2
 8001632:	781b      	ldrb	r3, [r3, #0]
 8001634:	617b      	str	r3, [r7, #20]
    for (int j = 0; j < 8; j++) // 8 rows per character
 8001636:	2300      	movs	r3, #0
 8001638:	61bb      	str	r3, [r7, #24]
 800163a:	e02a      	b.n	8001692 <setChar+0x8e>
    {
      if (column & (0x01 << j)) // Test bits to set pixels
 800163c:	697a      	ldr	r2, [r7, #20]
 800163e:	69bb      	ldr	r3, [r7, #24]
 8001640:	fa42 f303 	asr.w	r3, r2, r3
 8001644:	f003 0301 	and.w	r3, r3, #1
 8001648:	2b00      	cmp	r3, #0
 800164a:	d00a      	beq.n	8001662 <setChar+0x5e>
        setPixel1(x + i, y + j, bw);
 800164c:	68ba      	ldr	r2, [r7, #8]
 800164e:	69fb      	ldr	r3, [r7, #28]
 8001650:	18d0      	adds	r0, r2, r3
 8001652:	687a      	ldr	r2, [r7, #4]
 8001654:	69bb      	ldr	r3, [r7, #24]
 8001656:	4413      	add	r3, r2
 8001658:	7bba      	ldrb	r2, [r7, #14]
 800165a:	4619      	mov	r1, r3
 800165c:	f7ff ff70 	bl	8001540 <setPixel1>
 8001660:	e014      	b.n	800168c <setChar+0x88>
      else
        setPixel1(x + i, y + j, !bw);
 8001662:	68ba      	ldr	r2, [r7, #8]
 8001664:	69fb      	ldr	r3, [r7, #28]
 8001666:	18d0      	adds	r0, r2, r3
 8001668:	687a      	ldr	r2, [r7, #4]
 800166a:	69bb      	ldr	r3, [r7, #24]
 800166c:	18d1      	adds	r1, r2, r3
 800166e:	7bbb      	ldrb	r3, [r7, #14]
 8001670:	2b00      	cmp	r3, #0
 8001672:	bf14      	ite	ne
 8001674:	2301      	movne	r3, #1
 8001676:	2300      	moveq	r3, #0
 8001678:	b2db      	uxtb	r3, r3
 800167a:	f083 0301 	eor.w	r3, r3, #1
 800167e:	b2db      	uxtb	r3, r3
 8001680:	f003 0301 	and.w	r3, r3, #1
 8001684:	b2db      	uxtb	r3, r3
 8001686:	461a      	mov	r2, r3
 8001688:	f7ff ff5a 	bl	8001540 <setPixel1>
    for (int j = 0; j < 8; j++) // 8 rows per character
 800168c:	69bb      	ldr	r3, [r7, #24]
 800168e:	3301      	adds	r3, #1
 8001690:	61bb      	str	r3, [r7, #24]
 8001692:	69bb      	ldr	r3, [r7, #24]
 8001694:	2b07      	cmp	r3, #7
 8001696:	ddd1      	ble.n	800163c <setChar+0x38>
  for (int i = 0; i < 5; i++) // 5 columns per character
 8001698:	69fb      	ldr	r3, [r7, #28]
 800169a:	3301      	adds	r3, #1
 800169c:	61fb      	str	r3, [r7, #28]
 800169e:	69fb      	ldr	r3, [r7, #28]
 80016a0:	2b04      	cmp	r3, #4
 80016a2:	ddbc      	ble.n	800161e <setChar+0x1a>
    }
  }
}
 80016a4:	bf00      	nop
 80016a6:	bf00      	nop
 80016a8:	3720      	adds	r7, #32
 80016aa:	46bd      	mov	sp, r7
 80016ac:	bd80      	pop	{r7, pc}
 80016ae:	bf00      	nop
 80016b0:	0800bf94 	.word	0x0800bf94

080016b4 <setStr>:
 * @param x The starting x-coordinate for the string.
 * @param y The starting y-coordinate for the string.
 * @param bw The color of the string, `true` for black, `false` for white.
 */
void setStr(char * dString, int x, int y, bool bw)
{
 80016b4:	b580      	push	{r7, lr}
 80016b6:	b086      	sub	sp, #24
 80016b8:	af00      	add	r7, sp, #0
 80016ba:	60f8      	str	r0, [r7, #12]
 80016bc:	60b9      	str	r1, [r7, #8]
 80016be:	607a      	str	r2, [r7, #4]
 80016c0:	70fb      	strb	r3, [r7, #3]
  while (*dString != 0x00) // Loop until null terminator
 80016c2:	e032      	b.n	800172a <setStr+0x76>
  {
    setChar(*dString++, x, y, bw);
 80016c4:	68fb      	ldr	r3, [r7, #12]
 80016c6:	1c5a      	adds	r2, r3, #1
 80016c8:	60fa      	str	r2, [r7, #12]
 80016ca:	7818      	ldrb	r0, [r3, #0]
 80016cc:	78fb      	ldrb	r3, [r7, #3]
 80016ce:	687a      	ldr	r2, [r7, #4]
 80016d0:	68b9      	ldr	r1, [r7, #8]
 80016d2:	f7ff ff97 	bl	8001604 <setChar>
    x += 5;
 80016d6:	68bb      	ldr	r3, [r7, #8]
 80016d8:	3305      	adds	r3, #5
 80016da:	60bb      	str	r3, [r7, #8]
    for (int i = y; i < y + 8; i++)
 80016dc:	687b      	ldr	r3, [r7, #4]
 80016de:	617b      	str	r3, [r7, #20]
 80016e0:	e013      	b.n	800170a <setStr+0x56>
    {
      setPixel1(x, i, !bw);
 80016e2:	78fb      	ldrb	r3, [r7, #3]
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	bf14      	ite	ne
 80016e8:	2301      	movne	r3, #1
 80016ea:	2300      	moveq	r3, #0
 80016ec:	b2db      	uxtb	r3, r3
 80016ee:	f083 0301 	eor.w	r3, r3, #1
 80016f2:	b2db      	uxtb	r3, r3
 80016f4:	f003 0301 	and.w	r3, r3, #1
 80016f8:	b2db      	uxtb	r3, r3
 80016fa:	461a      	mov	r2, r3
 80016fc:	6979      	ldr	r1, [r7, #20]
 80016fe:	68b8      	ldr	r0, [r7, #8]
 8001700:	f7ff ff1e 	bl	8001540 <setPixel1>
    for (int i = y; i < y + 8; i++)
 8001704:	697b      	ldr	r3, [r7, #20]
 8001706:	3301      	adds	r3, #1
 8001708:	617b      	str	r3, [r7, #20]
 800170a:	687b      	ldr	r3, [r7, #4]
 800170c:	3307      	adds	r3, #7
 800170e:	697a      	ldr	r2, [r7, #20]
 8001710:	429a      	cmp	r2, r3
 8001712:	dde6      	ble.n	80016e2 <setStr+0x2e>
    }
    x++;
 8001714:	68bb      	ldr	r3, [r7, #8]
 8001716:	3301      	adds	r3, #1
 8001718:	60bb      	str	r3, [r7, #8]
    if (x > (LCD_WIDTH - 5)) // Enables wrap around
 800171a:	68bb      	ldr	r3, [r7, #8]
 800171c:	2b4f      	cmp	r3, #79	@ 0x4f
 800171e:	dd04      	ble.n	800172a <setStr+0x76>
    {
      x = 0;
 8001720:	2300      	movs	r3, #0
 8001722:	60bb      	str	r3, [r7, #8]
      y += 8;
 8001724:	687b      	ldr	r3, [r7, #4]
 8001726:	3308      	adds	r3, #8
 8001728:	607b      	str	r3, [r7, #4]
  while (*dString != 0x00) // Loop until null terminator
 800172a:	68fb      	ldr	r3, [r7, #12]
 800172c:	781b      	ldrb	r3, [r3, #0]
 800172e:	2b00      	cmp	r3, #0
 8001730:	d1c8      	bne.n	80016c4 <setStr+0x10>
    }
  }
}
 8001732:	bf00      	nop
 8001734:	bf00      	nop
 8001736:	3718      	adds	r7, #24
 8001738:	46bd      	mov	sp, r7
 800173a:	bd80      	pop	{r7, pc}

0800173c <clearDisplay>:
 * The screen will be cleared once `updateDisplay()` is called.
 *
 * @param bw The color to clear the display to, `true` for black, `false` for white.
 */
void clearDisplay(bool bw)
{
 800173c:	b480      	push	{r7}
 800173e:	b085      	sub	sp, #20
 8001740:	af00      	add	r7, sp, #0
 8001742:	4603      	mov	r3, r0
 8001744:	71fb      	strb	r3, [r7, #7]
  for (int i = 0; i < (LCD_WIDTH * LCD_HEIGHT / 8); i++)
 8001746:	2300      	movs	r3, #0
 8001748:	60fb      	str	r3, [r7, #12]
 800174a:	e00d      	b.n	8001768 <clearDisplay+0x2c>
  {
    displayMap_5110[i] = bw ? 0xFF : 0;
 800174c:	79fb      	ldrb	r3, [r7, #7]
 800174e:	2b00      	cmp	r3, #0
 8001750:	d001      	beq.n	8001756 <clearDisplay+0x1a>
 8001752:	21ff      	movs	r1, #255	@ 0xff
 8001754:	e000      	b.n	8001758 <clearDisplay+0x1c>
 8001756:	2100      	movs	r1, #0
 8001758:	4a09      	ldr	r2, [pc, #36]	@ (8001780 <clearDisplay+0x44>)
 800175a:	68fb      	ldr	r3, [r7, #12]
 800175c:	4413      	add	r3, r2
 800175e:	460a      	mov	r2, r1
 8001760:	701a      	strb	r2, [r3, #0]
  for (int i = 0; i < (LCD_WIDTH * LCD_HEIGHT / 8); i++)
 8001762:	68fb      	ldr	r3, [r7, #12]
 8001764:	3301      	adds	r3, #1
 8001766:	60fb      	str	r3, [r7, #12]
 8001768:	68fb      	ldr	r3, [r7, #12]
 800176a:	f5b3 7ffc 	cmp.w	r3, #504	@ 0x1f8
 800176e:	dbed      	blt.n	800174c <clearDisplay+0x10>
  }
}
 8001770:	bf00      	nop
 8001772:	bf00      	nop
 8001774:	3714      	adds	r7, #20
 8001776:	46bd      	mov	sp, r7
 8001778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800177c:	4770      	bx	lr
 800177e:	bf00      	nop
 8001780:	20000000 	.word	0x20000000

08001784 <gotoXY>:
 *
 * @param x The x-coordinate to move the cursor to.
 * @param y The y-coordinate to move the cursor to.
 */
void gotoXY(int x, int y)
{
 8001784:	b580      	push	{r7, lr}
 8001786:	b082      	sub	sp, #8
 8001788:	af00      	add	r7, sp, #0
 800178a:	6078      	str	r0, [r7, #4]
 800178c:	6039      	str	r1, [r7, #0]
  LCDcommand(0x80 | x); // Set column
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	b25b      	sxtb	r3, r3
 8001792:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001796:	b25b      	sxtb	r3, r3
 8001798:	b2db      	uxtb	r3, r3
 800179a:	4618      	mov	r0, r3
 800179c:	f7ff fe8a 	bl	80014b4 <LCDcommand>
  LCDcommand(0x40 | y); // Set row
 80017a0:	683b      	ldr	r3, [r7, #0]
 80017a2:	b25b      	sxtb	r3, r3
 80017a4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80017a8:	b25b      	sxtb	r3, r3
 80017aa:	b2db      	uxtb	r3, r3
 80017ac:	4618      	mov	r0, r3
 80017ae:	f7ff fe81 	bl	80014b4 <LCDcommand>
}
 80017b2:	bf00      	nop
 80017b4:	3708      	adds	r7, #8
 80017b6:	46bd      	mov	sp, r7
 80017b8:	bd80      	pop	{r7, pc}
	...

080017bc <updateDisplay>:
 *
 * This function writes the contents of `displayMap_5110` to the display, updating the screen
 * to reflect any changes.
 */
void updateDisplay(void)
{
 80017bc:	b580      	push	{r7, lr}
 80017be:	b082      	sub	sp, #8
 80017c0:	af00      	add	r7, sp, #0
  gotoXY(0, 0);
 80017c2:	2100      	movs	r1, #0
 80017c4:	2000      	movs	r0, #0
 80017c6:	f7ff ffdd 	bl	8001784 <gotoXY>
  for (int i = 0; i < (LCD_WIDTH * LCD_HEIGHT / 8); i++)
 80017ca:	2300      	movs	r3, #0
 80017cc:	607b      	str	r3, [r7, #4]
 80017ce:	e009      	b.n	80017e4 <updateDisplay+0x28>
  {
    LCDdata(displayMap_5110[i]);
 80017d0:	4a09      	ldr	r2, [pc, #36]	@ (80017f8 <updateDisplay+0x3c>)
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	4413      	add	r3, r2
 80017d6:	781b      	ldrb	r3, [r3, #0]
 80017d8:	4618      	mov	r0, r3
 80017da:	f7ff fe85 	bl	80014e8 <LCDdata>
  for (int i = 0; i < (LCD_WIDTH * LCD_HEIGHT / 8); i++)
 80017de:	687b      	ldr	r3, [r7, #4]
 80017e0:	3301      	adds	r3, #1
 80017e2:	607b      	str	r3, [r7, #4]
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	f5b3 7ffc 	cmp.w	r3, #504	@ 0x1f8
 80017ea:	dbf1      	blt.n	80017d0 <updateDisplay+0x14>
  }
}
 80017ec:	bf00      	nop
 80017ee:	bf00      	nop
 80017f0:	3708      	adds	r7, #8
 80017f2:	46bd      	mov	sp, r7
 80017f4:	bd80      	pop	{r7, pc}
 80017f6:	bf00      	nop
 80017f8:	20000000 	.word	0x20000000

080017fc <setContrast>:
 * value can be between 0 and 127. A range of 40-60 is usually a good choice.
 *
 * @param contrast The contrast value to set (0-127).
 */
void setContrast(int contrast)
{
 80017fc:	b580      	push	{r7, lr}
 80017fe:	b082      	sub	sp, #8
 8001800:	af00      	add	r7, sp, #0
 8001802:	6078      	str	r0, [r7, #4]
  LCDcommand(0x21); // Extended commands follow
 8001804:	2021      	movs	r0, #33	@ 0x21
 8001806:	f7ff fe55 	bl	80014b4 <LCDcommand>
  LCDcommand(0x80 | contrast); // Set Vop (contrast)
 800180a:	687b      	ldr	r3, [r7, #4]
 800180c:	b25b      	sxtb	r3, r3
 800180e:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001812:	b25b      	sxtb	r3, r3
 8001814:	b2db      	uxtb	r3, r3
 8001816:	4618      	mov	r0, r3
 8001818:	f7ff fe4c 	bl	80014b4 <LCDcommand>
  LCDcommand(0x20); // Set display mode
 800181c:	2020      	movs	r0, #32
 800181e:	f7ff fe49 	bl	80014b4 <LCDcommand>
}
 8001822:	bf00      	nop
 8001824:	3708      	adds	r7, #8
 8001826:	46bd      	mov	sp, r7
 8001828:	bd80      	pop	{r7, pc}
	...

0800182c <lcdBegin>:
 *
 * This function performs the necessary initialization steps for the LCD screen, including
 * setting the contrast and display mode.
 */
void lcdBegin(void)
{
 800182c:	b580      	push	{r7, lr}
 800182e:	af00      	add	r7, sp, #0
  RST0;
 8001830:	4b19      	ldr	r3, [pc, #100]	@ (8001898 <lcdBegin+0x6c>)
 8001832:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8001836:	619a      	str	r2, [r3, #24]
  HAL_Delay(100);
 8001838:	2064      	movs	r0, #100	@ 0x64
 800183a:	f003 faf7 	bl	8004e2c <HAL_Delay>
  RST1;
 800183e:	4b16      	ldr	r3, [pc, #88]	@ (8001898 <lcdBegin+0x6c>)
 8001840:	2202      	movs	r2, #2
 8001842:	619a      	str	r2, [r3, #24]
  CS0;
 8001844:	4b14      	ldr	r3, [pc, #80]	@ (8001898 <lcdBegin+0x6c>)
 8001846:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 800184a:	619a      	str	r2, [r3, #24]
  LCDcommand(0x21); // Extended commands follow
 800184c:	2021      	movs	r0, #33	@ 0x21
 800184e:	f7ff fe31 	bl	80014b4 <LCDcommand>
  delay(10);
 8001852:	200a      	movs	r0, #10
 8001854:	f000 f822 	bl	800189c <delay>
  LCDcommand(0xB0); // Set Vop (contrast)
 8001858:	20b0      	movs	r0, #176	@ 0xb0
 800185a:	f7ff fe2b 	bl	80014b4 <LCDcommand>
  delay(10);
 800185e:	200a      	movs	r0, #10
 8001860:	f000 f81c 	bl	800189c <delay>
  LCDcommand(0x04); // Set temperature coefficient
 8001864:	2004      	movs	r0, #4
 8001866:	f7ff fe25 	bl	80014b4 <LCDcommand>
  delay(10);
 800186a:	200a      	movs	r0, #10
 800186c:	f000 f816 	bl	800189c <delay>
  LCDcommand(0x14); // Set bias mode 1:48
 8001870:	2014      	movs	r0, #20
 8001872:	f7ff fe1f 	bl	80014b4 <LCDcommand>
  delay(10);
 8001876:	200a      	movs	r0, #10
 8001878:	f000 f810 	bl	800189c <delay>
  LCDcommand(0x20); // Set display mode
 800187c:	2020      	movs	r0, #32
 800187e:	f7ff fe19 	bl	80014b4 <LCDcommand>
  delay(10);
 8001882:	200a      	movs	r0, #10
 8001884:	f000 f80a 	bl	800189c <delay>
  LCDcommand(0x0C); // Set display control, normal mode
 8001888:	200c      	movs	r0, #12
 800188a:	f7ff fe13 	bl	80014b4 <LCDcommand>
  delay(10);
 800188e:	200a      	movs	r0, #10
 8001890:	f000 f804 	bl	800189c <delay>
}
 8001894:	bf00      	nop
 8001896:	bd80      	pop	{r7, pc}
 8001898:	40020000 	.word	0x40020000

0800189c <delay>:
 * SysTick timer to achieve the delay.
 *
 * @param ms The number of milliseconds to delay.
 */
void delay(int ms)
{
 800189c:	b480      	push	{r7}
 800189e:	b085      	sub	sp, #20
 80018a0:	af00      	add	r7, sp, #0
 80018a2:	6078      	str	r0, [r7, #4]
  SysTick->LOAD = 16000 - 1; // Assuming 16 MHz clock
 80018a4:	4b11      	ldr	r3, [pc, #68]	@ (80018ec <delay+0x50>)
 80018a6:	f643 627f 	movw	r2, #15999	@ 0x3e7f
 80018aa:	605a      	str	r2, [r3, #4]
  SysTick->VAL = 0;
 80018ac:	4b0f      	ldr	r3, [pc, #60]	@ (80018ec <delay+0x50>)
 80018ae:	2200      	movs	r2, #0
 80018b0:	609a      	str	r2, [r3, #8]
  SysTick->CTRL = 0x5;
 80018b2:	4b0e      	ldr	r3, [pc, #56]	@ (80018ec <delay+0x50>)
 80018b4:	2205      	movs	r2, #5
 80018b6:	601a      	str	r2, [r3, #0]
  for (int i = 0; i < ms; i++)
 80018b8:	2300      	movs	r3, #0
 80018ba:	60fb      	str	r3, [r7, #12]
 80018bc:	e009      	b.n	80018d2 <delay+0x36>
  {
    while (!(SysTick->CTRL & 0x10000)) {}
 80018be:	bf00      	nop
 80018c0:	4b0a      	ldr	r3, [pc, #40]	@ (80018ec <delay+0x50>)
 80018c2:	681b      	ldr	r3, [r3, #0]
 80018c4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80018c8:	2b00      	cmp	r3, #0
 80018ca:	d0f9      	beq.n	80018c0 <delay+0x24>
  for (int i = 0; i < ms; i++)
 80018cc:	68fb      	ldr	r3, [r7, #12]
 80018ce:	3301      	adds	r3, #1
 80018d0:	60fb      	str	r3, [r7, #12]
 80018d2:	68fa      	ldr	r2, [r7, #12]
 80018d4:	687b      	ldr	r3, [r7, #4]
 80018d6:	429a      	cmp	r2, r3
 80018d8:	dbf1      	blt.n	80018be <delay+0x22>
  }
  SysTick->CTRL = 0;
 80018da:	4b04      	ldr	r3, [pc, #16]	@ (80018ec <delay+0x50>)
 80018dc:	2200      	movs	r2, #0
 80018de:	601a      	str	r2, [r3, #0]
}
 80018e0:	bf00      	nop
 80018e2:	3714      	adds	r7, #20
 80018e4:	46bd      	mov	sp, r7
 80018e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ea:	4770      	bx	lr
 80018ec:	e000e010 	.word	0xe000e010

080018f0 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 80018f0:	b580      	push	{r7, lr}
 80018f2:	b08a      	sub	sp, #40	@ 0x28
 80018f4:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018f6:	f107 0314 	add.w	r3, r7, #20
 80018fa:	2200      	movs	r2, #0
 80018fc:	601a      	str	r2, [r3, #0]
 80018fe:	605a      	str	r2, [r3, #4]
 8001900:	609a      	str	r2, [r3, #8]
 8001902:	60da      	str	r2, [r3, #12]
 8001904:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001906:	2300      	movs	r3, #0
 8001908:	613b      	str	r3, [r7, #16]
 800190a:	4b2d      	ldr	r3, [pc, #180]	@ (80019c0 <MX_GPIO_Init+0xd0>)
 800190c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800190e:	4a2c      	ldr	r2, [pc, #176]	@ (80019c0 <MX_GPIO_Init+0xd0>)
 8001910:	f043 0304 	orr.w	r3, r3, #4
 8001914:	6313      	str	r3, [r2, #48]	@ 0x30
 8001916:	4b2a      	ldr	r3, [pc, #168]	@ (80019c0 <MX_GPIO_Init+0xd0>)
 8001918:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800191a:	f003 0304 	and.w	r3, r3, #4
 800191e:	613b      	str	r3, [r7, #16]
 8001920:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001922:	2300      	movs	r3, #0
 8001924:	60fb      	str	r3, [r7, #12]
 8001926:	4b26      	ldr	r3, [pc, #152]	@ (80019c0 <MX_GPIO_Init+0xd0>)
 8001928:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800192a:	4a25      	ldr	r2, [pc, #148]	@ (80019c0 <MX_GPIO_Init+0xd0>)
 800192c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001930:	6313      	str	r3, [r2, #48]	@ 0x30
 8001932:	4b23      	ldr	r3, [pc, #140]	@ (80019c0 <MX_GPIO_Init+0xd0>)
 8001934:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001936:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800193a:	60fb      	str	r3, [r7, #12]
 800193c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800193e:	2300      	movs	r3, #0
 8001940:	60bb      	str	r3, [r7, #8]
 8001942:	4b1f      	ldr	r3, [pc, #124]	@ (80019c0 <MX_GPIO_Init+0xd0>)
 8001944:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001946:	4a1e      	ldr	r2, [pc, #120]	@ (80019c0 <MX_GPIO_Init+0xd0>)
 8001948:	f043 0301 	orr.w	r3, r3, #1
 800194c:	6313      	str	r3, [r2, #48]	@ 0x30
 800194e:	4b1c      	ldr	r3, [pc, #112]	@ (80019c0 <MX_GPIO_Init+0xd0>)
 8001950:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001952:	f003 0301 	and.w	r3, r3, #1
 8001956:	60bb      	str	r3, [r7, #8]
 8001958:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800195a:	2300      	movs	r3, #0
 800195c:	607b      	str	r3, [r7, #4]
 800195e:	4b18      	ldr	r3, [pc, #96]	@ (80019c0 <MX_GPIO_Init+0xd0>)
 8001960:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001962:	4a17      	ldr	r2, [pc, #92]	@ (80019c0 <MX_GPIO_Init+0xd0>)
 8001964:	f043 0302 	orr.w	r3, r3, #2
 8001968:	6313      	str	r3, [r2, #48]	@ 0x30
 800196a:	4b15      	ldr	r3, [pc, #84]	@ (80019c0 <MX_GPIO_Init+0xd0>)
 800196c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800196e:	f003 0302 	and.w	r3, r3, #2
 8001972:	607b      	str	r3, [r7, #4]
 8001974:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, DC_LCD_DISPLAY_Pin|RST_LCD_DISPLAY_Pin|SCE_LCD_DISPLAY_Pin|LD2_Pin, GPIO_PIN_RESET);
 8001976:	2200      	movs	r2, #0
 8001978:	2133      	movs	r1, #51	@ 0x33
 800197a:	4812      	ldr	r0, [pc, #72]	@ (80019c4 <MX_GPIO_Init+0xd4>)
 800197c:	f003 fda2 	bl	80054c4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = B1_Pin;
 8001980:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001984:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001986:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 800198a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800198c:	2300      	movs	r3, #0
 800198e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8001990:	f107 0314 	add.w	r3, r7, #20
 8001994:	4619      	mov	r1, r3
 8001996:	480c      	ldr	r0, [pc, #48]	@ (80019c8 <MX_GPIO_Init+0xd8>)
 8001998:	f003 fc10 	bl	80051bc <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin PAPin */
  GPIO_InitStruct.Pin = DC_LCD_DISPLAY_Pin|RST_LCD_DISPLAY_Pin|SCE_LCD_DISPLAY_Pin|LD2_Pin;
 800199c:	2333      	movs	r3, #51	@ 0x33
 800199e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019a0:	2301      	movs	r3, #1
 80019a2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019a4:	2300      	movs	r3, #0
 80019a6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019a8:	2300      	movs	r3, #0
 80019aa:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019ac:	f107 0314 	add.w	r3, r7, #20
 80019b0:	4619      	mov	r1, r3
 80019b2:	4804      	ldr	r0, [pc, #16]	@ (80019c4 <MX_GPIO_Init+0xd4>)
 80019b4:	f003 fc02 	bl	80051bc <HAL_GPIO_Init>

}
 80019b8:	bf00      	nop
 80019ba:	3728      	adds	r7, #40	@ 0x28
 80019bc:	46bd      	mov	sp, r7
 80019be:	bd80      	pop	{r7, pc}
 80019c0:	40023800 	.word	0x40023800
 80019c4:	40020000 	.word	0x40020000
 80019c8:	40020800 	.word	0x40020800

080019cc <Serial_Print>:
 *
 * @param huart Pointer to the UART_HandleTypeDef structure that contains
 *              the configuration information for the UART.
 * @param message Pointer to the string that needs to be transmitted.
 */
void Serial_Print(UART_HandleTypeDef *huart, const char *message) {
 80019cc:	b580      	push	{r7, lr}
 80019ce:	b082      	sub	sp, #8
 80019d0:	af00      	add	r7, sp, #0
 80019d2:	6078      	str	r0, [r7, #4]
 80019d4:	6039      	str	r1, [r7, #0]
    HAL_UART_Transmit(huart, (uint8_t *)message, strlen(message), HAL_MAX_DELAY);
 80019d6:	6838      	ldr	r0, [r7, #0]
 80019d8:	f7fe fc52 	bl	8000280 <strlen>
 80019dc:	4603      	mov	r3, r0
 80019de:	b29a      	uxth	r2, r3
 80019e0:	f04f 33ff 	mov.w	r3, #4294967295
 80019e4:	6839      	ldr	r1, [r7, #0]
 80019e6:	6878      	ldr	r0, [r7, #4]
 80019e8:	f004 fd18 	bl	800641c <HAL_UART_Transmit>
}
 80019ec:	bf00      	nop
 80019ee:	3708      	adds	r7, #8
 80019f0:	46bd      	mov	sp, r7
 80019f2:	bd80      	pop	{r7, pc}

080019f4 <Serial_ReadChar>:
 *
 * @param huart Pointer to the UART_HandleTypeDef structure that contains
 *              the configuration information for the UART.
 * @return uint8_t The received character.
 */
uint8_t Serial_ReadChar(UART_HandleTypeDef *huart) {
 80019f4:	b580      	push	{r7, lr}
 80019f6:	b084      	sub	sp, #16
 80019f8:	af00      	add	r7, sp, #0
 80019fa:	6078      	str	r0, [r7, #4]
    uint8_t ch;
    HAL_UART_Receive(huart, &ch, 1, HAL_MAX_DELAY);
 80019fc:	f107 010f 	add.w	r1, r7, #15
 8001a00:	f04f 33ff 	mov.w	r3, #4294967295
 8001a04:	2201      	movs	r2, #1
 8001a06:	6878      	ldr	r0, [r7, #4]
 8001a08:	f004 fd93 	bl	8006532 <HAL_UART_Receive>
    return ch;
 8001a0c:	7bfb      	ldrb	r3, [r7, #15]
}
 8001a0e:	4618      	mov	r0, r3
 8001a10:	3710      	adds	r7, #16
 8001a12:	46bd      	mov	sp, r7
 8001a14:	bd80      	pop	{r7, pc}

08001a16 <isFull>:
 * @param board An array representing the current state of the game board.
 *              The board is a 1D array with 9 elements, where each element
 *              represents a cell on the Tic-Tac-Toe grid.
 * @return bool True if the board is full, false otherwise.
 */
bool isFull(int8_t board[9]) {
 8001a16:	b480      	push	{r7}
 8001a18:	b085      	sub	sp, #20
 8001a1a:	af00      	add	r7, sp, #0
 8001a1c:	6078      	str	r0, [r7, #4]
    for (int i = 0; i < 9; i++) {
 8001a1e:	2300      	movs	r3, #0
 8001a20:	60fb      	str	r3, [r7, #12]
 8001a22:	e013      	b.n	8001a4c <isFull+0x36>
        if (board[i] != O && board[i] != X) {
 8001a24:	68fb      	ldr	r3, [r7, #12]
 8001a26:	687a      	ldr	r2, [r7, #4]
 8001a28:	4413      	add	r3, r2
 8001a2a:	f993 3000 	ldrsb.w	r3, [r3]
 8001a2e:	f113 0f40 	cmn.w	r3, #64	@ 0x40
 8001a32:	d008      	beq.n	8001a46 <isFull+0x30>
 8001a34:	68fb      	ldr	r3, [r7, #12]
 8001a36:	687a      	ldr	r2, [r7, #4]
 8001a38:	4413      	add	r3, r2
 8001a3a:	f993 3000 	ldrsb.w	r3, [r3]
 8001a3e:	2b40      	cmp	r3, #64	@ 0x40
 8001a40:	d001      	beq.n	8001a46 <isFull+0x30>
            return false;
 8001a42:	2300      	movs	r3, #0
 8001a44:	e006      	b.n	8001a54 <isFull+0x3e>
    for (int i = 0; i < 9; i++) {
 8001a46:	68fb      	ldr	r3, [r7, #12]
 8001a48:	3301      	adds	r3, #1
 8001a4a:	60fb      	str	r3, [r7, #12]
 8001a4c:	68fb      	ldr	r3, [r7, #12]
 8001a4e:	2b08      	cmp	r3, #8
 8001a50:	dde8      	ble.n	8001a24 <isFull+0xe>
        }
    }
    return true;
 8001a52:	2301      	movs	r3, #1
}
 8001a54:	4618      	mov	r0, r3
 8001a56:	3714      	adds	r7, #20
 8001a58:	46bd      	mov	sp, r7
 8001a5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a5e:	4770      	bx	lr

08001a60 <winner>:
 *              The board is a 1D array of size 9, where each element represents a cell.
 *              The values should be either `X`, `O`, or a neutral value (such as 0) for an empty cell.
 *
 * @return Returns `X` if player X wins, `O` if player O wins, or `0` if there is no winner (draw or game in progress).
 */
int8_t winner(int8_t *board) {
 8001a60:	b480      	push	{r7}
 8001a62:	b087      	sub	sp, #28
 8001a64:	af00      	add	r7, sp, #0
 8001a66:	6078      	str	r0, [r7, #4]
    int i, j;
    int x_count = 0;
 8001a68:	2300      	movs	r3, #0
 8001a6a:	60fb      	str	r3, [r7, #12]
    int o_count = 0;
 8001a6c:	2300      	movs	r3, #0
 8001a6e:	60bb      	str	r3, [r7, #8]

    // Check rows for a winner
    for (i = 0; i < 3; i++) {
 8001a70:	2300      	movs	r3, #0
 8001a72:	617b      	str	r3, [r7, #20]
 8001a74:	e03c      	b.n	8001af0 <winner+0x90>
        for (j = 0; j < 3; j++) {
 8001a76:	2300      	movs	r3, #0
 8001a78:	613b      	str	r3, [r7, #16]
 8001a7a:	e024      	b.n	8001ac6 <winner+0x66>
            if (board[3 * i + j] == X) {
 8001a7c:	697a      	ldr	r2, [r7, #20]
 8001a7e:	4613      	mov	r3, r2
 8001a80:	005b      	lsls	r3, r3, #1
 8001a82:	441a      	add	r2, r3
 8001a84:	693b      	ldr	r3, [r7, #16]
 8001a86:	4413      	add	r3, r2
 8001a88:	461a      	mov	r2, r3
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	4413      	add	r3, r2
 8001a8e:	f993 3000 	ldrsb.w	r3, [r3]
 8001a92:	2b40      	cmp	r3, #64	@ 0x40
 8001a94:	d103      	bne.n	8001a9e <winner+0x3e>
                x_count++;
 8001a96:	68fb      	ldr	r3, [r7, #12]
 8001a98:	3301      	adds	r3, #1
 8001a9a:	60fb      	str	r3, [r7, #12]
 8001a9c:	e010      	b.n	8001ac0 <winner+0x60>
            } else if (board[3 * i + j] == O) {
 8001a9e:	697a      	ldr	r2, [r7, #20]
 8001aa0:	4613      	mov	r3, r2
 8001aa2:	005b      	lsls	r3, r3, #1
 8001aa4:	441a      	add	r2, r3
 8001aa6:	693b      	ldr	r3, [r7, #16]
 8001aa8:	4413      	add	r3, r2
 8001aaa:	461a      	mov	r2, r3
 8001aac:	687b      	ldr	r3, [r7, #4]
 8001aae:	4413      	add	r3, r2
 8001ab0:	f993 3000 	ldrsb.w	r3, [r3]
 8001ab4:	f113 0f40 	cmn.w	r3, #64	@ 0x40
 8001ab8:	d102      	bne.n	8001ac0 <winner+0x60>
                o_count++;
 8001aba:	68bb      	ldr	r3, [r7, #8]
 8001abc:	3301      	adds	r3, #1
 8001abe:	60bb      	str	r3, [r7, #8]
        for (j = 0; j < 3; j++) {
 8001ac0:	693b      	ldr	r3, [r7, #16]
 8001ac2:	3301      	adds	r3, #1
 8001ac4:	613b      	str	r3, [r7, #16]
 8001ac6:	693b      	ldr	r3, [r7, #16]
 8001ac8:	2b02      	cmp	r3, #2
 8001aca:	ddd7      	ble.n	8001a7c <winner+0x1c>
            }
        }
        if (x_count == 3) return X;   // X wins if there are 3 X's in a row
 8001acc:	68fb      	ldr	r3, [r7, #12]
 8001ace:	2b03      	cmp	r3, #3
 8001ad0:	d101      	bne.n	8001ad6 <winner+0x76>
 8001ad2:	2340      	movs	r3, #64	@ 0x40
 8001ad4:	e0bd      	b.n	8001c52 <winner+0x1f2>
        else if (o_count == 3) return O; // O wins if there are 3 O's in a row
 8001ad6:	68bb      	ldr	r3, [r7, #8]
 8001ad8:	2b03      	cmp	r3, #3
 8001ada:	d102      	bne.n	8001ae2 <winner+0x82>
 8001adc:	f06f 033f 	mvn.w	r3, #63	@ 0x3f
 8001ae0:	e0b7      	b.n	8001c52 <winner+0x1f2>
        else x_count = o_count = 0;    // Reset counts for the next row
 8001ae2:	2300      	movs	r3, #0
 8001ae4:	60bb      	str	r3, [r7, #8]
 8001ae6:	68bb      	ldr	r3, [r7, #8]
 8001ae8:	60fb      	str	r3, [r7, #12]
    for (i = 0; i < 3; i++) {
 8001aea:	697b      	ldr	r3, [r7, #20]
 8001aec:	3301      	adds	r3, #1
 8001aee:	617b      	str	r3, [r7, #20]
 8001af0:	697b      	ldr	r3, [r7, #20]
 8001af2:	2b02      	cmp	r3, #2
 8001af4:	ddbf      	ble.n	8001a76 <winner+0x16>
    }

    // Check columns for a winner
    for (i = 0; i < 3; i++) {
 8001af6:	2300      	movs	r3, #0
 8001af8:	617b      	str	r3, [r7, #20]
 8001afa:	e03c      	b.n	8001b76 <winner+0x116>
        for (j = 0; j < 3; j++) {
 8001afc:	2300      	movs	r3, #0
 8001afe:	613b      	str	r3, [r7, #16]
 8001b00:	e024      	b.n	8001b4c <winner+0xec>
            if (board[3 * j + i] == X) {
 8001b02:	693a      	ldr	r2, [r7, #16]
 8001b04:	4613      	mov	r3, r2
 8001b06:	005b      	lsls	r3, r3, #1
 8001b08:	441a      	add	r2, r3
 8001b0a:	697b      	ldr	r3, [r7, #20]
 8001b0c:	4413      	add	r3, r2
 8001b0e:	461a      	mov	r2, r3
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	4413      	add	r3, r2
 8001b14:	f993 3000 	ldrsb.w	r3, [r3]
 8001b18:	2b40      	cmp	r3, #64	@ 0x40
 8001b1a:	d103      	bne.n	8001b24 <winner+0xc4>
                x_count++;
 8001b1c:	68fb      	ldr	r3, [r7, #12]
 8001b1e:	3301      	adds	r3, #1
 8001b20:	60fb      	str	r3, [r7, #12]
 8001b22:	e010      	b.n	8001b46 <winner+0xe6>
            } else if (board[3 * j + i] == O) {
 8001b24:	693a      	ldr	r2, [r7, #16]
 8001b26:	4613      	mov	r3, r2
 8001b28:	005b      	lsls	r3, r3, #1
 8001b2a:	441a      	add	r2, r3
 8001b2c:	697b      	ldr	r3, [r7, #20]
 8001b2e:	4413      	add	r3, r2
 8001b30:	461a      	mov	r2, r3
 8001b32:	687b      	ldr	r3, [r7, #4]
 8001b34:	4413      	add	r3, r2
 8001b36:	f993 3000 	ldrsb.w	r3, [r3]
 8001b3a:	f113 0f40 	cmn.w	r3, #64	@ 0x40
 8001b3e:	d102      	bne.n	8001b46 <winner+0xe6>
                o_count++;
 8001b40:	68bb      	ldr	r3, [r7, #8]
 8001b42:	3301      	adds	r3, #1
 8001b44:	60bb      	str	r3, [r7, #8]
        for (j = 0; j < 3; j++) {
 8001b46:	693b      	ldr	r3, [r7, #16]
 8001b48:	3301      	adds	r3, #1
 8001b4a:	613b      	str	r3, [r7, #16]
 8001b4c:	693b      	ldr	r3, [r7, #16]
 8001b4e:	2b02      	cmp	r3, #2
 8001b50:	ddd7      	ble.n	8001b02 <winner+0xa2>
            }
        }
        if (x_count == 3) return X;  // X wins if there are 3 X's in a column
 8001b52:	68fb      	ldr	r3, [r7, #12]
 8001b54:	2b03      	cmp	r3, #3
 8001b56:	d101      	bne.n	8001b5c <winner+0xfc>
 8001b58:	2340      	movs	r3, #64	@ 0x40
 8001b5a:	e07a      	b.n	8001c52 <winner+0x1f2>
        else if (o_count == 3) return O; // O wins if there are 3 O's in a column
 8001b5c:	68bb      	ldr	r3, [r7, #8]
 8001b5e:	2b03      	cmp	r3, #3
 8001b60:	d102      	bne.n	8001b68 <winner+0x108>
 8001b62:	f06f 033f 	mvn.w	r3, #63	@ 0x3f
 8001b66:	e074      	b.n	8001c52 <winner+0x1f2>
        else x_count = o_count = 0;  // Reset counts for the next column
 8001b68:	2300      	movs	r3, #0
 8001b6a:	60bb      	str	r3, [r7, #8]
 8001b6c:	68bb      	ldr	r3, [r7, #8]
 8001b6e:	60fb      	str	r3, [r7, #12]
    for (i = 0; i < 3; i++) {
 8001b70:	697b      	ldr	r3, [r7, #20]
 8001b72:	3301      	adds	r3, #1
 8001b74:	617b      	str	r3, [r7, #20]
 8001b76:	697b      	ldr	r3, [r7, #20]
 8001b78:	2b02      	cmp	r3, #2
 8001b7a:	ddbf      	ble.n	8001afc <winner+0x9c>
    }

    // Check the first diagonal for a winner
    for (i = 0; i < 3; i++) {
 8001b7c:	2300      	movs	r3, #0
 8001b7e:	617b      	str	r3, [r7, #20]
 8001b80:	e01c      	b.n	8001bbc <winner+0x15c>
        if (board[3 * i + i] == X) {
 8001b82:	697b      	ldr	r3, [r7, #20]
 8001b84:	009b      	lsls	r3, r3, #2
 8001b86:	461a      	mov	r2, r3
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	4413      	add	r3, r2
 8001b8c:	f993 3000 	ldrsb.w	r3, [r3]
 8001b90:	2b40      	cmp	r3, #64	@ 0x40
 8001b92:	d103      	bne.n	8001b9c <winner+0x13c>
            x_count++;
 8001b94:	68fb      	ldr	r3, [r7, #12]
 8001b96:	3301      	adds	r3, #1
 8001b98:	60fb      	str	r3, [r7, #12]
 8001b9a:	e00c      	b.n	8001bb6 <winner+0x156>
        } else if (board[3 * i + i] == O) {
 8001b9c:	697b      	ldr	r3, [r7, #20]
 8001b9e:	009b      	lsls	r3, r3, #2
 8001ba0:	461a      	mov	r2, r3
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	4413      	add	r3, r2
 8001ba6:	f993 3000 	ldrsb.w	r3, [r3]
 8001baa:	f113 0f40 	cmn.w	r3, #64	@ 0x40
 8001bae:	d102      	bne.n	8001bb6 <winner+0x156>
            o_count++;
 8001bb0:	68bb      	ldr	r3, [r7, #8]
 8001bb2:	3301      	adds	r3, #1
 8001bb4:	60bb      	str	r3, [r7, #8]
    for (i = 0; i < 3; i++) {
 8001bb6:	697b      	ldr	r3, [r7, #20]
 8001bb8:	3301      	adds	r3, #1
 8001bba:	617b      	str	r3, [r7, #20]
 8001bbc:	697b      	ldr	r3, [r7, #20]
 8001bbe:	2b02      	cmp	r3, #2
 8001bc0:	dddf      	ble.n	8001b82 <winner+0x122>
        }
    }
    if (x_count == 3) return X;  // X wins if there are 3 X's on the diagonal
 8001bc2:	68fb      	ldr	r3, [r7, #12]
 8001bc4:	2b03      	cmp	r3, #3
 8001bc6:	d101      	bne.n	8001bcc <winner+0x16c>
 8001bc8:	2340      	movs	r3, #64	@ 0x40
 8001bca:	e042      	b.n	8001c52 <winner+0x1f2>
    else if (o_count == 3) return O; // O wins if there are 3 O's on the diagonal
 8001bcc:	68bb      	ldr	r3, [r7, #8]
 8001bce:	2b03      	cmp	r3, #3
 8001bd0:	d102      	bne.n	8001bd8 <winner+0x178>
 8001bd2:	f06f 033f 	mvn.w	r3, #63	@ 0x3f
 8001bd6:	e03c      	b.n	8001c52 <winner+0x1f2>
    else x_count = o_count = 0;  // Reset counts for the next diagonal
 8001bd8:	2300      	movs	r3, #0
 8001bda:	60bb      	str	r3, [r7, #8]
 8001bdc:	68bb      	ldr	r3, [r7, #8]
 8001bde:	60fb      	str	r3, [r7, #12]

    // Check the second diagonal for a winner
    for (i = 0; i < 3; i++) {
 8001be0:	2300      	movs	r3, #0
 8001be2:	617b      	str	r3, [r7, #20]
 8001be4:	e026      	b.n	8001c34 <winner+0x1d4>
        if (board[3 * i + 2 - i] == X) {
 8001be6:	697a      	ldr	r2, [r7, #20]
 8001be8:	4613      	mov	r3, r2
 8001bea:	005b      	lsls	r3, r3, #1
 8001bec:	4413      	add	r3, r2
 8001bee:	1c9a      	adds	r2, r3, #2
 8001bf0:	697b      	ldr	r3, [r7, #20]
 8001bf2:	1ad3      	subs	r3, r2, r3
 8001bf4:	461a      	mov	r2, r3
 8001bf6:	687b      	ldr	r3, [r7, #4]
 8001bf8:	4413      	add	r3, r2
 8001bfa:	f993 3000 	ldrsb.w	r3, [r3]
 8001bfe:	2b40      	cmp	r3, #64	@ 0x40
 8001c00:	d103      	bne.n	8001c0a <winner+0x1aa>
            x_count++;
 8001c02:	68fb      	ldr	r3, [r7, #12]
 8001c04:	3301      	adds	r3, #1
 8001c06:	60fb      	str	r3, [r7, #12]
 8001c08:	e011      	b.n	8001c2e <winner+0x1ce>
        } else if (board[3 * i + 2 - i] == O) {
 8001c0a:	697a      	ldr	r2, [r7, #20]
 8001c0c:	4613      	mov	r3, r2
 8001c0e:	005b      	lsls	r3, r3, #1
 8001c10:	4413      	add	r3, r2
 8001c12:	1c9a      	adds	r2, r3, #2
 8001c14:	697b      	ldr	r3, [r7, #20]
 8001c16:	1ad3      	subs	r3, r2, r3
 8001c18:	461a      	mov	r2, r3
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	4413      	add	r3, r2
 8001c1e:	f993 3000 	ldrsb.w	r3, [r3]
 8001c22:	f113 0f40 	cmn.w	r3, #64	@ 0x40
 8001c26:	d102      	bne.n	8001c2e <winner+0x1ce>
            o_count++;
 8001c28:	68bb      	ldr	r3, [r7, #8]
 8001c2a:	3301      	adds	r3, #1
 8001c2c:	60bb      	str	r3, [r7, #8]
    for (i = 0; i < 3; i++) {
 8001c2e:	697b      	ldr	r3, [r7, #20]
 8001c30:	3301      	adds	r3, #1
 8001c32:	617b      	str	r3, [r7, #20]
 8001c34:	697b      	ldr	r3, [r7, #20]
 8001c36:	2b02      	cmp	r3, #2
 8001c38:	ddd5      	ble.n	8001be6 <winner+0x186>
        }
    }
    if (x_count == 3) return X;  // X wins if there are 3 X's on the second diagonal
 8001c3a:	68fb      	ldr	r3, [r7, #12]
 8001c3c:	2b03      	cmp	r3, #3
 8001c3e:	d101      	bne.n	8001c44 <winner+0x1e4>
 8001c40:	2340      	movs	r3, #64	@ 0x40
 8001c42:	e006      	b.n	8001c52 <winner+0x1f2>
    else if (o_count == 3) return O; // O wins if there are 3 O's on the second diagonal
 8001c44:	68bb      	ldr	r3, [r7, #8]
 8001c46:	2b03      	cmp	r3, #3
 8001c48:	d102      	bne.n	8001c50 <winner+0x1f0>
 8001c4a:	f06f 033f 	mvn.w	r3, #63	@ 0x3f
 8001c4e:	e000      	b.n	8001c52 <winner+0x1f2>

    return 0; // No winner, game is either ongoing or a draw
 8001c50:	2300      	movs	r3, #0
}
 8001c52:	4618      	mov	r0, r3
 8001c54:	371c      	adds	r7, #28
 8001c56:	46bd      	mov	sp, r7
 8001c58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c5c:	4770      	bx	lr
	...

08001c60 <tictactoe_game>:
 * The game board is managed as a 1D array with 9 cells, where `O` is the human player's move and `X` is the AI's move.
 * The user is asked to input their move via serial communication, and the game state is printed and updated on the display.
 *
 * @param huart A pointer to the UART_HandleTypeDef structure, which is used for serial communication.
 */
void tictactoe_game(UART_HandleTypeDef *huart) {
 8001c60:	b580      	push	{r7, lr}
 8001c62:	b0a4      	sub	sp, #144	@ 0x90
 8001c64:	af02      	add	r7, sp, #8
 8001c66:	6078      	str	r0, [r7, #4]
    char user_input[2];
    uint8_t i;
    char buffer[100];

    // Initialize the game board (clear all cells)
    for (i = 0; i < 9; i++) {
 8001c68:	2300      	movs	r3, #0
 8001c6a:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 8001c6e:	e009      	b.n	8001c84 <tictactoe_game+0x24>
        board[i] = 0;  // 0 represents an empty cell
 8001c70:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 8001c74:	4ab0      	ldr	r2, [pc, #704]	@ (8001f38 <tictactoe_game+0x2d8>)
 8001c76:	2100      	movs	r1, #0
 8001c78:	54d1      	strb	r1, [r2, r3]
    for (i = 0; i < 9; i++) {
 8001c7a:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 8001c7e:	3301      	adds	r3, #1
 8001c80:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 8001c84:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 8001c88:	2b08      	cmp	r3, #8
 8001c8a:	d9f1      	bls.n	8001c70 <tictactoe_game+0x10>
    }

    // Start the Tic-Tac-Toe game and notify the player
    Serial_Print(huart,"############ New Game ############\n");
 8001c8c:	49ab      	ldr	r1, [pc, #684]	@ (8001f3c <tictactoe_game+0x2dc>)
 8001c8e:	6878      	ldr	r0, [r7, #4]
 8001c90:	f7ff fe9c 	bl	80019cc <Serial_Print>

    // Print the current game board
    print_tictactoe_board(board);
 8001c94:	48a8      	ldr	r0, [pc, #672]	@ (8001f38 <tictactoe_game+0x2d8>)
 8001c96:	f7ff fb25 	bl	80012e4 <print_tictactoe_board>

    // Update the LCD display
    updateDisplay();
 8001c9a:	f7ff fd8f 	bl	80017bc <updateDisplay>

    delay(1000); // Wait for 1 second before starting the game
 8001c9e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001ca2:	f7ff fdfb 	bl	800189c <delay>

    // Main game loop (up to 5 turns, alternating between player and AI)
    for (i = 0; i < 5; i++) {
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 8001cac:	e139      	b.n	8001f22 <tictactoe_game+0x2c2>
        user_input[0] = user_input[1] = 0; // Reset user input
 8001cae:	2300      	movs	r3, #0
 8001cb0:	f887 306d 	strb.w	r3, [r7, #109]	@ 0x6d
 8001cb4:	f897 306d 	ldrb.w	r3, [r7, #109]	@ 0x6d
 8001cb8:	f887 306c 	strb.w	r3, [r7, #108]	@ 0x6c

        // Loop to read valid user input (coordinates in the form of 'a1', 'b3', etc.)
        while (1) {
            // Prompt user for input
            Serial_Print(huart,"Your turn: Please enter the coordinates (e.g. a3)\n");
 8001cbc:	49a0      	ldr	r1, [pc, #640]	@ (8001f40 <tictactoe_game+0x2e0>)
 8001cbe:	6878      	ldr	r0, [r7, #4]
 8001cc0:	f7ff fe84 	bl	80019cc <Serial_Print>
            Serial_Print(huart, "you want to place an O and press >enter<\n");
 8001cc4:	499f      	ldr	r1, [pc, #636]	@ (8001f44 <tictactoe_game+0x2e4>)
 8001cc6:	6878      	ldr	r0, [r7, #4]
 8001cc8:	f7ff fe80 	bl	80019cc <Serial_Print>

            // Read the first character (column)
            user_input[0] = Serial_ReadChar(huart);
 8001ccc:	6878      	ldr	r0, [r7, #4]
 8001cce:	f7ff fe91 	bl	80019f4 <Serial_ReadChar>
 8001cd2:	4603      	mov	r3, r0
 8001cd4:	f887 306c 	strb.w	r3, [r7, #108]	@ 0x6c
            delay(10);  // Small delay to prevent synchronization issues
 8001cd8:	200a      	movs	r0, #10
 8001cda:	f7ff fddf 	bl	800189c <delay>
            //Serial_Print(huart, "I read the first character!");

            // Read the second character (row)
            user_input[1] = Serial_ReadChar(huart);
 8001cde:	6878      	ldr	r0, [r7, #4]
 8001ce0:	f7ff fe88 	bl	80019f4 <Serial_ReadChar>
 8001ce4:	4603      	mov	r3, r0
 8001ce6:	f887 306d 	strb.w	r3, [r7, #109]	@ 0x6d
            delay(10);  // Small delay to prevent synchronization issues
 8001cea:	200a      	movs	r0, #10
 8001cec:	f7ff fdd6 	bl	800189c <delay>
            //Serial_Print(huart, "I read the second character!");

            // Calculate the action (convert coordinates to board index)
            action = (user_input[0] - 97) + (user_input[1] - 48 - 1) * 3;
 8001cf0:	f897 206c 	ldrb.w	r2, [r7, #108]	@ 0x6c
 8001cf4:	f897 306d 	ldrb.w	r3, [r7, #109]	@ 0x6d
 8001cf8:	3b31      	subs	r3, #49	@ 0x31
 8001cfa:	b2db      	uxtb	r3, r3
 8001cfc:	4619      	mov	r1, r3
 8001cfe:	0049      	lsls	r1, r1, #1
 8001d00:	440b      	add	r3, r1
 8001d02:	b2db      	uxtb	r3, r3
 8001d04:	4413      	add	r3, r2
 8001d06:	b2db      	uxtb	r3, r3
 8001d08:	3b61      	subs	r3, #97	@ 0x61
 8001d0a:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86

            // Validate user input: check for correct coordinates and empty cell
            if ((user_input[0] < 97 || user_input[0] > 99 || user_input[1] < 49 || user_input[1] > 51)) {
 8001d0e:	f897 306c 	ldrb.w	r3, [r7, #108]	@ 0x6c
 8001d12:	2b60      	cmp	r3, #96	@ 0x60
 8001d14:	d90b      	bls.n	8001d2e <tictactoe_game+0xce>
 8001d16:	f897 306c 	ldrb.w	r3, [r7, #108]	@ 0x6c
 8001d1a:	2b63      	cmp	r3, #99	@ 0x63
 8001d1c:	d807      	bhi.n	8001d2e <tictactoe_game+0xce>
 8001d1e:	f897 306d 	ldrb.w	r3, [r7, #109]	@ 0x6d
 8001d22:	2b30      	cmp	r3, #48	@ 0x30
 8001d24:	d903      	bls.n	8001d2e <tictactoe_game+0xce>
 8001d26:	f897 306d 	ldrb.w	r3, [r7, #109]	@ 0x6d
 8001d2a:	2b33      	cmp	r3, #51	@ 0x33
 8001d2c:	d90f      	bls.n	8001d4e <tictactoe_game+0xee>
                Serial_Print(huart,"Wrong input. The coordinates have to be\n");
 8001d2e:	4986      	ldr	r1, [pc, #536]	@ (8001f48 <tictactoe_game+0x2e8>)
 8001d30:	6878      	ldr	r0, [r7, #4]
 8001d32:	f7ff fe4b 	bl	80019cc <Serial_Print>
                Serial_Print(huart,"one of {a1, a2, a3, b1, b2, b3, c1, c2, c3}.\n");
 8001d36:	4985      	ldr	r1, [pc, #532]	@ (8001f4c <tictactoe_game+0x2ec>)
 8001d38:	6878      	ldr	r0, [r7, #4]
 8001d3a:	f7ff fe47 	bl	80019cc <Serial_Print>
                user_input[0] = user_input[1] = 0; // Reset input and prompt again
 8001d3e:	2300      	movs	r3, #0
 8001d40:	f887 306d 	strb.w	r3, [r7, #109]	@ 0x6d
 8001d44:	f897 306d 	ldrb.w	r3, [r7, #109]	@ 0x6d
 8001d48:	f887 306c 	strb.w	r3, [r7, #108]	@ 0x6c
                continue;
 8001d4c:	e011      	b.n	8001d72 <tictactoe_game+0x112>
            } else if (board[action] != 0) {
 8001d4e:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 8001d52:	4a79      	ldr	r2, [pc, #484]	@ (8001f38 <tictactoe_game+0x2d8>)
 8001d54:	56d3      	ldrsb	r3, [r2, r3]
 8001d56:	2b00      	cmp	r3, #0
 8001d58:	d00c      	beq.n	8001d74 <tictactoe_game+0x114>
                Serial_Print(huart,"Wrong input. The field is already occupied.\n");
 8001d5a:	497d      	ldr	r1, [pc, #500]	@ (8001f50 <tictactoe_game+0x2f0>)
 8001d5c:	6878      	ldr	r0, [r7, #4]
 8001d5e:	f7ff fe35 	bl	80019cc <Serial_Print>
                user_input[0] = user_input[1] = 0; // Reset input and prompt again
 8001d62:	2300      	movs	r3, #0
 8001d64:	f887 306d 	strb.w	r3, [r7, #109]	@ 0x6d
 8001d68:	f897 306d 	ldrb.w	r3, [r7, #109]	@ 0x6d
 8001d6c:	f887 306c 	strb.w	r3, [r7, #108]	@ 0x6c
                continue;
 8001d70:	bf00      	nop
            Serial_Print(huart,"Your turn: Please enter the coordinates (e.g. a3)\n");
 8001d72:	e7a3      	b.n	8001cbc <tictactoe_game+0x5c>
            }

            break;  // Exit the loop once valid input is provided
 8001d74:	bf00      	nop
        }

        // Update the board with the user's move (O)
        board[action] = O;
 8001d76:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 8001d7a:	4a6f      	ldr	r2, [pc, #444]	@ (8001f38 <tictactoe_game+0x2d8>)
 8001d7c:	21c0      	movs	r1, #192	@ 0xc0
 8001d7e:	54d1      	strb	r1, [r2, r3]

        // Print user's move
        snprintf(buffer, 100, "User's move: %c, %c\n", user_input[0], user_input[1]);
 8001d80:	f897 306c 	ldrb.w	r3, [r7, #108]	@ 0x6c
 8001d84:	461a      	mov	r2, r3
 8001d86:	f897 306d 	ldrb.w	r3, [r7, #109]	@ 0x6d
 8001d8a:	f107 0008 	add.w	r0, r7, #8
 8001d8e:	9300      	str	r3, [sp, #0]
 8001d90:	4613      	mov	r3, r2
 8001d92:	4a70      	ldr	r2, [pc, #448]	@ (8001f54 <tictactoe_game+0x2f4>)
 8001d94:	2164      	movs	r1, #100	@ 0x64
 8001d96:	f006 fb7f 	bl	8008498 <sniprintf>
        Serial_Print(huart, buffer);
 8001d9a:	f107 0308 	add.w	r3, r7, #8
 8001d9e:	4619      	mov	r1, r3
 8001da0:	6878      	ldr	r0, [r7, #4]
 8001da2:	f7ff fe13 	bl	80019cc <Serial_Print>

        // Print the updated game board
        print_tictactoe_board(board);
 8001da6:	4864      	ldr	r0, [pc, #400]	@ (8001f38 <tictactoe_game+0x2d8>)
 8001da8:	f7ff fa9c 	bl	80012e4 <print_tictactoe_board>

        // Update the LCD display
        updateDisplay();
 8001dac:	f7ff fd06 	bl	80017bc <updateDisplay>

        delay(1000); // Wait for 1 second before continuing
 8001db0:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001db4:	f7ff fd72 	bl	800189c <delay>

        // Check if the user has won the game
        if (winner(board) == O) {
 8001db8:	485f      	ldr	r0, [pc, #380]	@ (8001f38 <tictactoe_game+0x2d8>)
 8001dba:	f7ff fe51 	bl	8001a60 <winner>
 8001dbe:	4603      	mov	r3, r0
 8001dc0:	f113 0f40 	cmn.w	r3, #64	@ 0x40
 8001dc4:	d108      	bne.n	8001dd8 <tictactoe_game+0x178>
            Serial_Print(huart,"******* Congratulations: You won the game! *******\n");
 8001dc6:	4964      	ldr	r1, [pc, #400]	@ (8001f58 <tictactoe_game+0x2f8>)
 8001dc8:	6878      	ldr	r0, [r7, #4]
 8001dca:	f7ff fdff 	bl	80019cc <Serial_Print>
            Serial_Print(huart, "This should be impossible in theory.\n");
 8001dce:	4963      	ldr	r1, [pc, #396]	@ (8001f5c <tictactoe_game+0x2fc>)
 8001dd0:	6878      	ldr	r0, [r7, #4]
 8001dd2:	f7ff fdfb 	bl	80019cc <Serial_Print>
            break;
 8001dd6:	e0aa      	b.n	8001f2e <tictactoe_game+0x2ce>
        }

        // Measure the time taken for the AI to make its move
        double time_spent = 0.0;
 8001dd8:	f04f 0200 	mov.w	r2, #0
 8001ddc:	f04f 0300 	mov.w	r3, #0
 8001de0:	e9c7 231e 	strd	r2, r3, [r7, #120]	@ 0x78
        clock_t begin = clock();
 8001de4:	f006 fc8c 	bl	8008700 <clock>
 8001de8:	6778      	str	r0, [r7, #116]	@ 0x74

        // Let the AI make its move
        action = run_ai_agent(board);
 8001dea:	4853      	ldr	r0, [pc, #332]	@ (8001f38 <tictactoe_game+0x2d8>)
 8001dec:	f000 f9fa 	bl	80021e4 <run_ai_agent>
 8001df0:	4603      	mov	r3, r0
 8001df2:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86

        clock_t end = clock();
 8001df6:	f006 fc83 	bl	8008700 <clock>
 8001dfa:	6738      	str	r0, [r7, #112]	@ 0x70
        time_spent += (double)(end - begin) / CLOCKS_PER_SEC;
 8001dfc:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 8001dfe:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8001e00:	1ad3      	subs	r3, r2, r3
 8001e02:	4618      	mov	r0, r3
 8001e04:	f7fe fb86 	bl	8000514 <__aeabi_ui2d>
 8001e08:	f04f 0200 	mov.w	r2, #0
 8001e0c:	4b54      	ldr	r3, [pc, #336]	@ (8001f60 <tictactoe_game+0x300>)
 8001e0e:	f7fe fd25 	bl	800085c <__aeabi_ddiv>
 8001e12:	4602      	mov	r2, r0
 8001e14:	460b      	mov	r3, r1
 8001e16:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8001e1a:	f7fe fa3f 	bl	800029c <__adddf3>
 8001e1e:	4602      	mov	r2, r0
 8001e20:	460b      	mov	r3, r1
 8001e22:	e9c7 231e 	strd	r2, r3, [r7, #120]	@ 0x78

        // Update the board with AI's move (X)
        board[action] = X;
 8001e26:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 8001e2a:	4a43      	ldr	r2, [pc, #268]	@ (8001f38 <tictactoe_game+0x2d8>)
 8001e2c:	2140      	movs	r1, #64	@ 0x40
 8001e2e:	54d1      	strb	r1, [r2, r3]

        // Print the time taken for AI's move
        snprintf(buffer, 100, "The AI took %f seconds to think about the turn.\n", time_spent);
 8001e30:	f107 0008 	add.w	r0, r7, #8
 8001e34:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8001e38:	e9cd 2300 	strd	r2, r3, [sp]
 8001e3c:	4a49      	ldr	r2, [pc, #292]	@ (8001f64 <tictactoe_game+0x304>)
 8001e3e:	2164      	movs	r1, #100	@ 0x64
 8001e40:	f006 fb2a 	bl	8008498 <sniprintf>
        Serial_Print(huart, buffer);
 8001e44:	f107 0308 	add.w	r3, r7, #8
 8001e48:	4619      	mov	r1, r3
 8001e4a:	6878      	ldr	r0, [r7, #4]
 8001e4c:	f7ff fdbe 	bl	80019cc <Serial_Print>

        // Print AI's move
        snprintf(buffer, 100, "AI's move was %c%d\n", (char)(action % 3 + 97), (int)(action / 3 + 1));
 8001e50:	f897 2086 	ldrb.w	r2, [r7, #134]	@ 0x86
 8001e54:	4b44      	ldr	r3, [pc, #272]	@ (8001f68 <tictactoe_game+0x308>)
 8001e56:	fba3 1302 	umull	r1, r3, r3, r2
 8001e5a:	0859      	lsrs	r1, r3, #1
 8001e5c:	460b      	mov	r3, r1
 8001e5e:	005b      	lsls	r3, r3, #1
 8001e60:	440b      	add	r3, r1
 8001e62:	1ad3      	subs	r3, r2, r3
 8001e64:	b2db      	uxtb	r3, r3
 8001e66:	3361      	adds	r3, #97	@ 0x61
 8001e68:	b2db      	uxtb	r3, r3
 8001e6a:	4619      	mov	r1, r3
 8001e6c:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 8001e70:	4a3d      	ldr	r2, [pc, #244]	@ (8001f68 <tictactoe_game+0x308>)
 8001e72:	fba2 2303 	umull	r2, r3, r2, r3
 8001e76:	085b      	lsrs	r3, r3, #1
 8001e78:	b2db      	uxtb	r3, r3
 8001e7a:	3301      	adds	r3, #1
 8001e7c:	f107 0008 	add.w	r0, r7, #8
 8001e80:	9300      	str	r3, [sp, #0]
 8001e82:	460b      	mov	r3, r1
 8001e84:	4a39      	ldr	r2, [pc, #228]	@ (8001f6c <tictactoe_game+0x30c>)
 8001e86:	2164      	movs	r1, #100	@ 0x64
 8001e88:	f006 fb06 	bl	8008498 <sniprintf>
        Serial_Print(huart, buffer);
 8001e8c:	f107 0308 	add.w	r3, r7, #8
 8001e90:	4619      	mov	r1, r3
 8001e92:	6878      	ldr	r0, [r7, #4]
 8001e94:	f7ff fd9a 	bl	80019cc <Serial_Print>

        // Print the updated game board
        print_tictactoe_board(board);
 8001e98:	4827      	ldr	r0, [pc, #156]	@ (8001f38 <tictactoe_game+0x2d8>)
 8001e9a:	f7ff fa23 	bl	80012e4 <print_tictactoe_board>

        // Update the LCD display
        updateDisplay();
 8001e9e:	f7ff fc8d 	bl	80017bc <updateDisplay>

        // Check if the AI has won the game
        if (winner(board) == X) {
 8001ea2:	4825      	ldr	r0, [pc, #148]	@ (8001f38 <tictactoe_game+0x2d8>)
 8001ea4:	f7ff fddc 	bl	8001a60 <winner>
 8001ea8:	4603      	mov	r3, r0
 8001eaa:	2b40      	cmp	r3, #64	@ 0x40
 8001eac:	d11b      	bne.n	8001ee6 <tictactoe_game+0x286>
            Serial_Print(huart,"******* You lost the game! *******\n");
 8001eae:	4930      	ldr	r1, [pc, #192]	@ (8001f70 <tictactoe_game+0x310>)
 8001eb0:	6878      	ldr	r0, [r7, #4]
 8001eb2:	f7ff fd8b 	bl	80019cc <Serial_Print>

            delay(2000); // Wait for 2 seconds
 8001eb6:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8001eba:	f7ff fcef 	bl	800189c <delay>

            // Clear the LCD display and show the "You Lost" message
            clearDisplay(false);
 8001ebe:	2000      	movs	r0, #0
 8001ec0:	f7ff fc3c 	bl	800173c <clearDisplay>
            LCD_Print("You Lost the Game!", 0, 7);
 8001ec4:	2207      	movs	r2, #7
 8001ec6:	2100      	movs	r1, #0
 8001ec8:	482a      	ldr	r0, [pc, #168]	@ (8001f74 <tictactoe_game+0x314>)
 8001eca:	f7ff fb27 	bl	800151c <LCD_Print>
            clearDisplay(false);
 8001ece:	2000      	movs	r0, #0
 8001ed0:	f7ff fc34 	bl	800173c <clearDisplay>

            delay(20000); // Wait for 20 seconds
 8001ed4:	f644 6020 	movw	r0, #20000	@ 0x4e20
 8001ed8:	f7ff fce0 	bl	800189c <delay>

            // Reset the game board and display
            draw_tictactoe_grid();
 8001edc:	f7ff f998 	bl	8001210 <draw_tictactoe_grid>
            updateDisplay();
 8001ee0:	f7ff fc6c 	bl	80017bc <updateDisplay>

            break;  // End the game
 8001ee4:	e023      	b.n	8001f2e <tictactoe_game+0x2ce>
        }

        // Check if the board is full (game ends in a draw)
        if (isFull(board)) {
 8001ee6:	4814      	ldr	r0, [pc, #80]	@ (8001f38 <tictactoe_game+0x2d8>)
 8001ee8:	f7ff fd95 	bl	8001a16 <isFull>
 8001eec:	4603      	mov	r3, r0
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	d012      	beq.n	8001f18 <tictactoe_game+0x2b8>
            Serial_Print(huart, "\n The board is full! Restarting the game.\n");
 8001ef2:	4921      	ldr	r1, [pc, #132]	@ (8001f78 <tictactoe_game+0x318>)
 8001ef4:	6878      	ldr	r0, [r7, #4]
 8001ef6:	f7ff fd69 	bl	80019cc <Serial_Print>

            clearDisplay(false);
 8001efa:	2000      	movs	r0, #0
 8001efc:	f7ff fc1e 	bl	800173c <clearDisplay>
            delay(2000);
 8001f00:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8001f04:	f7ff fcca 	bl	800189c <delay>

            // Reset the board and redraw the grid
            draw_tictactoe_grid();
 8001f08:	f7ff f982 	bl	8001210 <draw_tictactoe_grid>
            delay(2000);
 8001f0c:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8001f10:	f7ff fcc4 	bl	800189c <delay>

            updateDisplay();
 8001f14:	f7ff fc52 	bl	80017bc <updateDisplay>
    for (i = 0; i < 5; i++) {
 8001f18:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 8001f1c:	3301      	adds	r3, #1
 8001f1e:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 8001f22:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 8001f26:	2b04      	cmp	r3, #4
 8001f28:	f67f aec1 	bls.w	8001cae <tictactoe_game+0x4e>
        }
    }
}
 8001f2c:	bf00      	nop
 8001f2e:	bf00      	nop
 8001f30:	3788      	adds	r7, #136	@ 0x88
 8001f32:	46bd      	mov	sp, r7
 8001f34:	bd80      	pop	{r7, pc}
 8001f36:	bf00      	nop
 8001f38:	20000760 	.word	0x20000760
 8001f3c:	0800bc58 	.word	0x0800bc58
 8001f40:	0800bc7c 	.word	0x0800bc7c
 8001f44:	0800bcb0 	.word	0x0800bcb0
 8001f48:	0800bcdc 	.word	0x0800bcdc
 8001f4c:	0800bd08 	.word	0x0800bd08
 8001f50:	0800bd38 	.word	0x0800bd38
 8001f54:	0800bd68 	.word	0x0800bd68
 8001f58:	0800bd80 	.word	0x0800bd80
 8001f5c:	0800bdb4 	.word	0x0800bdb4
 8001f60:	40590000 	.word	0x40590000
 8001f64:	0800bddc 	.word	0x0800bddc
 8001f68:	aaaaaaab 	.word	0xaaaaaaab
 8001f6c:	0800be10 	.word	0x0800be10
 8001f70:	0800be24 	.word	0x0800be24
 8001f74:	0800be48 	.word	0x0800be48
 8001f78:	0800be5c 	.word	0x0800be5c

08001f7c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001f7c:	b580      	push	{r7, lr}
 8001f7e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001f80:	f002 fee2 	bl	8004d48 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001f84:	f000 f838 	bl	8001ff8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001f88:	f7ff fcb2 	bl	80018f0 <MX_GPIO_Init>
  MX_SPI2_Init();
 8001f8c:	f000 f98a 	bl	80022a4 <MX_SPI2_Init>
  MX_USART2_UART_Init();
 8001f90:	f000 fb6c 	bl	800266c <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  /**
   * Define the initialization of SPI LCD module
   */
  lcdBegin();
 8001f94:	f7ff fc4a 	bl	800182c <lcdBegin>
  setContrast(50);
 8001f98:	2032      	movs	r0, #50	@ 0x32
 8001f9a:	f7ff fc2f 	bl	80017fc <setContrast>
  updateDisplay();
 8001f9e:	f7ff fc0d 	bl	80017bc <updateDisplay>

  delay(20000);
 8001fa2:	f644 6020 	movw	r0, #20000	@ 0x4e20
 8001fa6:	f7ff fc79 	bl	800189c <delay>

  clearDisplay(false);
 8001faa:	2000      	movs	r0, #0
 8001fac:	f7ff fbc6 	bl	800173c <clearDisplay>

  LCD_Print("Welcome in Tic-Tac-Toe Game", 1, 8);
 8001fb0:	2208      	movs	r2, #8
 8001fb2:	2101      	movs	r1, #1
 8001fb4:	480e      	ldr	r0, [pc, #56]	@ (8001ff0 <main+0x74>)
 8001fb6:	f7ff fab1 	bl	800151c <LCD_Print>

  delay(5000);
 8001fba:	f241 3088 	movw	r0, #5000	@ 0x1388
 8001fbe:	f7ff fc6d 	bl	800189c <delay>


  clearDisplay(false);
 8001fc2:	2000      	movs	r0, #0
 8001fc4:	f7ff fbba 	bl	800173c <clearDisplay>

  delay(5000);
 8001fc8:	f241 3088 	movw	r0, #5000	@ 0x1388
 8001fcc:	f7ff fc66 	bl	800189c <delay>

  draw_tictactoe_grid();
 8001fd0:	f7ff f91e 	bl	8001210 <draw_tictactoe_grid>

  updateDisplay();
 8001fd4:	f7ff fbf2 	bl	80017bc <updateDisplay>

  delay(5000);
 8001fd8:	f241 3088 	movw	r0, #5000	@ 0x1388
 8001fdc:	f7ff fc5e 	bl	800189c <delay>

  init_ai_agent(&huart2);
 8001fe0:	4804      	ldr	r0, [pc, #16]	@ (8001ff4 <main+0x78>)
 8001fe2:	f000 f87b 	bl	80020dc <init_ai_agent>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */
	  tictactoe_game(&huart2);
 8001fe6:	4803      	ldr	r0, [pc, #12]	@ (8001ff4 <main+0x78>)
 8001fe8:	f7ff fe3a 	bl	8001c60 <tictactoe_game>
 8001fec:	e7fb      	b.n	8001fe6 <main+0x6a>
 8001fee:	bf00      	nop
 8001ff0:	0800be88 	.word	0x0800be88
 8001ff4:	20000980 	.word	0x20000980

08001ff8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001ff8:	b580      	push	{r7, lr}
 8001ffa:	b094      	sub	sp, #80	@ 0x50
 8001ffc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001ffe:	f107 0320 	add.w	r3, r7, #32
 8002002:	2230      	movs	r2, #48	@ 0x30
 8002004:	2100      	movs	r1, #0
 8002006:	4618      	mov	r0, r3
 8002008:	f006 fb72 	bl	80086f0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800200c:	f107 030c 	add.w	r3, r7, #12
 8002010:	2200      	movs	r2, #0
 8002012:	601a      	str	r2, [r3, #0]
 8002014:	605a      	str	r2, [r3, #4]
 8002016:	609a      	str	r2, [r3, #8]
 8002018:	60da      	str	r2, [r3, #12]
 800201a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800201c:	2300      	movs	r3, #0
 800201e:	60bb      	str	r3, [r7, #8]
 8002020:	4b29      	ldr	r3, [pc, #164]	@ (80020c8 <SystemClock_Config+0xd0>)
 8002022:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002024:	4a28      	ldr	r2, [pc, #160]	@ (80020c8 <SystemClock_Config+0xd0>)
 8002026:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800202a:	6413      	str	r3, [r2, #64]	@ 0x40
 800202c:	4b26      	ldr	r3, [pc, #152]	@ (80020c8 <SystemClock_Config+0xd0>)
 800202e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002030:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002034:	60bb      	str	r3, [r7, #8]
 8002036:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 8002038:	2300      	movs	r3, #0
 800203a:	607b      	str	r3, [r7, #4]
 800203c:	4b23      	ldr	r3, [pc, #140]	@ (80020cc <SystemClock_Config+0xd4>)
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8002044:	4a21      	ldr	r2, [pc, #132]	@ (80020cc <SystemClock_Config+0xd4>)
 8002046:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800204a:	6013      	str	r3, [r2, #0]
 800204c:	4b1f      	ldr	r3, [pc, #124]	@ (80020cc <SystemClock_Config+0xd4>)
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8002054:	607b      	str	r3, [r7, #4]
 8002056:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002058:	2302      	movs	r3, #2
 800205a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800205c:	2301      	movs	r3, #1
 800205e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002060:	2310      	movs	r3, #16
 8002062:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002064:	2302      	movs	r3, #2
 8002066:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002068:	2300      	movs	r3, #0
 800206a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 16;
 800206c:	2310      	movs	r3, #16
 800206e:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8002070:	f44f 73a8 	mov.w	r3, #336	@ 0x150
 8002074:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 8002076:	2304      	movs	r3, #4
 8002078:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 800207a:	2307      	movs	r3, #7
 800207c:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800207e:	f107 0320 	add.w	r3, r7, #32
 8002082:	4618      	mov	r0, r3
 8002084:	f003 fa38 	bl	80054f8 <HAL_RCC_OscConfig>
 8002088:	4603      	mov	r3, r0
 800208a:	2b00      	cmp	r3, #0
 800208c:	d001      	beq.n	8002092 <SystemClock_Config+0x9a>
  {
    Error_Handler();
 800208e:	f000 f81f 	bl	80020d0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002092:	230f      	movs	r3, #15
 8002094:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002096:	2302      	movs	r3, #2
 8002098:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800209a:	2300      	movs	r3, #0
 800209c:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800209e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80020a2:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80020a4:	2300      	movs	r3, #0
 80020a6:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80020a8:	f107 030c 	add.w	r3, r7, #12
 80020ac:	2102      	movs	r1, #2
 80020ae:	4618      	mov	r0, r3
 80020b0:	f003 fc9a 	bl	80059e8 <HAL_RCC_ClockConfig>
 80020b4:	4603      	mov	r3, r0
 80020b6:	2b00      	cmp	r3, #0
 80020b8:	d001      	beq.n	80020be <SystemClock_Config+0xc6>
  {
    Error_Handler();
 80020ba:	f000 f809 	bl	80020d0 <Error_Handler>
  }
}
 80020be:	bf00      	nop
 80020c0:	3750      	adds	r7, #80	@ 0x50
 80020c2:	46bd      	mov	sp, r7
 80020c4:	bd80      	pop	{r7, pc}
 80020c6:	bf00      	nop
 80020c8:	40023800 	.word	0x40023800
 80020cc:	40007000 	.word	0x40007000

080020d0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80020d0:	b480      	push	{r7}
 80020d2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80020d4:	b672      	cpsid	i
}
 80020d6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80020d8:	bf00      	nop
 80020da:	e7fd      	b.n	80020d8 <Error_Handler+0x8>

080020dc <init_ai_agent>:
};

#endif


void init_ai_agent(UART_HandleTypeDef *huart) {
 80020dc:	b580      	push	{r7, lr}
 80020de:	b09e      	sub	sp, #120	@ 0x78
 80020e0:	af00      	add	r7, sp, #0
 80020e2:	6078      	str	r0, [r7, #4]
    model.output_layer = x;

    #else

    // Connect the layers to build a model
    model.input_layer = ailayer_input_q7_default(&input_layer);
 80020e4:	4833      	ldr	r0, [pc, #204]	@ (80021b4 <init_ai_agent+0xd8>)
 80020e6:	f002 f90b 	bl	8004300 <ailayer_input_q7_default>
 80020ea:	4603      	mov	r3, r0
 80020ec:	4a32      	ldr	r2, [pc, #200]	@ (80021b8 <init_ai_agent+0xdc>)
 80020ee:	6013      	str	r3, [r2, #0]
    x = ailayer_dense_wt_q7_default(&dense_layer_1, model.input_layer);   // "wt" implementation, because the weights matrix is transposed
 80020f0:	4b31      	ldr	r3, [pc, #196]	@ (80021b8 <init_ai_agent+0xdc>)
 80020f2:	681b      	ldr	r3, [r3, #0]
 80020f4:	4619      	mov	r1, r3
 80020f6:	4831      	ldr	r0, [pc, #196]	@ (80021bc <init_ai_agent+0xe0>)
 80020f8:	f002 f8be 	bl	8004278 <ailayer_dense_wt_q7_default>
 80020fc:	6778      	str	r0, [r7, #116]	@ 0x74
    x = ailayer_relu_q7_default(&relu_layer_1, x);
 80020fe:	6f79      	ldr	r1, [r7, #116]	@ 0x74
 8002100:	482f      	ldr	r0, [pc, #188]	@ (80021c0 <init_ai_agent+0xe4>)
 8002102:	f002 f919 	bl	8004338 <ailayer_relu_q7_default>
 8002106:	6778      	str	r0, [r7, #116]	@ 0x74
    x = ailayer_dense_wt_q7_default(&dense_layer_2, x);
 8002108:	6f79      	ldr	r1, [r7, #116]	@ 0x74
 800210a:	482e      	ldr	r0, [pc, #184]	@ (80021c4 <init_ai_agent+0xe8>)
 800210c:	f002 f8b4 	bl	8004278 <ailayer_dense_wt_q7_default>
 8002110:	6778      	str	r0, [r7, #116]	@ 0x74
    x = ailayer_relu_q7_default(&relu_layer_2, x);
 8002112:	6f79      	ldr	r1, [r7, #116]	@ 0x74
 8002114:	482c      	ldr	r0, [pc, #176]	@ (80021c8 <init_ai_agent+0xec>)
 8002116:	f002 f90f 	bl	8004338 <ailayer_relu_q7_default>
 800211a:	6778      	str	r0, [r7, #116]	@ 0x74
    x = ailayer_dense_wt_q7_default(&dense_layer_3, x);
 800211c:	6f79      	ldr	r1, [r7, #116]	@ 0x74
 800211e:	482b      	ldr	r0, [pc, #172]	@ (80021cc <init_ai_agent+0xf0>)
 8002120:	f002 f8aa 	bl	8004278 <ailayer_dense_wt_q7_default>
 8002124:	6778      	str	r0, [r7, #116]	@ 0x74
    x = ailayer_softmax_q7_default(&softmax_layer, x);
 8002126:	6f79      	ldr	r1, [r7, #116]	@ 0x74
 8002128:	4829      	ldr	r0, [pc, #164]	@ (80021d0 <init_ai_agent+0xf4>)
 800212a:	f002 f951 	bl	80043d0 <ailayer_softmax_q7_default>
 800212e:	6778      	str	r0, [r7, #116]	@ 0x74
    model.output_layer = x;
 8002130:	4a21      	ldr	r2, [pc, #132]	@ (80021b8 <init_ai_agent+0xdc>)
 8002132:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8002134:	6053      	str	r3, [r2, #4]

    #endif // __AVR__

    // Finish the model creation by checking the connections and setting some parameters for further processing
    aialgo_compile_model(&model);
 8002136:	4820      	ldr	r0, [pc, #128]	@ (80021b8 <init_ai_agent+0xdc>)
 8002138:	f000 fd54 	bl	8002be4 <aialgo_compile_model>

    // Distribute the memory to the trainable parameters of the model
    aialgo_distribute_parameter_memory(&model, (void *) model_parameters, parameter_memory_size);
 800213c:	f240 533c 	movw	r3, #1340	@ 0x53c
 8002140:	461a      	mov	r2, r3
 8002142:	4924      	ldr	r1, [pc, #144]	@ (80021d4 <init_ai_agent+0xf8>)
 8002144:	481c      	ldr	r0, [pc, #112]	@ (80021b8 <init_ai_agent+0xdc>)
 8002146:	f000 fc12 	bl	800296e <aialgo_distribute_parameter_memory>

    // Clear the LCD and print the AI agent model structure
    Serial_Print(huart, "AI agent model structure\n");
 800214a:	4923      	ldr	r1, [pc, #140]	@ (80021d8 <init_ai_agent+0xfc>)
 800214c:	6878      	ldr	r0, [r7, #4]
 800214e:	f7ff fc3d 	bl	80019cc <Serial_Print>
    aialgo_print_model_structure(&model);
 8002152:	4819      	ldr	r0, [pc, #100]	@ (80021b8 <init_ai_agent+0xdc>)
 8002154:	f000 fd78 	bl	8002c48 <aialgo_print_model_structure>

    char buffer[100];
    snprintf(buffer, 100, "Weights need: %d bytes of memory\n", parameter_memory_size);
 8002158:	f240 533c 	movw	r3, #1340	@ 0x53c
 800215c:	f107 0008 	add.w	r0, r7, #8
 8002160:	4a1e      	ldr	r2, [pc, #120]	@ (80021dc <init_ai_agent+0x100>)
 8002162:	2164      	movs	r1, #100	@ 0x64
 8002164:	f006 f998 	bl	8008498 <sniprintf>
    Serial_Print(huart, buffer);
 8002168:	f107 0308 	add.w	r3, r7, #8
 800216c:	4619      	mov	r1, r3
 800216e:	6878      	ldr	r0, [r7, #4]
 8002170:	f7ff fc2c 	bl	80019cc <Serial_Print>

    // Allocate memory for intermediate results of the inference
    uint32_t inference_memory_size = aialgo_sizeof_inference_memory(&model);
 8002174:	4810      	ldr	r0, [pc, #64]	@ (80021b8 <init_ai_agent+0xdc>)
 8002176:	f000 fb7e 	bl	8002876 <aialgo_sizeof_inference_memory>
 800217a:	6738      	str	r0, [r7, #112]	@ 0x70
    snprintf(buffer, 100, "Model needs: %ld bytes for inference\n", inference_memory_size);
 800217c:	f107 0008 	add.w	r0, r7, #8
 8002180:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8002182:	4a17      	ldr	r2, [pc, #92]	@ (80021e0 <init_ai_agent+0x104>)
 8002184:	2164      	movs	r1, #100	@ 0x64
 8002186:	f006 f987 	bl	8008498 <sniprintf>
    Serial_Print(huart, buffer);
 800218a:	f107 0308 	add.w	r3, r7, #8
 800218e:	4619      	mov	r1, r3
 8002190:	6878      	ldr	r0, [r7, #4]
 8002192:	f7ff fc1b 	bl	80019cc <Serial_Print>

    void *inference_memory = malloc(inference_memory_size);
 8002196:	6f38      	ldr	r0, [r7, #112]	@ 0x70
 8002198:	f005 f988 	bl	80074ac <malloc>
 800219c:	4603      	mov	r3, r0
 800219e:	66fb      	str	r3, [r7, #108]	@ 0x6c

    // Schedule the memory to the model
    aialgo_schedule_inference_memory(&model, inference_memory, inference_memory_size);
 80021a0:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 80021a2:	6ef9      	ldr	r1, [r7, #108]	@ 0x6c
 80021a4:	4804      	ldr	r0, [pc, #16]	@ (80021b8 <init_ai_agent+0xdc>)
 80021a6:	f000 fc50 	bl	8002a4a <aialgo_schedule_inference_memory>
}
 80021aa:	bf00      	nop
 80021ac:	3778      	adds	r7, #120	@ 0x78
 80021ae:	46bd      	mov	sp, r7
 80021b0:	bd80      	pop	{r7, pc}
 80021b2:	bf00      	nop
 80021b4:	200001fc 	.word	0x200001fc
 80021b8:	2000076c 	.word	0x2000076c
 80021bc:	20000288 	.word	0x20000288
 80021c0:	2000077c 	.word	0x2000077c
 80021c4:	20000370 	.word	0x20000370
 80021c8:	2000080c 	.word	0x2000080c
 80021cc:	20000458 	.word	0x20000458
 80021d0:	2000089c 	.word	0x2000089c
 80021d4:	0800c174 	.word	0x0800c174
 80021d8:	0800bea4 	.word	0x0800bea4
 80021dc:	0800bec0 	.word	0x0800bec0
 80021e0:	0800bee4 	.word	0x0800bee4

080021e4 <run_ai_agent>:

uint8_t run_ai_agent(int8_t *board)
{
 80021e4:	b580      	push	{r7, lr}
 80021e6:	b08c      	sub	sp, #48	@ 0x30
 80021e8:	af00      	add	r7, sp, #0
 80021ea:	6078      	str	r0, [r7, #4]
  uint16_t board_shape[2] = {1, 9};
 80021ec:	4b2a      	ldr	r3, [pc, #168]	@ (8002298 <run_ai_agent+0xb4>)
 80021ee:	681b      	ldr	r3, [r3, #0]
 80021f0:	623b      	str	r3, [r7, #32]
  aimath_q7_params_t input_q_params;
  input_q_params.shift = pgm_read_word(&(((aimath_q7_params_t *) model.input_layer->result.tensor_params)->shift));
 80021f2:	4b2a      	ldr	r3, [pc, #168]	@ (800229c <run_ai_agent+0xb8>)
 80021f4:	681b      	ldr	r3, [r3, #0]
 80021f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80021f8:	881b      	ldrh	r3, [r3, #0]
 80021fa:	83bb      	strh	r3, [r7, #28]
  input_q_params.zero_point = pgm_read_word(&(((aimath_q7_params_t *) model.input_layer->result.tensor_params)->zero_point));
 80021fc:	4b27      	ldr	r3, [pc, #156]	@ (800229c <run_ai_agent+0xb8>)
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002202:	3302      	adds	r3, #2
 8002204:	881b      	ldrh	r3, [r3, #0]
 8002206:	b25b      	sxtb	r3, r3
 8002208:	77bb      	strb	r3, [r7, #30]
  aitensor_t board_tensor = AITENSOR_2D_Q7(board_shape, &input_q_params, board); // Has the same quantization parameters as the input layer of the nn
 800220a:	4b25      	ldr	r3, [pc, #148]	@ (80022a0 <run_ai_agent+0xbc>)
 800220c:	681b      	ldr	r3, [r3, #0]
 800220e:	60bb      	str	r3, [r7, #8]
 8002210:	2302      	movs	r3, #2
 8002212:	733b      	strb	r3, [r7, #12]
 8002214:	f107 0320 	add.w	r3, r7, #32
 8002218:	613b      	str	r3, [r7, #16]
 800221a:	f107 031c 	add.w	r3, r7, #28
 800221e:	617b      	str	r3, [r7, #20]
 8002220:	687b      	ldr	r3, [r7, #4]
 8002222:	61bb      	str	r3, [r7, #24]

  aitensor_t *out_tensor = aialgo_forward_model(&model, &board_tensor);
 8002224:	f107 0308 	add.w	r3, r7, #8
 8002228:	4619      	mov	r1, r3
 800222a:	481c      	ldr	r0, [pc, #112]	@ (800229c <run_ai_agent+0xb8>)
 800222c:	f000 fcb4 	bl	8002b98 <aialgo_forward_model>
 8002230:	62b8      	str	r0, [r7, #40]	@ 0x28
  int8_t *out_data = (int8_t *) out_tensor->data;
 8002232:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002234:	691b      	ldr	r3, [r3, #16]
 8002236:	627b      	str	r3, [r7, #36]	@ 0x24

  // Calculate the most probable index (argmax)
  int8_t maxi = out_data[0];
 8002238:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800223a:	781b      	ldrb	r3, [r3, #0]
 800223c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
  uint8_t argmax = 0;
 8002240:	2300      	movs	r3, #0
 8002242:	f887 302e 	strb.w	r3, [r7, #46]	@ 0x2e
  for(uint8_t j = 1; j < 9; j++){
 8002246:	2301      	movs	r3, #1
 8002248:	f887 302d 	strb.w	r3, [r7, #45]	@ 0x2d
 800224c:	e019      	b.n	8002282 <run_ai_agent+0x9e>
    if(out_data[j] > maxi){
 800224e:	f897 302d 	ldrb.w	r3, [r7, #45]	@ 0x2d
 8002252:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8002254:	4413      	add	r3, r2
 8002256:	f993 3000 	ldrsb.w	r3, [r3]
 800225a:	f997 202f 	ldrsb.w	r2, [r7, #47]	@ 0x2f
 800225e:	429a      	cmp	r2, r3
 8002260:	da0a      	bge.n	8002278 <run_ai_agent+0x94>
        maxi = out_data[j];
 8002262:	f897 302d 	ldrb.w	r3, [r7, #45]	@ 0x2d
 8002266:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8002268:	4413      	add	r3, r2
 800226a:	781b      	ldrb	r3, [r3, #0]
 800226c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
        argmax = j;
 8002270:	f897 302d 	ldrb.w	r3, [r7, #45]	@ 0x2d
 8002274:	f887 302e 	strb.w	r3, [r7, #46]	@ 0x2e
  for(uint8_t j = 1; j < 9; j++){
 8002278:	f897 302d 	ldrb.w	r3, [r7, #45]	@ 0x2d
 800227c:	3301      	adds	r3, #1
 800227e:	f887 302d 	strb.w	r3, [r7, #45]	@ 0x2d
 8002282:	f897 302d 	ldrb.w	r3, [r7, #45]	@ 0x2d
 8002286:	2b08      	cmp	r3, #8
 8002288:	d9e1      	bls.n	800224e <run_ai_agent+0x6a>
    }
  }

  return argmax;
 800228a:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
}
 800228e:	4618      	mov	r0, r3
 8002290:	3730      	adds	r7, #48	@ 0x30
 8002292:	46bd      	mov	sp, r7
 8002294:	bd80      	pop	{r7, pc}
 8002296:	bf00      	nop
 8002298:	0800bf0c 	.word	0x0800bf0c
 800229c:	2000076c 	.word	0x2000076c
 80022a0:	20000570 	.word	0x20000570

080022a4 <MX_SPI2_Init>:

SPI_HandleTypeDef hspi2;

/* SPI2 init function */
void MX_SPI2_Init(void)
{
 80022a4:	b580      	push	{r7, lr}
 80022a6:	af00      	add	r7, sp, #0
  /* USER CODE END SPI2_Init 0 */

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  hspi2.Instance = SPI2;
 80022a8:	4b17      	ldr	r3, [pc, #92]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022aa:	4a18      	ldr	r2, [pc, #96]	@ (800230c <MX_SPI2_Init+0x68>)
 80022ac:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80022ae:	4b16      	ldr	r3, [pc, #88]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022b0:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80022b4:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 80022b6:	4b14      	ldr	r3, [pc, #80]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022b8:	2200      	movs	r2, #0
 80022ba:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 80022bc:	4b12      	ldr	r3, [pc, #72]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022be:	2200      	movs	r2, #0
 80022c0:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 80022c2:	4b11      	ldr	r3, [pc, #68]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022c4:	2200      	movs	r2, #0
 80022c6:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 80022c8:	4b0f      	ldr	r3, [pc, #60]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022ca:	2200      	movs	r2, #0
 80022cc:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80022ce:	4b0e      	ldr	r3, [pc, #56]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022d0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80022d4:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80022d6:	4b0c      	ldr	r3, [pc, #48]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022d8:	2200      	movs	r2, #0
 80022da:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80022dc:	4b0a      	ldr	r3, [pc, #40]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022de:	2200      	movs	r2, #0
 80022e0:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 80022e2:	4b09      	ldr	r3, [pc, #36]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022e4:	2200      	movs	r2, #0
 80022e6:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80022e8:	4b07      	ldr	r3, [pc, #28]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022ea:	2200      	movs	r2, #0
 80022ec:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 10;
 80022ee:	4b06      	ldr	r3, [pc, #24]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022f0:	220a      	movs	r2, #10
 80022f2:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 80022f4:	4804      	ldr	r0, [pc, #16]	@ (8002308 <MX_SPI2_Init+0x64>)
 80022f6:	f003 fd97 	bl	8005e28 <HAL_SPI_Init>
 80022fa:	4603      	mov	r3, r0
 80022fc:	2b00      	cmp	r3, #0
 80022fe:	d001      	beq.n	8002304 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 8002300:	f7ff fee6 	bl	80020d0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8002304:	bf00      	nop
 8002306:	bd80      	pop	{r7, pc}
 8002308:	20000924 	.word	0x20000924
 800230c:	40003800 	.word	0x40003800

08002310 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8002310:	b580      	push	{r7, lr}
 8002312:	b08a      	sub	sp, #40	@ 0x28
 8002314:	af00      	add	r7, sp, #0
 8002316:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002318:	f107 0314 	add.w	r3, r7, #20
 800231c:	2200      	movs	r2, #0
 800231e:	601a      	str	r2, [r3, #0]
 8002320:	605a      	str	r2, [r3, #4]
 8002322:	609a      	str	r2, [r3, #8]
 8002324:	60da      	str	r2, [r3, #12]
 8002326:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI2)
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	4a28      	ldr	r2, [pc, #160]	@ (80023d0 <HAL_SPI_MspInit+0xc0>)
 800232e:	4293      	cmp	r3, r2
 8002330:	d14a      	bne.n	80023c8 <HAL_SPI_MspInit+0xb8>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* SPI2 clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8002332:	2300      	movs	r3, #0
 8002334:	613b      	str	r3, [r7, #16]
 8002336:	4b27      	ldr	r3, [pc, #156]	@ (80023d4 <HAL_SPI_MspInit+0xc4>)
 8002338:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800233a:	4a26      	ldr	r2, [pc, #152]	@ (80023d4 <HAL_SPI_MspInit+0xc4>)
 800233c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002340:	6413      	str	r3, [r2, #64]	@ 0x40
 8002342:	4b24      	ldr	r3, [pc, #144]	@ (80023d4 <HAL_SPI_MspInit+0xc4>)
 8002344:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002346:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800234a:	613b      	str	r3, [r7, #16]
 800234c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800234e:	2300      	movs	r3, #0
 8002350:	60fb      	str	r3, [r7, #12]
 8002352:	4b20      	ldr	r3, [pc, #128]	@ (80023d4 <HAL_SPI_MspInit+0xc4>)
 8002354:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002356:	4a1f      	ldr	r2, [pc, #124]	@ (80023d4 <HAL_SPI_MspInit+0xc4>)
 8002358:	f043 0304 	orr.w	r3, r3, #4
 800235c:	6313      	str	r3, [r2, #48]	@ 0x30
 800235e:	4b1d      	ldr	r3, [pc, #116]	@ (80023d4 <HAL_SPI_MspInit+0xc4>)
 8002360:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002362:	f003 0304 	and.w	r3, r3, #4
 8002366:	60fb      	str	r3, [r7, #12]
 8002368:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800236a:	2300      	movs	r3, #0
 800236c:	60bb      	str	r3, [r7, #8]
 800236e:	4b19      	ldr	r3, [pc, #100]	@ (80023d4 <HAL_SPI_MspInit+0xc4>)
 8002370:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002372:	4a18      	ldr	r2, [pc, #96]	@ (80023d4 <HAL_SPI_MspInit+0xc4>)
 8002374:	f043 0302 	orr.w	r3, r3, #2
 8002378:	6313      	str	r3, [r2, #48]	@ 0x30
 800237a:	4b16      	ldr	r3, [pc, #88]	@ (80023d4 <HAL_SPI_MspInit+0xc4>)
 800237c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800237e:	f003 0302 	and.w	r3, r3, #2
 8002382:	60bb      	str	r3, [r7, #8]
 8002384:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PC2     ------> SPI2_MISO
    PC3     ------> SPI2_MOSI
    PB10     ------> SPI2_SCK
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|MOSI_LCD_DISPLAY_Pin;
 8002386:	230c      	movs	r3, #12
 8002388:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800238a:	2302      	movs	r3, #2
 800238c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800238e:	2300      	movs	r3, #0
 8002390:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002392:	2303      	movs	r3, #3
 8002394:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002396:	2305      	movs	r3, #5
 8002398:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800239a:	f107 0314 	add.w	r3, r7, #20
 800239e:	4619      	mov	r1, r3
 80023a0:	480d      	ldr	r0, [pc, #52]	@ (80023d8 <HAL_SPI_MspInit+0xc8>)
 80023a2:	f002 ff0b 	bl	80051bc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = SCLK_LCD_DISPLAY_Pin;
 80023a6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80023aa:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023ac:	2302      	movs	r3, #2
 80023ae:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023b0:	2300      	movs	r3, #0
 80023b2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023b4:	2303      	movs	r3, #3
 80023b6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80023b8:	2305      	movs	r3, #5
 80023ba:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(SCLK_LCD_DISPLAY_GPIO_Port, &GPIO_InitStruct);
 80023bc:	f107 0314 	add.w	r3, r7, #20
 80023c0:	4619      	mov	r1, r3
 80023c2:	4806      	ldr	r0, [pc, #24]	@ (80023dc <HAL_SPI_MspInit+0xcc>)
 80023c4:	f002 fefa 	bl	80051bc <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }
}
 80023c8:	bf00      	nop
 80023ca:	3728      	adds	r7, #40	@ 0x28
 80023cc:	46bd      	mov	sp, r7
 80023ce:	bd80      	pop	{r7, pc}
 80023d0:	40003800 	.word	0x40003800
 80023d4:	40023800 	.word	0x40023800
 80023d8:	40020800 	.word	0x40020800
 80023dc:	40020400 	.word	0x40020400

080023e0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80023e0:	b580      	push	{r7, lr}
 80023e2:	b082      	sub	sp, #8
 80023e4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80023e6:	2300      	movs	r3, #0
 80023e8:	607b      	str	r3, [r7, #4]
 80023ea:	4b10      	ldr	r3, [pc, #64]	@ (800242c <HAL_MspInit+0x4c>)
 80023ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80023ee:	4a0f      	ldr	r2, [pc, #60]	@ (800242c <HAL_MspInit+0x4c>)
 80023f0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80023f4:	6453      	str	r3, [r2, #68]	@ 0x44
 80023f6:	4b0d      	ldr	r3, [pc, #52]	@ (800242c <HAL_MspInit+0x4c>)
 80023f8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80023fa:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80023fe:	607b      	str	r3, [r7, #4]
 8002400:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002402:	2300      	movs	r3, #0
 8002404:	603b      	str	r3, [r7, #0]
 8002406:	4b09      	ldr	r3, [pc, #36]	@ (800242c <HAL_MspInit+0x4c>)
 8002408:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800240a:	4a08      	ldr	r2, [pc, #32]	@ (800242c <HAL_MspInit+0x4c>)
 800240c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002410:	6413      	str	r3, [r2, #64]	@ 0x40
 8002412:	4b06      	ldr	r3, [pc, #24]	@ (800242c <HAL_MspInit+0x4c>)
 8002414:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002416:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800241a:	603b      	str	r3, [r7, #0]
 800241c:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 800241e:	2007      	movs	r0, #7
 8002420:	f002 fdf8 	bl	8005014 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002424:	bf00      	nop
 8002426:	3708      	adds	r7, #8
 8002428:	46bd      	mov	sp, r7
 800242a:	bd80      	pop	{r7, pc}
 800242c:	40023800 	.word	0x40023800

08002430 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002430:	b480      	push	{r7}
 8002432:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002434:	bf00      	nop
 8002436:	e7fd      	b.n	8002434 <NMI_Handler+0x4>

08002438 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002438:	b480      	push	{r7}
 800243a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800243c:	bf00      	nop
 800243e:	e7fd      	b.n	800243c <HardFault_Handler+0x4>

08002440 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002440:	b480      	push	{r7}
 8002442:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002444:	bf00      	nop
 8002446:	e7fd      	b.n	8002444 <MemManage_Handler+0x4>

08002448 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002448:	b480      	push	{r7}
 800244a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800244c:	bf00      	nop
 800244e:	e7fd      	b.n	800244c <BusFault_Handler+0x4>

08002450 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002450:	b480      	push	{r7}
 8002452:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002454:	bf00      	nop
 8002456:	e7fd      	b.n	8002454 <UsageFault_Handler+0x4>

08002458 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002458:	b480      	push	{r7}
 800245a:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800245c:	bf00      	nop
 800245e:	46bd      	mov	sp, r7
 8002460:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002464:	4770      	bx	lr

08002466 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002466:	b480      	push	{r7}
 8002468:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800246a:	bf00      	nop
 800246c:	46bd      	mov	sp, r7
 800246e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002472:	4770      	bx	lr

08002474 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002474:	b480      	push	{r7}
 8002476:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002478:	bf00      	nop
 800247a:	46bd      	mov	sp, r7
 800247c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002480:	4770      	bx	lr

08002482 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002482:	b580      	push	{r7, lr}
 8002484:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002486:	f002 fcb1 	bl	8004dec <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800248a:	bf00      	nop
 800248c:	bd80      	pop	{r7, pc}
	...

08002490 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8002490:	b580      	push	{r7, lr}
 8002492:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8002494:	4802      	ldr	r0, [pc, #8]	@ (80024a0 <USART2_IRQHandler+0x10>)
 8002496:	f004 f8e3 	bl	8006660 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 800249a:	bf00      	nop
 800249c:	bd80      	pop	{r7, pc}
 800249e:	bf00      	nop
 80024a0:	20000980 	.word	0x20000980

080024a4 <_getpid>:
 80024a4:	b480      	push	{r7}
 80024a6:	af00      	add	r7, sp, #0
 80024a8:	2301      	movs	r3, #1
 80024aa:	4618      	mov	r0, r3
 80024ac:	46bd      	mov	sp, r7
 80024ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024b2:	4770      	bx	lr

080024b4 <_kill>:
 80024b4:	b580      	push	{r7, lr}
 80024b6:	b082      	sub	sp, #8
 80024b8:	af00      	add	r7, sp, #0
 80024ba:	6078      	str	r0, [r7, #4]
 80024bc:	6039      	str	r1, [r7, #0]
 80024be:	f006 f991 	bl	80087e4 <__errno>
 80024c2:	4603      	mov	r3, r0
 80024c4:	2216      	movs	r2, #22
 80024c6:	601a      	str	r2, [r3, #0]
 80024c8:	f04f 33ff 	mov.w	r3, #4294967295
 80024cc:	4618      	mov	r0, r3
 80024ce:	3708      	adds	r7, #8
 80024d0:	46bd      	mov	sp, r7
 80024d2:	bd80      	pop	{r7, pc}

080024d4 <_exit>:
 80024d4:	b580      	push	{r7, lr}
 80024d6:	b082      	sub	sp, #8
 80024d8:	af00      	add	r7, sp, #0
 80024da:	6078      	str	r0, [r7, #4]
 80024dc:	f04f 31ff 	mov.w	r1, #4294967295
 80024e0:	6878      	ldr	r0, [r7, #4]
 80024e2:	f7ff ffe7 	bl	80024b4 <_kill>
 80024e6:	bf00      	nop
 80024e8:	e7fd      	b.n	80024e6 <_exit+0x12>

080024ea <_read>:
 80024ea:	b580      	push	{r7, lr}
 80024ec:	b086      	sub	sp, #24
 80024ee:	af00      	add	r7, sp, #0
 80024f0:	60f8      	str	r0, [r7, #12]
 80024f2:	60b9      	str	r1, [r7, #8]
 80024f4:	607a      	str	r2, [r7, #4]
 80024f6:	2300      	movs	r3, #0
 80024f8:	617b      	str	r3, [r7, #20]
 80024fa:	e00a      	b.n	8002512 <_read+0x28>
 80024fc:	f3af 8000 	nop.w
 8002500:	4601      	mov	r1, r0
 8002502:	68bb      	ldr	r3, [r7, #8]
 8002504:	1c5a      	adds	r2, r3, #1
 8002506:	60ba      	str	r2, [r7, #8]
 8002508:	b2ca      	uxtb	r2, r1
 800250a:	701a      	strb	r2, [r3, #0]
 800250c:	697b      	ldr	r3, [r7, #20]
 800250e:	3301      	adds	r3, #1
 8002510:	617b      	str	r3, [r7, #20]
 8002512:	697a      	ldr	r2, [r7, #20]
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	429a      	cmp	r2, r3
 8002518:	dbf0      	blt.n	80024fc <_read+0x12>
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	4618      	mov	r0, r3
 800251e:	3718      	adds	r7, #24
 8002520:	46bd      	mov	sp, r7
 8002522:	bd80      	pop	{r7, pc}

08002524 <_write>:
 8002524:	b580      	push	{r7, lr}
 8002526:	b086      	sub	sp, #24
 8002528:	af00      	add	r7, sp, #0
 800252a:	60f8      	str	r0, [r7, #12]
 800252c:	60b9      	str	r1, [r7, #8]
 800252e:	607a      	str	r2, [r7, #4]
 8002530:	2300      	movs	r3, #0
 8002532:	617b      	str	r3, [r7, #20]
 8002534:	e009      	b.n	800254a <_write+0x26>
 8002536:	68bb      	ldr	r3, [r7, #8]
 8002538:	1c5a      	adds	r2, r3, #1
 800253a:	60ba      	str	r2, [r7, #8]
 800253c:	781b      	ldrb	r3, [r3, #0]
 800253e:	4618      	mov	r0, r3
 8002540:	f3af 8000 	nop.w
 8002544:	697b      	ldr	r3, [r7, #20]
 8002546:	3301      	adds	r3, #1
 8002548:	617b      	str	r3, [r7, #20]
 800254a:	697a      	ldr	r2, [r7, #20]
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	429a      	cmp	r2, r3
 8002550:	dbf1      	blt.n	8002536 <_write+0x12>
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	4618      	mov	r0, r3
 8002556:	3718      	adds	r7, #24
 8002558:	46bd      	mov	sp, r7
 800255a:	bd80      	pop	{r7, pc}

0800255c <_close>:
 800255c:	b480      	push	{r7}
 800255e:	b083      	sub	sp, #12
 8002560:	af00      	add	r7, sp, #0
 8002562:	6078      	str	r0, [r7, #4]
 8002564:	f04f 33ff 	mov.w	r3, #4294967295
 8002568:	4618      	mov	r0, r3
 800256a:	370c      	adds	r7, #12
 800256c:	46bd      	mov	sp, r7
 800256e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002572:	4770      	bx	lr

08002574 <_fstat>:
 8002574:	b480      	push	{r7}
 8002576:	b083      	sub	sp, #12
 8002578:	af00      	add	r7, sp, #0
 800257a:	6078      	str	r0, [r7, #4]
 800257c:	6039      	str	r1, [r7, #0]
 800257e:	683b      	ldr	r3, [r7, #0]
 8002580:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002584:	605a      	str	r2, [r3, #4]
 8002586:	2300      	movs	r3, #0
 8002588:	4618      	mov	r0, r3
 800258a:	370c      	adds	r7, #12
 800258c:	46bd      	mov	sp, r7
 800258e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002592:	4770      	bx	lr

08002594 <_isatty>:
 8002594:	b480      	push	{r7}
 8002596:	b083      	sub	sp, #12
 8002598:	af00      	add	r7, sp, #0
 800259a:	6078      	str	r0, [r7, #4]
 800259c:	2301      	movs	r3, #1
 800259e:	4618      	mov	r0, r3
 80025a0:	370c      	adds	r7, #12
 80025a2:	46bd      	mov	sp, r7
 80025a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025a8:	4770      	bx	lr

080025aa <_lseek>:
 80025aa:	b480      	push	{r7}
 80025ac:	b085      	sub	sp, #20
 80025ae:	af00      	add	r7, sp, #0
 80025b0:	60f8      	str	r0, [r7, #12]
 80025b2:	60b9      	str	r1, [r7, #8]
 80025b4:	607a      	str	r2, [r7, #4]
 80025b6:	2300      	movs	r3, #0
 80025b8:	4618      	mov	r0, r3
 80025ba:	3714      	adds	r7, #20
 80025bc:	46bd      	mov	sp, r7
 80025be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025c2:	4770      	bx	lr

080025c4 <_times>:
 80025c4:	b480      	push	{r7}
 80025c6:	b083      	sub	sp, #12
 80025c8:	af00      	add	r7, sp, #0
 80025ca:	6078      	str	r0, [r7, #4]
 80025cc:	f04f 33ff 	mov.w	r3, #4294967295
 80025d0:	4618      	mov	r0, r3
 80025d2:	370c      	adds	r7, #12
 80025d4:	46bd      	mov	sp, r7
 80025d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025da:	4770      	bx	lr

080025dc <_sbrk>:
 80025dc:	b580      	push	{r7, lr}
 80025de:	b086      	sub	sp, #24
 80025e0:	af00      	add	r7, sp, #0
 80025e2:	6078      	str	r0, [r7, #4]
 80025e4:	4a14      	ldr	r2, [pc, #80]	@ (8002638 <_sbrk+0x5c>)
 80025e6:	4b15      	ldr	r3, [pc, #84]	@ (800263c <_sbrk+0x60>)
 80025e8:	1ad3      	subs	r3, r2, r3
 80025ea:	617b      	str	r3, [r7, #20]
 80025ec:	697b      	ldr	r3, [r7, #20]
 80025ee:	613b      	str	r3, [r7, #16]
 80025f0:	4b13      	ldr	r3, [pc, #76]	@ (8002640 <_sbrk+0x64>)
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	2b00      	cmp	r3, #0
 80025f6:	d102      	bne.n	80025fe <_sbrk+0x22>
 80025f8:	4b11      	ldr	r3, [pc, #68]	@ (8002640 <_sbrk+0x64>)
 80025fa:	4a12      	ldr	r2, [pc, #72]	@ (8002644 <_sbrk+0x68>)
 80025fc:	601a      	str	r2, [r3, #0]
 80025fe:	4b10      	ldr	r3, [pc, #64]	@ (8002640 <_sbrk+0x64>)
 8002600:	681a      	ldr	r2, [r3, #0]
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	4413      	add	r3, r2
 8002606:	693a      	ldr	r2, [r7, #16]
 8002608:	429a      	cmp	r2, r3
 800260a:	d207      	bcs.n	800261c <_sbrk+0x40>
 800260c:	f006 f8ea 	bl	80087e4 <__errno>
 8002610:	4603      	mov	r3, r0
 8002612:	220c      	movs	r2, #12
 8002614:	601a      	str	r2, [r3, #0]
 8002616:	f04f 33ff 	mov.w	r3, #4294967295
 800261a:	e009      	b.n	8002630 <_sbrk+0x54>
 800261c:	4b08      	ldr	r3, [pc, #32]	@ (8002640 <_sbrk+0x64>)
 800261e:	681b      	ldr	r3, [r3, #0]
 8002620:	60fb      	str	r3, [r7, #12]
 8002622:	4b07      	ldr	r3, [pc, #28]	@ (8002640 <_sbrk+0x64>)
 8002624:	681a      	ldr	r2, [r3, #0]
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	4413      	add	r3, r2
 800262a:	4a05      	ldr	r2, [pc, #20]	@ (8002640 <_sbrk+0x64>)
 800262c:	6013      	str	r3, [r2, #0]
 800262e:	68fb      	ldr	r3, [r7, #12]
 8002630:	4618      	mov	r0, r3
 8002632:	3718      	adds	r7, #24
 8002634:	46bd      	mov	sp, r7
 8002636:	bd80      	pop	{r7, pc}
 8002638:	20018000 	.word	0x20018000
 800263c:	00000400 	.word	0x00000400
 8002640:	2000097c 	.word	0x2000097c
 8002644:	20000b18 	.word	0x20000b18

08002648 <SystemInit>:
 8002648:	b480      	push	{r7}
 800264a:	af00      	add	r7, sp, #0
 800264c:	4b06      	ldr	r3, [pc, #24]	@ (8002668 <SystemInit+0x20>)
 800264e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8002652:	4a05      	ldr	r2, [pc, #20]	@ (8002668 <SystemInit+0x20>)
 8002654:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002658:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 800265c:	bf00      	nop
 800265e:	46bd      	mov	sp, r7
 8002660:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002664:	4770      	bx	lr
 8002666:	bf00      	nop
 8002668:	e000ed00 	.word	0xe000ed00

0800266c <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 800266c:	b580      	push	{r7, lr}
 800266e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002670:	4b11      	ldr	r3, [pc, #68]	@ (80026b8 <MX_USART2_UART_Init+0x4c>)
 8002672:	4a12      	ldr	r2, [pc, #72]	@ (80026bc <MX_USART2_UART_Init+0x50>)
 8002674:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8002676:	4b10      	ldr	r3, [pc, #64]	@ (80026b8 <MX_USART2_UART_Init+0x4c>)
 8002678:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800267c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800267e:	4b0e      	ldr	r3, [pc, #56]	@ (80026b8 <MX_USART2_UART_Init+0x4c>)
 8002680:	2200      	movs	r2, #0
 8002682:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002684:	4b0c      	ldr	r3, [pc, #48]	@ (80026b8 <MX_USART2_UART_Init+0x4c>)
 8002686:	2200      	movs	r2, #0
 8002688:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800268a:	4b0b      	ldr	r3, [pc, #44]	@ (80026b8 <MX_USART2_UART_Init+0x4c>)
 800268c:	2200      	movs	r2, #0
 800268e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002690:	4b09      	ldr	r3, [pc, #36]	@ (80026b8 <MX_USART2_UART_Init+0x4c>)
 8002692:	220c      	movs	r2, #12
 8002694:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002696:	4b08      	ldr	r3, [pc, #32]	@ (80026b8 <MX_USART2_UART_Init+0x4c>)
 8002698:	2200      	movs	r2, #0
 800269a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800269c:	4b06      	ldr	r3, [pc, #24]	@ (80026b8 <MX_USART2_UART_Init+0x4c>)
 800269e:	2200      	movs	r2, #0
 80026a0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80026a2:	4805      	ldr	r0, [pc, #20]	@ (80026b8 <MX_USART2_UART_Init+0x4c>)
 80026a4:	f003 fe6a 	bl	800637c <HAL_UART_Init>
 80026a8:	4603      	mov	r3, r0
 80026aa:	2b00      	cmp	r3, #0
 80026ac:	d001      	beq.n	80026b2 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80026ae:	f7ff fd0f 	bl	80020d0 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80026b2:	bf00      	nop
 80026b4:	bd80      	pop	{r7, pc}
 80026b6:	bf00      	nop
 80026b8:	20000980 	.word	0x20000980
 80026bc:	40004400 	.word	0x40004400

080026c0 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80026c0:	b580      	push	{r7, lr}
 80026c2:	b08a      	sub	sp, #40	@ 0x28
 80026c4:	af00      	add	r7, sp, #0
 80026c6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80026c8:	f107 0314 	add.w	r3, r7, #20
 80026cc:	2200      	movs	r2, #0
 80026ce:	601a      	str	r2, [r3, #0]
 80026d0:	605a      	str	r2, [r3, #4]
 80026d2:	609a      	str	r2, [r3, #8]
 80026d4:	60da      	str	r2, [r3, #12]
 80026d6:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART2)
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	4a1d      	ldr	r2, [pc, #116]	@ (8002754 <HAL_UART_MspInit+0x94>)
 80026de:	4293      	cmp	r3, r2
 80026e0:	d133      	bne.n	800274a <HAL_UART_MspInit+0x8a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80026e2:	2300      	movs	r3, #0
 80026e4:	613b      	str	r3, [r7, #16]
 80026e6:	4b1c      	ldr	r3, [pc, #112]	@ (8002758 <HAL_UART_MspInit+0x98>)
 80026e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026ea:	4a1b      	ldr	r2, [pc, #108]	@ (8002758 <HAL_UART_MspInit+0x98>)
 80026ec:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80026f0:	6413      	str	r3, [r2, #64]	@ 0x40
 80026f2:	4b19      	ldr	r3, [pc, #100]	@ (8002758 <HAL_UART_MspInit+0x98>)
 80026f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026f6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80026fa:	613b      	str	r3, [r7, #16]
 80026fc:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80026fe:	2300      	movs	r3, #0
 8002700:	60fb      	str	r3, [r7, #12]
 8002702:	4b15      	ldr	r3, [pc, #84]	@ (8002758 <HAL_UART_MspInit+0x98>)
 8002704:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002706:	4a14      	ldr	r2, [pc, #80]	@ (8002758 <HAL_UART_MspInit+0x98>)
 8002708:	f043 0301 	orr.w	r3, r3, #1
 800270c:	6313      	str	r3, [r2, #48]	@ 0x30
 800270e:	4b12      	ldr	r3, [pc, #72]	@ (8002758 <HAL_UART_MspInit+0x98>)
 8002710:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002712:	f003 0301 	and.w	r3, r3, #1
 8002716:	60fb      	str	r3, [r7, #12]
 8002718:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 800271a:	230c      	movs	r3, #12
 800271c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800271e:	2302      	movs	r3, #2
 8002720:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002722:	2300      	movs	r3, #0
 8002724:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002726:	2300      	movs	r3, #0
 8002728:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800272a:	2307      	movs	r3, #7
 800272c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800272e:	f107 0314 	add.w	r3, r7, #20
 8002732:	4619      	mov	r1, r3
 8002734:	4809      	ldr	r0, [pc, #36]	@ (800275c <HAL_UART_MspInit+0x9c>)
 8002736:	f002 fd41 	bl	80051bc <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800273a:	2200      	movs	r2, #0
 800273c:	2100      	movs	r1, #0
 800273e:	2026      	movs	r0, #38	@ 0x26
 8002740:	f002 fc73 	bl	800502a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002744:	2026      	movs	r0, #38	@ 0x26
 8002746:	f002 fc8c 	bl	8005062 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 800274a:	bf00      	nop
 800274c:	3728      	adds	r7, #40	@ 0x28
 800274e:	46bd      	mov	sp, r7
 8002750:	bd80      	pop	{r7, pc}
 8002752:	bf00      	nop
 8002754:	40004400 	.word	0x40004400
 8002758:	40023800 	.word	0x40023800
 800275c:	40020000 	.word	0x40020000

08002760 <Reset_Handler>:
 8002760:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002798 <LoopFillZerobss+0xe>
 8002764:	f7ff ff70 	bl	8002648 <SystemInit>
 8002768:	480c      	ldr	r0, [pc, #48]	@ (800279c <LoopFillZerobss+0x12>)
 800276a:	490d      	ldr	r1, [pc, #52]	@ (80027a0 <LoopFillZerobss+0x16>)
 800276c:	4a0d      	ldr	r2, [pc, #52]	@ (80027a4 <LoopFillZerobss+0x1a>)
 800276e:	2300      	movs	r3, #0
 8002770:	e002      	b.n	8002778 <LoopCopyDataInit>

08002772 <CopyDataInit>:
 8002772:	58d4      	ldr	r4, [r2, r3]
 8002774:	50c4      	str	r4, [r0, r3]
 8002776:	3304      	adds	r3, #4

08002778 <LoopCopyDataInit>:
 8002778:	18c4      	adds	r4, r0, r3
 800277a:	428c      	cmp	r4, r1
 800277c:	d3f9      	bcc.n	8002772 <CopyDataInit>
 800277e:	4a0a      	ldr	r2, [pc, #40]	@ (80027a8 <LoopFillZerobss+0x1e>)
 8002780:	4c0a      	ldr	r4, [pc, #40]	@ (80027ac <LoopFillZerobss+0x22>)
 8002782:	2300      	movs	r3, #0
 8002784:	e001      	b.n	800278a <LoopFillZerobss>

08002786 <FillZerobss>:
 8002786:	6013      	str	r3, [r2, #0]
 8002788:	3204      	adds	r2, #4

0800278a <LoopFillZerobss>:
 800278a:	42a2      	cmp	r2, r4
 800278c:	d3fb      	bcc.n	8002786 <FillZerobss>
 800278e:	f006 f82f 	bl	80087f0 <__libc_init_array>
 8002792:	f7ff fbf3 	bl	8001f7c <main>
 8002796:	4770      	bx	lr
 8002798:	20018000 	.word	0x20018000
 800279c:	20000000 	.word	0x20000000
 80027a0:	20000744 	.word	0x20000744
 80027a4:	0800cd3c 	.word	0x0800cd3c
 80027a8:	20000744 	.word	0x20000744
 80027ac:	20000b18 	.word	0x20000b18

080027b0 <ADC_IRQHandler>:
 80027b0:	e7fe      	b.n	80027b0 <ADC_IRQHandler>
	...

080027b4 <aifes_log_e>:
 80027b4:	b580      	push	{r7, lr}
 80027b6:	b082      	sub	sp, #8
 80027b8:	af00      	add	r7, sp, #0
 80027ba:	6078      	str	r0, [r7, #4]
 80027bc:	4805      	ldr	r0, [pc, #20]	@ (80027d4 <aifes_log_e+0x20>)
 80027be:	f005 fe59 	bl	8008474 <iprintf>
 80027c2:	6879      	ldr	r1, [r7, #4]
 80027c4:	4804      	ldr	r0, [pc, #16]	@ (80027d8 <aifes_log_e+0x24>)
 80027c6:	f005 fe55 	bl	8008474 <iprintf>
 80027ca:	4603      	mov	r3, r0
 80027cc:	4618      	mov	r0, r3
 80027ce:	3708      	adds	r7, #8
 80027d0:	46bd      	mov	sp, r7
 80027d2:	bd80      	pop	{r7, pc}
 80027d4:	0800bf10 	.word	0x0800bf10
 80027d8:	0800bf1c 	.word	0x0800bf1c

080027dc <aifes_print>:
 80027dc:	b580      	push	{r7, lr}
 80027de:	b082      	sub	sp, #8
 80027e0:	af00      	add	r7, sp, #0
 80027e2:	6078      	str	r0, [r7, #4]
 80027e4:	6879      	ldr	r1, [r7, #4]
 80027e6:	4804      	ldr	r0, [pc, #16]	@ (80027f8 <aifes_print+0x1c>)
 80027e8:	f005 fe44 	bl	8008474 <iprintf>
 80027ec:	4603      	mov	r3, r0
 80027ee:	4618      	mov	r0, r3
 80027f0:	3708      	adds	r7, #8
 80027f2:	46bd      	mov	sp, r7
 80027f4:	bd80      	pop	{r7, pc}
 80027f6:	bf00      	nop
 80027f8:	0800bf1c 	.word	0x0800bf1c

080027fc <aifes_print_int>:
 80027fc:	b580      	push	{r7, lr}
 80027fe:	b082      	sub	sp, #8
 8002800:	af00      	add	r7, sp, #0
 8002802:	6078      	str	r0, [r7, #4]
 8002804:	6039      	str	r1, [r7, #0]
 8002806:	6839      	ldr	r1, [r7, #0]
 8002808:	6878      	ldr	r0, [r7, #4]
 800280a:	f005 fe33 	bl	8008474 <iprintf>
 800280e:	4603      	mov	r3, r0
 8002810:	4618      	mov	r0, r3
 8002812:	3708      	adds	r7, #8
 8002814:	46bd      	mov	sp, r7
 8002816:	bd80      	pop	{r7, pc}

08002818 <aifes_print_uint>:
 8002818:	b580      	push	{r7, lr}
 800281a:	b082      	sub	sp, #8
 800281c:	af00      	add	r7, sp, #0
 800281e:	6078      	str	r0, [r7, #4]
 8002820:	6039      	str	r1, [r7, #0]
 8002822:	6839      	ldr	r1, [r7, #0]
 8002824:	6878      	ldr	r0, [r7, #4]
 8002826:	f005 fe25 	bl	8008474 <iprintf>
 800282a:	4603      	mov	r3, r0
 800282c:	4618      	mov	r0, r3
 800282e:	3708      	adds	r7, #8
 8002830:	46bd      	mov	sp, r7
 8002832:	bd80      	pop	{r7, pc}

08002834 <aifes_print_long_int>:
 8002834:	b580      	push	{r7, lr}
 8002836:	b082      	sub	sp, #8
 8002838:	af00      	add	r7, sp, #0
 800283a:	6078      	str	r0, [r7, #4]
 800283c:	6039      	str	r1, [r7, #0]
 800283e:	6839      	ldr	r1, [r7, #0]
 8002840:	6878      	ldr	r0, [r7, #4]
 8002842:	f005 fe17 	bl	8008474 <iprintf>
 8002846:	4603      	mov	r3, r0
 8002848:	4618      	mov	r0, r3
 800284a:	3708      	adds	r7, #8
 800284c:	46bd      	mov	sp, r7
 800284e:	bd80      	pop	{r7, pc}

08002850 <aifes_print_float>:
 8002850:	b580      	push	{r7, lr}
 8002852:	b082      	sub	sp, #8
 8002854:	af00      	add	r7, sp, #0
 8002856:	6078      	str	r0, [r7, #4]
 8002858:	ed87 0a00 	vstr	s0, [r7]
 800285c:	6838      	ldr	r0, [r7, #0]
 800285e:	f7fd fe7b 	bl	8000558 <__aeabi_f2d>
 8002862:	4602      	mov	r2, r0
 8002864:	460b      	mov	r3, r1
 8002866:	6878      	ldr	r0, [r7, #4]
 8002868:	f005 fe04 	bl	8008474 <iprintf>
 800286c:	4603      	mov	r3, r0
 800286e:	4618      	mov	r0, r3
 8002870:	3708      	adds	r7, #8
 8002872:	46bd      	mov	sp, r7
 8002874:	bd80      	pop	{r7, pc}

08002876 <aialgo_sizeof_inference_memory>:
 8002876:	b580      	push	{r7, lr}
 8002878:	b088      	sub	sp, #32
 800287a:	af00      	add	r7, sp, #0
 800287c:	6078      	str	r0, [r7, #4]
 800287e:	2300      	movs	r3, #0
 8002880:	61bb      	str	r3, [r7, #24]
 8002882:	2300      	movs	r3, #0
 8002884:	617b      	str	r3, [r7, #20]
 8002886:	2300      	movs	r3, #0
 8002888:	613b      	str	r3, [r7, #16]
 800288a:	2300      	movs	r3, #0
 800288c:	60fb      	str	r3, [r7, #12]
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	60bb      	str	r3, [r7, #8]
 8002894:	2300      	movs	r3, #0
 8002896:	83fb      	strh	r3, [r7, #30]
 8002898:	e046      	b.n	8002928 <aialgo_sizeof_inference_memory+0xb2>
 800289a:	68bb      	ldr	r3, [r7, #8]
 800289c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800289e:	68b8      	ldr	r0, [r7, #8]
 80028a0:	4798      	blx	r3
 80028a2:	68bb      	ldr	r3, [r7, #8]
 80028a4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80028a6:	2b00      	cmp	r3, #0
 80028a8:	d00e      	beq.n	80028c8 <aialgo_sizeof_inference_memory+0x52>
 80028aa:	68bb      	ldr	r3, [r7, #8]
 80028ac:	69db      	ldr	r3, [r3, #28]
 80028ae:	689b      	ldr	r3, [r3, #8]
 80028b0:	697a      	ldr	r2, [r7, #20]
 80028b2:	4413      	add	r3, r2
 80028b4:	617b      	str	r3, [r7, #20]
 80028b6:	e002      	b.n	80028be <aialgo_sizeof_inference_memory+0x48>
 80028b8:	697b      	ldr	r3, [r7, #20]
 80028ba:	3301      	adds	r3, #1
 80028bc:	617b      	str	r3, [r7, #20]
 80028be:	697b      	ldr	r3, [r7, #20]
 80028c0:	f003 0303 	and.w	r3, r3, #3
 80028c4:	2b00      	cmp	r3, #0
 80028c6:	d1f7      	bne.n	80028b8 <aialgo_sizeof_inference_memory+0x42>
 80028c8:	68bb      	ldr	r3, [r7, #8]
 80028ca:	689b      	ldr	r3, [r3, #8]
 80028cc:	f003 0310 	and.w	r3, r3, #16
 80028d0:	2b00      	cmp	r3, #0
 80028d2:	d114      	bne.n	80028fe <aialgo_sizeof_inference_memory+0x88>
 80028d4:	68bb      	ldr	r3, [r7, #8]
 80028d6:	331c      	adds	r3, #28
 80028d8:	4618      	mov	r0, r3
 80028da:	f000 ffca 	bl	8003872 <aimath_sizeof_tensor_data>
 80028de:	61b8      	str	r0, [r7, #24]
 80028e0:	e002      	b.n	80028e8 <aialgo_sizeof_inference_memory+0x72>
 80028e2:	69bb      	ldr	r3, [r7, #24]
 80028e4:	3301      	adds	r3, #1
 80028e6:	61bb      	str	r3, [r7, #24]
 80028e8:	69bb      	ldr	r3, [r7, #24]
 80028ea:	f003 0303 	and.w	r3, r3, #3
 80028ee:	2b00      	cmp	r3, #0
 80028f0:	d1f7      	bne.n	80028e2 <aialgo_sizeof_inference_memory+0x6c>
 80028f2:	69ba      	ldr	r2, [r7, #24]
 80028f4:	693b      	ldr	r3, [r7, #16]
 80028f6:	429a      	cmp	r2, r3
 80028f8:	d901      	bls.n	80028fe <aialgo_sizeof_inference_memory+0x88>
 80028fa:	69bb      	ldr	r3, [r7, #24]
 80028fc:	613b      	str	r3, [r7, #16]
 80028fe:	68bb      	ldr	r3, [r7, #8]
 8002900:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002902:	2b00      	cmp	r3, #0
 8002904:	d00a      	beq.n	800291c <aialgo_sizeof_inference_memory+0xa6>
 8002906:	68bb      	ldr	r3, [r7, #8]
 8002908:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800290a:	68b8      	ldr	r0, [r7, #8]
 800290c:	4798      	blx	r3
 800290e:	61b8      	str	r0, [r7, #24]
 8002910:	69ba      	ldr	r2, [r7, #24]
 8002912:	68fb      	ldr	r3, [r7, #12]
 8002914:	429a      	cmp	r2, r3
 8002916:	d901      	bls.n	800291c <aialgo_sizeof_inference_memory+0xa6>
 8002918:	69bb      	ldr	r3, [r7, #24]
 800291a:	60fb      	str	r3, [r7, #12]
 800291c:	68bb      	ldr	r3, [r7, #8]
 800291e:	691b      	ldr	r3, [r3, #16]
 8002920:	60bb      	str	r3, [r7, #8]
 8002922:	8bfb      	ldrh	r3, [r7, #30]
 8002924:	3301      	adds	r3, #1
 8002926:	83fb      	strh	r3, [r7, #30]
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	891b      	ldrh	r3, [r3, #8]
 800292c:	8bfa      	ldrh	r2, [r7, #30]
 800292e:	429a      	cmp	r2, r3
 8002930:	d3b3      	bcc.n	800289a <aialgo_sizeof_inference_memory+0x24>
 8002932:	e002      	b.n	800293a <aialgo_sizeof_inference_memory+0xc4>
 8002934:	693b      	ldr	r3, [r7, #16]
 8002936:	3301      	adds	r3, #1
 8002938:	613b      	str	r3, [r7, #16]
 800293a:	693b      	ldr	r3, [r7, #16]
 800293c:	f003 0303 	and.w	r3, r3, #3
 8002940:	2b00      	cmp	r3, #0
 8002942:	d1f7      	bne.n	8002934 <aialgo_sizeof_inference_memory+0xbe>
 8002944:	e002      	b.n	800294c <aialgo_sizeof_inference_memory+0xd6>
 8002946:	68fb      	ldr	r3, [r7, #12]
 8002948:	3301      	adds	r3, #1
 800294a:	60fb      	str	r3, [r7, #12]
 800294c:	68fb      	ldr	r3, [r7, #12]
 800294e:	f003 0303 	and.w	r3, r3, #3
 8002952:	2b00      	cmp	r3, #0
 8002954:	d1f7      	bne.n	8002946 <aialgo_sizeof_inference_memory+0xd0>
 8002956:	693b      	ldr	r3, [r7, #16]
 8002958:	005a      	lsls	r2, r3, #1
 800295a:	68fb      	ldr	r3, [r7, #12]
 800295c:	4413      	add	r3, r2
 800295e:	697a      	ldr	r2, [r7, #20]
 8002960:	4413      	add	r3, r2
 8002962:	617b      	str	r3, [r7, #20]
 8002964:	697b      	ldr	r3, [r7, #20]
 8002966:	4618      	mov	r0, r3
 8002968:	3720      	adds	r7, #32
 800296a:	46bd      	mov	sp, r7
 800296c:	bd80      	pop	{r7, pc}

0800296e <aialgo_distribute_parameter_memory>:
 800296e:	b580      	push	{r7, lr}
 8002970:	b088      	sub	sp, #32
 8002972:	af00      	add	r7, sp, #0
 8002974:	60f8      	str	r0, [r7, #12]
 8002976:	60b9      	str	r1, [r7, #8]
 8002978:	607a      	str	r2, [r7, #4]
 800297a:	2300      	movs	r3, #0
 800297c:	617b      	str	r3, [r7, #20]
 800297e:	68fb      	ldr	r3, [r7, #12]
 8002980:	681b      	ldr	r3, [r3, #0]
 8002982:	61bb      	str	r3, [r7, #24]
 8002984:	2300      	movs	r3, #0
 8002986:	61fb      	str	r3, [r7, #28]
 8002988:	e026      	b.n	80029d8 <aialgo_distribute_parameter_memory+0x6a>
 800298a:	69bb      	ldr	r3, [r7, #24]
 800298c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800298e:	69b8      	ldr	r0, [r7, #24]
 8002990:	4798      	blx	r3
 8002992:	69bb      	ldr	r3, [r7, #24]
 8002994:	69db      	ldr	r3, [r3, #28]
 8002996:	689b      	ldr	r3, [r3, #8]
 8002998:	2b00      	cmp	r3, #0
 800299a:	d017      	beq.n	80029cc <aialgo_distribute_parameter_memory+0x5e>
 800299c:	69bb      	ldr	r3, [r7, #24]
 800299e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d113      	bne.n	80029cc <aialgo_distribute_parameter_memory+0x5e>
 80029a4:	68ba      	ldr	r2, [r7, #8]
 80029a6:	697b      	ldr	r3, [r7, #20]
 80029a8:	441a      	add	r2, r3
 80029aa:	69bb      	ldr	r3, [r7, #24]
 80029ac:	629a      	str	r2, [r3, #40]	@ 0x28
 80029ae:	69bb      	ldr	r3, [r7, #24]
 80029b0:	69db      	ldr	r3, [r3, #28]
 80029b2:	689b      	ldr	r3, [r3, #8]
 80029b4:	697a      	ldr	r2, [r7, #20]
 80029b6:	4413      	add	r3, r2
 80029b8:	617b      	str	r3, [r7, #20]
 80029ba:	e002      	b.n	80029c2 <aialgo_distribute_parameter_memory+0x54>
 80029bc:	697b      	ldr	r3, [r7, #20]
 80029be:	3301      	adds	r3, #1
 80029c0:	617b      	str	r3, [r7, #20]
 80029c2:	697b      	ldr	r3, [r7, #20]
 80029c4:	f003 0303 	and.w	r3, r3, #3
 80029c8:	2b00      	cmp	r3, #0
 80029ca:	d1f7      	bne.n	80029bc <aialgo_distribute_parameter_memory+0x4e>
 80029cc:	69bb      	ldr	r3, [r7, #24]
 80029ce:	691b      	ldr	r3, [r3, #16]
 80029d0:	61bb      	str	r3, [r7, #24]
 80029d2:	69fb      	ldr	r3, [r7, #28]
 80029d4:	3301      	adds	r3, #1
 80029d6:	61fb      	str	r3, [r7, #28]
 80029d8:	68fb      	ldr	r3, [r7, #12]
 80029da:	891b      	ldrh	r3, [r3, #8]
 80029dc:	461a      	mov	r2, r3
 80029de:	69fb      	ldr	r3, [r7, #28]
 80029e0:	4293      	cmp	r3, r2
 80029e2:	dbd2      	blt.n	800298a <aialgo_distribute_parameter_memory+0x1c>
 80029e4:	68fb      	ldr	r3, [r7, #12]
 80029e6:	681b      	ldr	r3, [r3, #0]
 80029e8:	61bb      	str	r3, [r7, #24]
 80029ea:	2300      	movs	r3, #0
 80029ec:	61fb      	str	r3, [r7, #28]
 80029ee:	e022      	b.n	8002a36 <aialgo_distribute_parameter_memory+0xc8>
 80029f0:	69bb      	ldr	r3, [r7, #24]
 80029f2:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80029f4:	2b00      	cmp	r3, #0
 80029f6:	d018      	beq.n	8002a2a <aialgo_distribute_parameter_memory+0xbc>
 80029f8:	69bb      	ldr	r3, [r7, #24]
 80029fa:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80029fc:	68b9      	ldr	r1, [r7, #8]
 80029fe:	697a      	ldr	r2, [r7, #20]
 8002a00:	440a      	add	r2, r1
 8002a02:	4611      	mov	r1, r2
 8002a04:	69b8      	ldr	r0, [r7, #24]
 8002a06:	4798      	blx	r3
 8002a08:	69bb      	ldr	r3, [r7, #24]
 8002a0a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8002a0c:	69b8      	ldr	r0, [r7, #24]
 8002a0e:	4798      	blx	r3
 8002a10:	4602      	mov	r2, r0
 8002a12:	697b      	ldr	r3, [r7, #20]
 8002a14:	4413      	add	r3, r2
 8002a16:	617b      	str	r3, [r7, #20]
 8002a18:	e002      	b.n	8002a20 <aialgo_distribute_parameter_memory+0xb2>
 8002a1a:	697b      	ldr	r3, [r7, #20]
 8002a1c:	3301      	adds	r3, #1
 8002a1e:	617b      	str	r3, [r7, #20]
 8002a20:	697b      	ldr	r3, [r7, #20]
 8002a22:	f003 0303 	and.w	r3, r3, #3
 8002a26:	2b00      	cmp	r3, #0
 8002a28:	d1f7      	bne.n	8002a1a <aialgo_distribute_parameter_memory+0xac>
 8002a2a:	69bb      	ldr	r3, [r7, #24]
 8002a2c:	691b      	ldr	r3, [r3, #16]
 8002a2e:	61bb      	str	r3, [r7, #24]
 8002a30:	69fb      	ldr	r3, [r7, #28]
 8002a32:	3301      	adds	r3, #1
 8002a34:	61fb      	str	r3, [r7, #28]
 8002a36:	68fb      	ldr	r3, [r7, #12]
 8002a38:	891b      	ldrh	r3, [r3, #8]
 8002a3a:	461a      	mov	r2, r3
 8002a3c:	69fb      	ldr	r3, [r7, #28]
 8002a3e:	4293      	cmp	r3, r2
 8002a40:	dbd6      	blt.n	80029f0 <aialgo_distribute_parameter_memory+0x82>
 8002a42:	bf00      	nop
 8002a44:	3720      	adds	r7, #32
 8002a46:	46bd      	mov	sp, r7
 8002a48:	bd80      	pop	{r7, pc}

08002a4a <aialgo_schedule_inference_memory>:
 8002a4a:	b580      	push	{r7, lr}
 8002a4c:	b08a      	sub	sp, #40	@ 0x28
 8002a4e:	af00      	add	r7, sp, #0
 8002a50:	60f8      	str	r0, [r7, #12]
 8002a52:	60b9      	str	r1, [r7, #8]
 8002a54:	607a      	str	r2, [r7, #4]
 8002a56:	68fb      	ldr	r3, [r7, #12]
 8002a58:	681b      	ldr	r3, [r3, #0]
 8002a5a:	623b      	str	r3, [r7, #32]
 8002a5c:	2300      	movs	r3, #0
 8002a5e:	61fb      	str	r3, [r7, #28]
 8002a60:	2300      	movs	r3, #0
 8002a62:	61bb      	str	r3, [r7, #24]
 8002a64:	2300      	movs	r3, #0
 8002a66:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8002a68:	e01f      	b.n	8002aaa <aialgo_schedule_inference_memory+0x60>
 8002a6a:	6a3b      	ldr	r3, [r7, #32]
 8002a6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a6e:	6a38      	ldr	r0, [r7, #32]
 8002a70:	4798      	blx	r3
 8002a72:	6a3b      	ldr	r3, [r7, #32]
 8002a74:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d00c      	beq.n	8002a94 <aialgo_schedule_inference_memory+0x4a>
 8002a7a:	6a3b      	ldr	r3, [r7, #32]
 8002a7c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002a7e:	6a38      	ldr	r0, [r7, #32]
 8002a80:	4798      	blx	r3
 8002a82:	4602      	mov	r2, r0
 8002a84:	69fb      	ldr	r3, [r7, #28]
 8002a86:	4293      	cmp	r3, r2
 8002a88:	d204      	bcs.n	8002a94 <aialgo_schedule_inference_memory+0x4a>
 8002a8a:	6a3b      	ldr	r3, [r7, #32]
 8002a8c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002a8e:	6a38      	ldr	r0, [r7, #32]
 8002a90:	4798      	blx	r3
 8002a92:	61f8      	str	r0, [r7, #28]
 8002a94:	68ba      	ldr	r2, [r7, #8]
 8002a96:	69bb      	ldr	r3, [r7, #24]
 8002a98:	441a      	add	r2, r3
 8002a9a:	6a3b      	ldr	r3, [r7, #32]
 8002a9c:	679a      	str	r2, [r3, #120]	@ 0x78
 8002a9e:	6a3b      	ldr	r3, [r7, #32]
 8002aa0:	691b      	ldr	r3, [r3, #16]
 8002aa2:	623b      	str	r3, [r7, #32]
 8002aa4:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8002aa6:	3301      	adds	r3, #1
 8002aa8:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8002aaa:	68fb      	ldr	r3, [r7, #12]
 8002aac:	891b      	ldrh	r3, [r3, #8]
 8002aae:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8002ab0:	429a      	cmp	r2, r3
 8002ab2:	d3da      	bcc.n	8002a6a <aialgo_schedule_inference_memory+0x20>
 8002ab4:	69ba      	ldr	r2, [r7, #24]
 8002ab6:	69fb      	ldr	r3, [r7, #28]
 8002ab8:	4413      	add	r3, r2
 8002aba:	61bb      	str	r3, [r7, #24]
 8002abc:	e002      	b.n	8002ac4 <aialgo_schedule_inference_memory+0x7a>
 8002abe:	69bb      	ldr	r3, [r7, #24]
 8002ac0:	3301      	adds	r3, #1
 8002ac2:	61bb      	str	r3, [r7, #24]
 8002ac4:	69bb      	ldr	r3, [r7, #24]
 8002ac6:	f003 0303 	and.w	r3, r3, #3
 8002aca:	2b00      	cmp	r3, #0
 8002acc:	d1f7      	bne.n	8002abe <aialgo_schedule_inference_memory+0x74>
 8002ace:	68fb      	ldr	r3, [r7, #12]
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	623b      	str	r3, [r7, #32]
 8002ad4:	2300      	movs	r3, #0
 8002ad6:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8002ad8:	e022      	b.n	8002b20 <aialgo_schedule_inference_memory+0xd6>
 8002ada:	6a3b      	ldr	r3, [r7, #32]
 8002adc:	69db      	ldr	r3, [r3, #28]
 8002ade:	689b      	ldr	r3, [r3, #8]
 8002ae0:	2b00      	cmp	r3, #0
 8002ae2:	d017      	beq.n	8002b14 <aialgo_schedule_inference_memory+0xca>
 8002ae4:	6a3b      	ldr	r3, [r7, #32]
 8002ae6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002ae8:	2b00      	cmp	r3, #0
 8002aea:	d013      	beq.n	8002b14 <aialgo_schedule_inference_memory+0xca>
 8002aec:	68ba      	ldr	r2, [r7, #8]
 8002aee:	69bb      	ldr	r3, [r7, #24]
 8002af0:	441a      	add	r2, r3
 8002af2:	6a3b      	ldr	r3, [r7, #32]
 8002af4:	629a      	str	r2, [r3, #40]	@ 0x28
 8002af6:	6a3b      	ldr	r3, [r7, #32]
 8002af8:	69db      	ldr	r3, [r3, #28]
 8002afa:	689b      	ldr	r3, [r3, #8]
 8002afc:	69ba      	ldr	r2, [r7, #24]
 8002afe:	4413      	add	r3, r2
 8002b00:	61bb      	str	r3, [r7, #24]
 8002b02:	e002      	b.n	8002b0a <aialgo_schedule_inference_memory+0xc0>
 8002b04:	69bb      	ldr	r3, [r7, #24]
 8002b06:	3301      	adds	r3, #1
 8002b08:	61bb      	str	r3, [r7, #24]
 8002b0a:	69bb      	ldr	r3, [r7, #24]
 8002b0c:	f003 0303 	and.w	r3, r3, #3
 8002b10:	2b00      	cmp	r3, #0
 8002b12:	d1f7      	bne.n	8002b04 <aialgo_schedule_inference_memory+0xba>
 8002b14:	6a3b      	ldr	r3, [r7, #32]
 8002b16:	691b      	ldr	r3, [r3, #16]
 8002b18:	623b      	str	r3, [r7, #32]
 8002b1a:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8002b1c:	3301      	adds	r3, #1
 8002b1e:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8002b20:	68fb      	ldr	r3, [r7, #12]
 8002b22:	891b      	ldrh	r3, [r3, #8]
 8002b24:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8002b26:	429a      	cmp	r2, r3
 8002b28:	d3d7      	bcc.n	8002ada <aialgo_schedule_inference_memory+0x90>
 8002b2a:	68fb      	ldr	r3, [r7, #12]
 8002b2c:	681b      	ldr	r3, [r3, #0]
 8002b2e:	623b      	str	r3, [r7, #32]
 8002b30:	2300      	movs	r3, #0
 8002b32:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8002b34:	2300      	movs	r3, #0
 8002b36:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8002b38:	e024      	b.n	8002b84 <aialgo_schedule_inference_memory+0x13a>
 8002b3a:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8002b3c:	f003 0301 	and.w	r3, r3, #1
 8002b40:	6879      	ldr	r1, [r7, #4]
 8002b42:	69ba      	ldr	r2, [r7, #24]
 8002b44:	1a8a      	subs	r2, r1, r2
 8002b46:	fb02 f303 	mul.w	r3, r2, r3
 8002b4a:	085a      	lsrs	r2, r3, #1
 8002b4c:	69bb      	ldr	r3, [r7, #24]
 8002b4e:	4413      	add	r3, r2
 8002b50:	68ba      	ldr	r2, [r7, #8]
 8002b52:	4413      	add	r3, r2
 8002b54:	617b      	str	r3, [r7, #20]
 8002b56:	6a3b      	ldr	r3, [r7, #32]
 8002b58:	697a      	ldr	r2, [r7, #20]
 8002b5a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002b5c:	6a3b      	ldr	r3, [r7, #32]
 8002b5e:	691b      	ldr	r3, [r3, #16]
 8002b60:	2b00      	cmp	r3, #0
 8002b62:	d006      	beq.n	8002b72 <aialgo_schedule_inference_memory+0x128>
 8002b64:	6a3b      	ldr	r3, [r7, #32]
 8002b66:	691b      	ldr	r3, [r3, #16]
 8002b68:	689b      	ldr	r3, [r3, #8]
 8002b6a:	f003 0310 	and.w	r3, r3, #16
 8002b6e:	2b00      	cmp	r3, #0
 8002b70:	d102      	bne.n	8002b78 <aialgo_schedule_inference_memory+0x12e>
 8002b72:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8002b74:	3301      	adds	r3, #1
 8002b76:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8002b78:	6a3b      	ldr	r3, [r7, #32]
 8002b7a:	691b      	ldr	r3, [r3, #16]
 8002b7c:	623b      	str	r3, [r7, #32]
 8002b7e:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8002b80:	3301      	adds	r3, #1
 8002b82:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8002b84:	68fb      	ldr	r3, [r7, #12]
 8002b86:	891b      	ldrh	r3, [r3, #8]
 8002b88:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8002b8a:	429a      	cmp	r2, r3
 8002b8c:	d3d5      	bcc.n	8002b3a <aialgo_schedule_inference_memory+0xf0>
 8002b8e:	2300      	movs	r3, #0
 8002b90:	4618      	mov	r0, r3
 8002b92:	3728      	adds	r7, #40	@ 0x28
 8002b94:	46bd      	mov	sp, r7
 8002b96:	bd80      	pop	{r7, pc}

08002b98 <aialgo_forward_model>:
 8002b98:	b580      	push	{r7, lr}
 8002b9a:	b084      	sub	sp, #16
 8002b9c:	af00      	add	r7, sp, #0
 8002b9e:	6078      	str	r0, [r7, #4]
 8002ba0:	6039      	str	r1, [r7, #0]
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	681b      	ldr	r3, [r3, #0]
 8002ba6:	60bb      	str	r3, [r7, #8]
 8002ba8:	687b      	ldr	r3, [r7, #4]
 8002baa:	681b      	ldr	r3, [r3, #0]
 8002bac:	683a      	ldr	r2, [r7, #0]
 8002bae:	6912      	ldr	r2, [r2, #16]
 8002bb0:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002bb2:	2300      	movs	r3, #0
 8002bb4:	81fb      	strh	r3, [r7, #14]
 8002bb6:	e009      	b.n	8002bcc <aialgo_forward_model+0x34>
 8002bb8:	68bb      	ldr	r3, [r7, #8]
 8002bba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002bbc:	68b8      	ldr	r0, [r7, #8]
 8002bbe:	4798      	blx	r3
 8002bc0:	68bb      	ldr	r3, [r7, #8]
 8002bc2:	691b      	ldr	r3, [r3, #16]
 8002bc4:	60bb      	str	r3, [r7, #8]
 8002bc6:	89fb      	ldrh	r3, [r7, #14]
 8002bc8:	3301      	adds	r3, #1
 8002bca:	81fb      	strh	r3, [r7, #14]
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	891b      	ldrh	r3, [r3, #8]
 8002bd0:	89fa      	ldrh	r2, [r7, #14]
 8002bd2:	429a      	cmp	r2, r3
 8002bd4:	d3f0      	bcc.n	8002bb8 <aialgo_forward_model+0x20>
 8002bd6:	687b      	ldr	r3, [r7, #4]
 8002bd8:	685b      	ldr	r3, [r3, #4]
 8002bda:	331c      	adds	r3, #28
 8002bdc:	4618      	mov	r0, r3
 8002bde:	3710      	adds	r7, #16
 8002be0:	46bd      	mov	sp, r7
 8002be2:	bd80      	pop	{r7, pc}

08002be4 <aialgo_compile_model>:
 8002be4:	b480      	push	{r7}
 8002be6:	b085      	sub	sp, #20
 8002be8:	af00      	add	r7, sp, #0
 8002bea:	6078      	str	r0, [r7, #4]
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	60fb      	str	r3, [r7, #12]
 8002bf2:	2301      	movs	r3, #1
 8002bf4:	817b      	strh	r3, [r7, #10]
 8002bf6:	2380      	movs	r3, #128	@ 0x80
 8002bf8:	813b      	strh	r3, [r7, #8]
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	2200      	movs	r2, #0
 8002bfe:	815a      	strh	r2, [r3, #10]
 8002c00:	e00e      	b.n	8002c20 <aialgo_compile_model+0x3c>
 8002c02:	897b      	ldrh	r3, [r7, #10]
 8002c04:	3301      	adds	r3, #1
 8002c06:	817b      	strh	r3, [r7, #10]
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	895b      	ldrh	r3, [r3, #10]
 8002c0c:	68fa      	ldr	r2, [r7, #12]
 8002c0e:	f892 2050 	ldrb.w	r2, [r2, #80]	@ 0x50
 8002c12:	4413      	add	r3, r2
 8002c14:	b29a      	uxth	r2, r3
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	815a      	strh	r2, [r3, #10]
 8002c1a:	68fb      	ldr	r3, [r7, #12]
 8002c1c:	691b      	ldr	r3, [r3, #16]
 8002c1e:	60fb      	str	r3, [r7, #12]
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	685b      	ldr	r3, [r3, #4]
 8002c24:	68fa      	ldr	r2, [r7, #12]
 8002c26:	429a      	cmp	r2, r3
 8002c28:	d003      	beq.n	8002c32 <aialgo_compile_model+0x4e>
 8002c2a:	897a      	ldrh	r2, [r7, #10]
 8002c2c:	893b      	ldrh	r3, [r7, #8]
 8002c2e:	429a      	cmp	r2, r3
 8002c30:	d3e7      	bcc.n	8002c02 <aialgo_compile_model+0x1e>
 8002c32:	687b      	ldr	r3, [r7, #4]
 8002c34:	897a      	ldrh	r2, [r7, #10]
 8002c36:	811a      	strh	r2, [r3, #8]
 8002c38:	2300      	movs	r3, #0
 8002c3a:	4618      	mov	r0, r3
 8002c3c:	3714      	adds	r7, #20
 8002c3e:	46bd      	mov	sp, r7
 8002c40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c44:	4770      	bx	lr
	...

08002c48 <aialgo_print_model_structure>:
 8002c48:	b580      	push	{r7, lr}
 8002c4a:	b084      	sub	sp, #16
 8002c4c:	af00      	add	r7, sp, #0
 8002c4e:	6078      	str	r0, [r7, #4]
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	681b      	ldr	r3, [r3, #0]
 8002c54:	60bb      	str	r3, [r7, #8]
 8002c56:	2300      	movs	r3, #0
 8002c58:	60fb      	str	r3, [r7, #12]
 8002c5a:	e040      	b.n	8002cde <aialgo_print_model_structure+0x96>
 8002c5c:	68bb      	ldr	r3, [r7, #8]
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	685b      	ldr	r3, [r3, #4]
 8002c62:	2b00      	cmp	r3, #0
 8002c64:	d02a      	beq.n	8002cbc <aialgo_print_model_structure+0x74>
 8002c66:	4b23      	ldr	r3, [pc, #140]	@ (8002cf4 <aialgo_print_model_structure+0xac>)
 8002c68:	681b      	ldr	r3, [r3, #0]
 8002c6a:	68fa      	ldr	r2, [r7, #12]
 8002c6c:	3201      	adds	r2, #1
 8002c6e:	4611      	mov	r1, r2
 8002c70:	4821      	ldr	r0, [pc, #132]	@ (8002cf8 <aialgo_print_model_structure+0xb0>)
 8002c72:	4798      	blx	r3
 8002c74:	4b21      	ldr	r3, [pc, #132]	@ (8002cfc <aialgo_print_model_structure+0xb4>)
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	4821      	ldr	r0, [pc, #132]	@ (8002d00 <aialgo_print_model_structure+0xb8>)
 8002c7a:	4798      	blx	r3
 8002c7c:	4b1f      	ldr	r3, [pc, #124]	@ (8002cfc <aialgo_print_model_structure+0xb4>)
 8002c7e:	681b      	ldr	r3, [r3, #0]
 8002c80:	68ba      	ldr	r2, [r7, #8]
 8002c82:	6812      	ldr	r2, [r2, #0]
 8002c84:	6812      	ldr	r2, [r2, #0]
 8002c86:	4610      	mov	r0, r2
 8002c88:	4798      	blx	r3
 8002c8a:	4b1c      	ldr	r3, [pc, #112]	@ (8002cfc <aialgo_print_model_structure+0xb4>)
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	481d      	ldr	r0, [pc, #116]	@ (8002d04 <aialgo_print_model_structure+0xbc>)
 8002c90:	4798      	blx	r3
 8002c92:	4b1a      	ldr	r3, [pc, #104]	@ (8002cfc <aialgo_print_model_structure+0xb4>)
 8002c94:	681b      	ldr	r3, [r3, #0]
 8002c96:	68ba      	ldr	r2, [r7, #8]
 8002c98:	69d2      	ldr	r2, [r2, #28]
 8002c9a:	6812      	ldr	r2, [r2, #0]
 8002c9c:	4610      	mov	r0, r2
 8002c9e:	4798      	blx	r3
 8002ca0:	4b16      	ldr	r3, [pc, #88]	@ (8002cfc <aialgo_print_model_structure+0xb4>)
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	4818      	ldr	r0, [pc, #96]	@ (8002d08 <aialgo_print_model_structure+0xc0>)
 8002ca6:	4798      	blx	r3
 8002ca8:	68bb      	ldr	r3, [r7, #8]
 8002caa:	681b      	ldr	r3, [r3, #0]
 8002cac:	685b      	ldr	r3, [r3, #4]
 8002cae:	68b8      	ldr	r0, [r7, #8]
 8002cb0:	4798      	blx	r3
 8002cb2:	4b12      	ldr	r3, [pc, #72]	@ (8002cfc <aialgo_print_model_structure+0xb4>)
 8002cb4:	681b      	ldr	r3, [r3, #0]
 8002cb6:	4815      	ldr	r0, [pc, #84]	@ (8002d0c <aialgo_print_model_structure+0xc4>)
 8002cb8:	4798      	blx	r3
 8002cba:	e00a      	b.n	8002cd2 <aialgo_print_model_structure+0x8a>
 8002cbc:	4b0d      	ldr	r3, [pc, #52]	@ (8002cf4 <aialgo_print_model_structure+0xac>)
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	68fa      	ldr	r2, [r7, #12]
 8002cc2:	3201      	adds	r2, #1
 8002cc4:	4611      	mov	r1, r2
 8002cc6:	480c      	ldr	r0, [pc, #48]	@ (8002cf8 <aialgo_print_model_structure+0xb0>)
 8002cc8:	4798      	blx	r3
 8002cca:	4b0c      	ldr	r3, [pc, #48]	@ (8002cfc <aialgo_print_model_structure+0xb4>)
 8002ccc:	681b      	ldr	r3, [r3, #0]
 8002cce:	4810      	ldr	r0, [pc, #64]	@ (8002d10 <aialgo_print_model_structure+0xc8>)
 8002cd0:	4798      	blx	r3
 8002cd2:	68bb      	ldr	r3, [r7, #8]
 8002cd4:	691b      	ldr	r3, [r3, #16]
 8002cd6:	60bb      	str	r3, [r7, #8]
 8002cd8:	68fb      	ldr	r3, [r7, #12]
 8002cda:	3301      	adds	r3, #1
 8002cdc:	60fb      	str	r3, [r7, #12]
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	891b      	ldrh	r3, [r3, #8]
 8002ce2:	461a      	mov	r2, r3
 8002ce4:	68fb      	ldr	r3, [r7, #12]
 8002ce6:	4293      	cmp	r3, r2
 8002ce8:	dbb8      	blt.n	8002c5c <aialgo_print_model_structure+0x14>
 8002cea:	bf00      	nop
 8002cec:	3710      	adds	r7, #16
 8002cee:	46bd      	mov	sp, r7
 8002cf0:	bd80      	pop	{r7, pc}
 8002cf2:	bf00      	nop
 8002cf4:	2000054c 	.word	0x2000054c
 8002cf8:	0800bf20 	.word	0x0800bf20
 8002cfc:	20000548 	.word	0x20000548
 8002d00:	0800c6c8 	.word	0x0800c6c8
 8002d04:	0800c6cc 	.word	0x0800c6cc
 8002d08:	0800c6d0 	.word	0x0800c6d0
 8002d0c:	0800c6d8 	.word	0x0800c6d8
 8002d10:	0800c6dc 	.word	0x0800c6dc

08002d14 <ailayer_dense>:
 8002d14:	b580      	push	{r7, lr}
 8002d16:	b082      	sub	sp, #8
 8002d18:	af00      	add	r7, sp, #0
 8002d1a:	6078      	str	r0, [r7, #4]
 8002d1c:	6039      	str	r1, [r7, #0]
 8002d1e:	4b54      	ldr	r3, [pc, #336]	@ (8002e70 <ailayer_dense+0x15c>)
 8002d20:	681a      	ldr	r2, [r3, #0]
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	601a      	str	r2, [r3, #0]
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	2200      	movs	r2, #0
 8002d2a:	609a      	str	r2, [r3, #8]
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	689b      	ldr	r3, [r3, #8]
 8002d30:	f043 0202 	orr.w	r2, r3, #2
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	609a      	str	r2, [r3, #8]
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	689b      	ldr	r3, [r3, #8]
 8002d3c:	f023 0208 	bic.w	r2, r3, #8
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	609a      	str	r2, [r3, #8]
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	683a      	ldr	r2, [r7, #0]
 8002d48:	60da      	str	r2, [r3, #12]
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	2200      	movs	r2, #0
 8002d4e:	611a      	str	r2, [r3, #16]
 8002d50:	687a      	ldr	r2, [r7, #4]
 8002d52:	683b      	ldr	r3, [r7, #0]
 8002d54:	611a      	str	r2, [r3, #16]
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	687a      	ldr	r2, [r7, #4]
 8002d5a:	605a      	str	r2, [r3, #4]
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	2202      	movs	r2, #2
 8002d60:	f883 2020 	strb.w	r2, [r3, #32]
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	f103 02e4 	add.w	r2, r3, #228	@ 0xe4
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	625a      	str	r2, [r3, #36]	@ 0x24
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 8002d74:	687b      	ldr	r3, [r7, #4]
 8002d76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d78:	3302      	adds	r3, #2
 8002d7a:	b292      	uxth	r2, r2
 8002d7c:	801a      	strh	r2, [r3, #0]
 8002d7e:	687b      	ldr	r3, [r7, #4]
 8002d80:	2202      	movs	r2, #2
 8002d82:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002d86:	683b      	ldr	r3, [r7, #0]
 8002d88:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002d8a:	687b      	ldr	r3, [r7, #4]
 8002d8c:	645a      	str	r2, [r3, #68]	@ 0x44
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	2202      	movs	r2, #2
 8002d92:	f883 208c 	strb.w	r2, [r3, #140]	@ 0x8c
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	f103 02b0 	add.w	r2, r3, #176	@ 0xb0
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8002da2:	683b      	ldr	r3, [r7, #0]
 8002da4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002dac:	8852      	ldrh	r2, [r2, #2]
 8002dae:	801a      	strh	r2, [r3, #0]
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002dbc:	3302      	adds	r3, #2
 8002dbe:	b292      	uxth	r2, r2
 8002dc0:	801a      	strh	r2, [r3, #0]
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	2201      	movs	r2, #1
 8002dc6:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	f103 02b4 	add.w	r2, r3, #180	@ 0xb4
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8002de2:	b292      	uxth	r2, r2
 8002de4:	801a      	strh	r2, [r3, #0]
 8002de6:	687b      	ldr	r3, [r7, #4]
 8002de8:	4a22      	ldr	r2, [pc, #136]	@ (8002e74 <ailayer_dense+0x160>)
 8002dea:	639a      	str	r2, [r3, #56]	@ 0x38
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	4a22      	ldr	r2, [pc, #136]	@ (8002e78 <ailayer_dense+0x164>)
 8002df0:	661a      	str	r2, [r3, #96]	@ 0x60
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	4a21      	ldr	r2, [pc, #132]	@ (8002e7c <ailayer_dense+0x168>)
 8002df6:	631a      	str	r2, [r3, #48]	@ 0x30
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	4a21      	ldr	r2, [pc, #132]	@ (8002e80 <ailayer_dense+0x16c>)
 8002dfc:	665a      	str	r2, [r3, #100]	@ 0x64
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	4a20      	ldr	r2, [pc, #128]	@ (8002e84 <ailayer_dense+0x170>)
 8002e02:	669a      	str	r2, [r3, #104]	@ 0x68
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	4a20      	ldr	r2, [pc, #128]	@ (8002e88 <ailayer_dense+0x174>)
 8002e08:	67da      	str	r2, [r3, #124]	@ 0x7c
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	4a1f      	ldr	r2, [pc, #124]	@ (8002e8c <ailayer_dense+0x178>)
 8002e0e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	2200      	movs	r2, #0
 8002e16:	671a      	str	r2, [r3, #112]	@ 0x70
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	4a1d      	ldr	r2, [pc, #116]	@ (8002e90 <ailayer_dense+0x17c>)
 8002e1c:	675a      	str	r2, [r3, #116]	@ 0x74
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	2202      	movs	r2, #2
 8002e22:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	f103 02b8 	add.w	r2, r3, #184	@ 0xb8
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	655a      	str	r2, [r3, #84]	@ 0x54
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	f103 02c0 	add.w	r2, r3, #192	@ 0xc0
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	659a      	str	r2, [r3, #88]	@ 0x58
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	f103 02c8 	add.w	r2, r3, #200	@ 0xc8
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	f103 0288 	add.w	r2, r3, #136	@ 0x88
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	f103 029c 	add.w	r2, r3, #156	@ 0x9c
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	f8c3 20bc 	str.w	r2, [r3, #188]	@ 0xbc
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	4618      	mov	r0, r3
 8002e60:	f000 f8a6 	bl	8002fb0 <ailayer_dense_calc_result_shape>
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	4618      	mov	r0, r3
 8002e68:	3708      	adds	r7, #8
 8002e6a:	46bd      	mov	sp, r7
 8002e6c:	bd80      	pop	{r7, pc}
 8002e6e:	bf00      	nop
 8002e70:	2000055c 	.word	0x2000055c
 8002e74:	08002e95 	.word	0x08002e95
 8002e78:	08002ed5 	.word	0x08002ed5
 8002e7c:	08002fb1 	.word	0x08002fb1
 8002e80:	08003031 	.word	0x08003031
 8002e84:	080030eb 	.word	0x080030eb
 8002e88:	080031b3 	.word	0x080031b3
 8002e8c:	08003259 	.word	0x08003259
 8002e90:	08002fe9 	.word	0x08002fe9

08002e94 <ailayer_dense_forward>:
 8002e94:	b590      	push	{r4, r7, lr}
 8002e96:	b089      	sub	sp, #36	@ 0x24
 8002e98:	af00      	add	r7, sp, #0
 8002e9a:	6078      	str	r0, [r7, #4]
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	68db      	ldr	r3, [r3, #12]
 8002ea0:	331c      	adds	r3, #28
 8002ea2:	61fb      	str	r3, [r7, #28]
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	331c      	adds	r3, #28
 8002ea8:	61bb      	str	r3, [r7, #24]
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	685b      	ldr	r3, [r3, #4]
 8002eae:	617b      	str	r3, [r7, #20]
 8002eb0:	697b      	ldr	r3, [r7, #20]
 8002eb2:	3388      	adds	r3, #136	@ 0x88
 8002eb4:	613b      	str	r3, [r7, #16]
 8002eb6:	697b      	ldr	r3, [r7, #20]
 8002eb8:	339c      	adds	r3, #156	@ 0x9c
 8002eba:	60fb      	str	r3, [r7, #12]
 8002ebc:	697b      	ldr	r3, [r7, #20]
 8002ebe:	f8d3 40d0 	ldr.w	r4, [r3, #208]	@ 0xd0
 8002ec2:	69bb      	ldr	r3, [r7, #24]
 8002ec4:	68fa      	ldr	r2, [r7, #12]
 8002ec6:	6939      	ldr	r1, [r7, #16]
 8002ec8:	69f8      	ldr	r0, [r7, #28]
 8002eca:	47a0      	blx	r4
 8002ecc:	bf00      	nop
 8002ece:	3724      	adds	r7, #36	@ 0x24
 8002ed0:	46bd      	mov	sp, r7
 8002ed2:	bd90      	pop	{r4, r7, pc}

08002ed4 <ailayer_dense_backward>:
 8002ed4:	b580      	push	{r7, lr}
 8002ed6:	b08e      	sub	sp, #56	@ 0x38
 8002ed8:	af00      	add	r7, sp, #0
 8002eda:	6078      	str	r0, [r7, #4]
 8002edc:	687b      	ldr	r3, [r7, #4]
 8002ede:	333c      	adds	r3, #60	@ 0x3c
 8002ee0:	637b      	str	r3, [r7, #52]	@ 0x34
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	691b      	ldr	r3, [r3, #16]
 8002ee6:	333c      	adds	r3, #60	@ 0x3c
 8002ee8:	633b      	str	r3, [r7, #48]	@ 0x30
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	68db      	ldr	r3, [r3, #12]
 8002eee:	331c      	adds	r3, #28
 8002ef0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	685b      	ldr	r3, [r3, #4]
 8002ef6:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002ef8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002efa:	3388      	adds	r3, #136	@ 0x88
 8002efc:	627b      	str	r3, [r7, #36]	@ 0x24
 8002efe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002f00:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8002f04:	623b      	str	r3, [r7, #32]
 8002f06:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002f08:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8002f0c:	61fb      	str	r3, [r7, #28]
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8002f12:	61bb      	str	r3, [r7, #24]
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	689b      	ldr	r3, [r3, #8]
 8002f18:	f003 0302 	and.w	r3, r3, #2
 8002f1c:	2b00      	cmp	r3, #0
 8002f1e:	d035      	beq.n	8002f8c <ailayer_dense_backward+0xb8>
 8002f20:	2302      	movs	r3, #2
 8002f22:	733b      	strb	r3, [r7, #12]
 8002f24:	6a3b      	ldr	r3, [r7, #32]
 8002f26:	689b      	ldr	r3, [r3, #8]
 8002f28:	613b      	str	r3, [r7, #16]
 8002f2a:	6a3b      	ldr	r3, [r7, #32]
 8002f2c:	681b      	ldr	r3, [r3, #0]
 8002f2e:	60bb      	str	r3, [r7, #8]
 8002f30:	6a3b      	ldr	r3, [r7, #32]
 8002f32:	68db      	ldr	r3, [r3, #12]
 8002f34:	617b      	str	r3, [r7, #20]
 8002f36:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002f38:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8002f3c:	f107 0208 	add.w	r2, r7, #8
 8002f40:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8002f42:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 8002f44:	4798      	blx	r3
 8002f46:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002f48:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8002f4c:	f107 0108 	add.w	r1, r7, #8
 8002f50:	6a3a      	ldr	r2, [r7, #32]
 8002f52:	6a38      	ldr	r0, [r7, #32]
 8002f54:	4798      	blx	r3
 8002f56:	2301      	movs	r3, #1
 8002f58:	733b      	strb	r3, [r7, #12]
 8002f5a:	69fb      	ldr	r3, [r7, #28]
 8002f5c:	689b      	ldr	r3, [r3, #8]
 8002f5e:	613b      	str	r3, [r7, #16]
 8002f60:	69fb      	ldr	r3, [r7, #28]
 8002f62:	681b      	ldr	r3, [r3, #0]
 8002f64:	60bb      	str	r3, [r7, #8]
 8002f66:	69fb      	ldr	r3, [r7, #28]
 8002f68:	68db      	ldr	r3, [r3, #12]
 8002f6a:	617b      	str	r3, [r7, #20]
 8002f6c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002f6e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8002f72:	f107 0208 	add.w	r2, r7, #8
 8002f76:	2101      	movs	r1, #1
 8002f78:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8002f7a:	4798      	blx	r3
 8002f7c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002f7e:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8002f82:	f107 0108 	add.w	r1, r7, #8
 8002f86:	69fa      	ldr	r2, [r7, #28]
 8002f88:	69f8      	ldr	r0, [r7, #28]
 8002f8a:	4798      	blx	r3
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	689b      	ldr	r3, [r3, #8]
 8002f90:	f003 0308 	and.w	r3, r3, #8
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	d107      	bne.n	8002fa8 <ailayer_dense_backward+0xd4>
 8002f98:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002f9a:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8002f9e:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8002fa0:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8002fa2:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8002fa4:	4798      	blx	r3
 8002fa6:	bf00      	nop
 8002fa8:	bf00      	nop
 8002faa:	3738      	adds	r7, #56	@ 0x38
 8002fac:	46bd      	mov	sp, r7
 8002fae:	bd80      	pop	{r7, pc}

08002fb0 <ailayer_dense_calc_result_shape>:
 8002fb0:	b480      	push	{r7}
 8002fb2:	b085      	sub	sp, #20
 8002fb4:	af00      	add	r7, sp, #0
 8002fb6:	6078      	str	r0, [r7, #4]
 8002fb8:	687b      	ldr	r3, [r7, #4]
 8002fba:	685b      	ldr	r3, [r3, #4]
 8002fbc:	60fb      	str	r3, [r7, #12]
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	68db      	ldr	r3, [r3, #12]
 8002fc2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002fc8:	8812      	ldrh	r2, [r2, #0]
 8002fca:	801a      	strh	r2, [r3, #0]
 8002fcc:	68fb      	ldr	r3, [r7, #12]
 8002fce:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002fd6:	3302      	adds	r3, #2
 8002fd8:	b292      	uxth	r2, r2
 8002fda:	801a      	strh	r2, [r3, #0]
 8002fdc:	bf00      	nop
 8002fde:	3714      	adds	r7, #20
 8002fe0:	46bd      	mov	sp, r7
 8002fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fe6:	4770      	bx	lr

08002fe8 <ailayer_dense_sizeof_bwdmem>:
 8002fe8:	b580      	push	{r7, lr}
 8002fea:	b086      	sub	sp, #24
 8002fec:	af00      	add	r7, sp, #0
 8002fee:	6078      	str	r0, [r7, #4]
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	685b      	ldr	r3, [r3, #4]
 8002ff4:	617b      	str	r3, [r7, #20]
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	689b      	ldr	r3, [r3, #8]
 8002ffa:	f003 0302 	and.w	r3, r3, #2
 8002ffe:	2b00      	cmp	r3, #0
 8003000:	d011      	beq.n	8003026 <ailayer_dense_sizeof_bwdmem+0x3e>
 8003002:	697b      	ldr	r3, [r7, #20]
 8003004:	3388      	adds	r3, #136	@ 0x88
 8003006:	4618      	mov	r0, r3
 8003008:	f000 fc33 	bl	8003872 <aimath_sizeof_tensor_data>
 800300c:	6138      	str	r0, [r7, #16]
 800300e:	697b      	ldr	r3, [r7, #20]
 8003010:	339c      	adds	r3, #156	@ 0x9c
 8003012:	4618      	mov	r0, r3
 8003014:	f000 fc2d 	bl	8003872 <aimath_sizeof_tensor_data>
 8003018:	60f8      	str	r0, [r7, #12]
 800301a:	68fa      	ldr	r2, [r7, #12]
 800301c:	693b      	ldr	r3, [r7, #16]
 800301e:	4293      	cmp	r3, r2
 8003020:	bf38      	it	cc
 8003022:	4613      	movcc	r3, r2
 8003024:	e000      	b.n	8003028 <ailayer_dense_sizeof_bwdmem+0x40>
 8003026:	2300      	movs	r3, #0
 8003028:	4618      	mov	r0, r3
 800302a:	3718      	adds	r7, #24
 800302c:	46bd      	mov	sp, r7
 800302e:	bd80      	pop	{r7, pc}

08003030 <ailayer_dense_sizeof_paramem>:
 8003030:	b590      	push	{r4, r7, lr}
 8003032:	b085      	sub	sp, #20
 8003034:	af00      	add	r7, sp, #0
 8003036:	6078      	str	r0, [r7, #4]
 8003038:	2300      	movs	r3, #0
 800303a:	60fb      	str	r3, [r7, #12]
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	685b      	ldr	r3, [r3, #4]
 8003040:	60bb      	str	r3, [r7, #8]
 8003042:	68bb      	ldr	r3, [r7, #8]
 8003044:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003048:	689b      	ldr	r3, [r3, #8]
 800304a:	68fa      	ldr	r2, [r7, #12]
 800304c:	4413      	add	r3, r2
 800304e:	60fb      	str	r3, [r7, #12]
 8003050:	e002      	b.n	8003058 <ailayer_dense_sizeof_paramem+0x28>
 8003052:	68fb      	ldr	r3, [r7, #12]
 8003054:	3301      	adds	r3, #1
 8003056:	60fb      	str	r3, [r7, #12]
 8003058:	68fb      	ldr	r3, [r7, #12]
 800305a:	f003 0303 	and.w	r3, r3, #3
 800305e:	2b00      	cmp	r3, #0
 8003060:	d1f7      	bne.n	8003052 <ailayer_dense_sizeof_paramem+0x22>
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	68db      	ldr	r3, [r3, #12]
 8003066:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003068:	3302      	adds	r3, #2
 800306a:	881b      	ldrh	r3, [r3, #0]
 800306c:	461a      	mov	r2, r3
 800306e:	68bb      	ldr	r3, [r7, #8]
 8003070:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003074:	fb03 f402 	mul.w	r4, r3, r2
 8003078:	68bb      	ldr	r3, [r7, #8]
 800307a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800307e:	4618      	mov	r0, r3
 8003080:	f000 fbeb 	bl	800385a <aimath_sizeof_dtype>
 8003084:	4603      	mov	r3, r0
 8003086:	fb04 f303 	mul.w	r3, r4, r3
 800308a:	68fa      	ldr	r2, [r7, #12]
 800308c:	4413      	add	r3, r2
 800308e:	60fb      	str	r3, [r7, #12]
 8003090:	e002      	b.n	8003098 <ailayer_dense_sizeof_paramem+0x68>
 8003092:	68fb      	ldr	r3, [r7, #12]
 8003094:	3301      	adds	r3, #1
 8003096:	60fb      	str	r3, [r7, #12]
 8003098:	68fb      	ldr	r3, [r7, #12]
 800309a:	f003 0303 	and.w	r3, r3, #3
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d1f7      	bne.n	8003092 <ailayer_dense_sizeof_paramem+0x62>
 80030a2:	68bb      	ldr	r3, [r7, #8]
 80030a4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80030a8:	689b      	ldr	r3, [r3, #8]
 80030aa:	68fa      	ldr	r2, [r7, #12]
 80030ac:	4413      	add	r3, r2
 80030ae:	60fb      	str	r3, [r7, #12]
 80030b0:	e002      	b.n	80030b8 <ailayer_dense_sizeof_paramem+0x88>
 80030b2:	68fb      	ldr	r3, [r7, #12]
 80030b4:	3301      	adds	r3, #1
 80030b6:	60fb      	str	r3, [r7, #12]
 80030b8:	68fb      	ldr	r3, [r7, #12]
 80030ba:	f003 0303 	and.w	r3, r3, #3
 80030be:	2b00      	cmp	r3, #0
 80030c0:	d1f7      	bne.n	80030b2 <ailayer_dense_sizeof_paramem+0x82>
 80030c2:	68bb      	ldr	r3, [r7, #8]
 80030c4:	f8d3 4084 	ldr.w	r4, [r3, #132]	@ 0x84
 80030c8:	68bb      	ldr	r3, [r7, #8]
 80030ca:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80030ce:	4618      	mov	r0, r3
 80030d0:	f000 fbc3 	bl	800385a <aimath_sizeof_dtype>
 80030d4:	4603      	mov	r3, r0
 80030d6:	fb04 f303 	mul.w	r3, r4, r3
 80030da:	68fa      	ldr	r2, [r7, #12]
 80030dc:	4413      	add	r3, r2
 80030de:	60fb      	str	r3, [r7, #12]
 80030e0:	68fb      	ldr	r3, [r7, #12]
 80030e2:	4618      	mov	r0, r3
 80030e4:	3714      	adds	r7, #20
 80030e6:	46bd      	mov	sp, r7
 80030e8:	bd90      	pop	{r4, r7, pc}

080030ea <ailayer_dense_set_paramem>:
 80030ea:	b580      	push	{r7, lr}
 80030ec:	b084      	sub	sp, #16
 80030ee:	af00      	add	r7, sp, #0
 80030f0:	6078      	str	r0, [r7, #4]
 80030f2:	6039      	str	r1, [r7, #0]
 80030f4:	2300      	movs	r3, #0
 80030f6:	60fb      	str	r3, [r7, #12]
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	685b      	ldr	r3, [r3, #4]
 80030fc:	60bb      	str	r3, [r7, #8]
 80030fe:	683a      	ldr	r2, [r7, #0]
 8003100:	68fb      	ldr	r3, [r7, #12]
 8003102:	441a      	add	r2, r3
 8003104:	68bb      	ldr	r3, [r7, #8]
 8003106:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 800310a:	68bb      	ldr	r3, [r7, #8]
 800310c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003110:	689b      	ldr	r3, [r3, #8]
 8003112:	68fa      	ldr	r2, [r7, #12]
 8003114:	4413      	add	r3, r2
 8003116:	60fb      	str	r3, [r7, #12]
 8003118:	e002      	b.n	8003120 <ailayer_dense_set_paramem+0x36>
 800311a:	68fb      	ldr	r3, [r7, #12]
 800311c:	3301      	adds	r3, #1
 800311e:	60fb      	str	r3, [r7, #12]
 8003120:	68fb      	ldr	r3, [r7, #12]
 8003122:	f003 0303 	and.w	r3, r3, #3
 8003126:	2b00      	cmp	r3, #0
 8003128:	d1f7      	bne.n	800311a <ailayer_dense_set_paramem+0x30>
 800312a:	683a      	ldr	r2, [r7, #0]
 800312c:	68fb      	ldr	r3, [r7, #12]
 800312e:	441a      	add	r2, r3
 8003130:	68bb      	ldr	r3, [r7, #8]
 8003132:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
 8003136:	68bb      	ldr	r3, [r7, #8]
 8003138:	3388      	adds	r3, #136	@ 0x88
 800313a:	4618      	mov	r0, r3
 800313c:	f000 fb99 	bl	8003872 <aimath_sizeof_tensor_data>
 8003140:	4602      	mov	r2, r0
 8003142:	68fb      	ldr	r3, [r7, #12]
 8003144:	4413      	add	r3, r2
 8003146:	60fb      	str	r3, [r7, #12]
 8003148:	e002      	b.n	8003150 <ailayer_dense_set_paramem+0x66>
 800314a:	68fb      	ldr	r3, [r7, #12]
 800314c:	3301      	adds	r3, #1
 800314e:	60fb      	str	r3, [r7, #12]
 8003150:	68fb      	ldr	r3, [r7, #12]
 8003152:	f003 0303 	and.w	r3, r3, #3
 8003156:	2b00      	cmp	r3, #0
 8003158:	d1f7      	bne.n	800314a <ailayer_dense_set_paramem+0x60>
 800315a:	683a      	ldr	r2, [r7, #0]
 800315c:	68fb      	ldr	r3, [r7, #12]
 800315e:	441a      	add	r2, r3
 8003160:	68bb      	ldr	r3, [r7, #8]
 8003162:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
 8003166:	68bb      	ldr	r3, [r7, #8]
 8003168:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800316c:	689b      	ldr	r3, [r3, #8]
 800316e:	68fa      	ldr	r2, [r7, #12]
 8003170:	4413      	add	r3, r2
 8003172:	60fb      	str	r3, [r7, #12]
 8003174:	e002      	b.n	800317c <ailayer_dense_set_paramem+0x92>
 8003176:	68fb      	ldr	r3, [r7, #12]
 8003178:	3301      	adds	r3, #1
 800317a:	60fb      	str	r3, [r7, #12]
 800317c:	68fb      	ldr	r3, [r7, #12]
 800317e:	f003 0303 	and.w	r3, r3, #3
 8003182:	2b00      	cmp	r3, #0
 8003184:	d1f7      	bne.n	8003176 <ailayer_dense_set_paramem+0x8c>
 8003186:	683a      	ldr	r2, [r7, #0]
 8003188:	68fb      	ldr	r3, [r7, #12]
 800318a:	441a      	add	r2, r3
 800318c:	68bb      	ldr	r3, [r7, #8]
 800318e:	f8c3 20ac 	str.w	r2, [r3, #172]	@ 0xac
 8003192:	68bb      	ldr	r3, [r7, #8]
 8003194:	f103 0288 	add.w	r2, r3, #136	@ 0x88
 8003198:	68bb      	ldr	r3, [r7, #8]
 800319a:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
 800319e:	68bb      	ldr	r3, [r7, #8]
 80031a0:	f103 029c 	add.w	r2, r3, #156	@ 0x9c
 80031a4:	68bb      	ldr	r3, [r7, #8]
 80031a6:	f8c3 20bc 	str.w	r2, [r3, #188]	@ 0xbc
 80031aa:	bf00      	nop
 80031ac:	3710      	adds	r7, #16
 80031ae:	46bd      	mov	sp, r7
 80031b0:	bd80      	pop	{r7, pc}

080031b2 <ailayer_dense_sizeof_trainmem>:
 80031b2:	b580      	push	{r7, lr}
 80031b4:	b084      	sub	sp, #16
 80031b6:	af00      	add	r7, sp, #0
 80031b8:	6078      	str	r0, [r7, #4]
 80031ba:	2300      	movs	r3, #0
 80031bc:	60fb      	str	r3, [r7, #12]
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	685b      	ldr	r3, [r3, #4]
 80031c2:	60bb      	str	r3, [r7, #8]
 80031c4:	68fb      	ldr	r3, [r7, #12]
 80031c6:	3314      	adds	r3, #20
 80031c8:	60fb      	str	r3, [r7, #12]
 80031ca:	68bb      	ldr	r3, [r7, #8]
 80031cc:	3388      	adds	r3, #136	@ 0x88
 80031ce:	4618      	mov	r0, r3
 80031d0:	f000 fb4f 	bl	8003872 <aimath_sizeof_tensor_data>
 80031d4:	4602      	mov	r2, r0
 80031d6:	68fb      	ldr	r3, [r7, #12]
 80031d8:	4413      	add	r3, r2
 80031da:	60fb      	str	r3, [r7, #12]
 80031dc:	e002      	b.n	80031e4 <ailayer_dense_sizeof_trainmem+0x32>
 80031de:	68fb      	ldr	r3, [r7, #12]
 80031e0:	3301      	adds	r3, #1
 80031e2:	60fb      	str	r3, [r7, #12]
 80031e4:	68fb      	ldr	r3, [r7, #12]
 80031e6:	f003 0303 	and.w	r3, r3, #3
 80031ea:	2b00      	cmp	r3, #0
 80031ec:	d1f7      	bne.n	80031de <ailayer_dense_sizeof_trainmem+0x2c>
 80031ee:	68bb      	ldr	r3, [r7, #8]
 80031f0:	3388      	adds	r3, #136	@ 0x88
 80031f2:	4618      	mov	r0, r3
 80031f4:	f000 fb51 	bl	800389a <aimath_sizeof_tensor_params>
 80031f8:	4602      	mov	r2, r0
 80031fa:	68fb      	ldr	r3, [r7, #12]
 80031fc:	4413      	add	r3, r2
 80031fe:	60fb      	str	r3, [r7, #12]
 8003200:	e002      	b.n	8003208 <ailayer_dense_sizeof_trainmem+0x56>
 8003202:	68fb      	ldr	r3, [r7, #12]
 8003204:	3301      	adds	r3, #1
 8003206:	60fb      	str	r3, [r7, #12]
 8003208:	68fb      	ldr	r3, [r7, #12]
 800320a:	f003 0303 	and.w	r3, r3, #3
 800320e:	2b00      	cmp	r3, #0
 8003210:	d1f7      	bne.n	8003202 <ailayer_dense_sizeof_trainmem+0x50>
 8003212:	68fb      	ldr	r3, [r7, #12]
 8003214:	3314      	adds	r3, #20
 8003216:	60fb      	str	r3, [r7, #12]
 8003218:	68bb      	ldr	r3, [r7, #8]
 800321a:	339c      	adds	r3, #156	@ 0x9c
 800321c:	4618      	mov	r0, r3
 800321e:	f000 fb28 	bl	8003872 <aimath_sizeof_tensor_data>
 8003222:	4602      	mov	r2, r0
 8003224:	68fb      	ldr	r3, [r7, #12]
 8003226:	4413      	add	r3, r2
 8003228:	60fb      	str	r3, [r7, #12]
 800322a:	e002      	b.n	8003232 <ailayer_dense_sizeof_trainmem+0x80>
 800322c:	68fb      	ldr	r3, [r7, #12]
 800322e:	3301      	adds	r3, #1
 8003230:	60fb      	str	r3, [r7, #12]
 8003232:	68fb      	ldr	r3, [r7, #12]
 8003234:	f003 0303 	and.w	r3, r3, #3
 8003238:	2b00      	cmp	r3, #0
 800323a:	d1f7      	bne.n	800322c <ailayer_dense_sizeof_trainmem+0x7a>
 800323c:	68bb      	ldr	r3, [r7, #8]
 800323e:	339c      	adds	r3, #156	@ 0x9c
 8003240:	4618      	mov	r0, r3
 8003242:	f000 fb2a 	bl	800389a <aimath_sizeof_tensor_params>
 8003246:	4602      	mov	r2, r0
 8003248:	68fb      	ldr	r3, [r7, #12]
 800324a:	4413      	add	r3, r2
 800324c:	60fb      	str	r3, [r7, #12]
 800324e:	68fb      	ldr	r3, [r7, #12]
 8003250:	4618      	mov	r0, r3
 8003252:	3710      	adds	r7, #16
 8003254:	46bd      	mov	sp, r7
 8003256:	bd80      	pop	{r7, pc}

08003258 <ailayer_dense_set_trainmem>:
 8003258:	b580      	push	{r7, lr}
 800325a:	b084      	sub	sp, #16
 800325c:	af00      	add	r7, sp, #0
 800325e:	6078      	str	r0, [r7, #4]
 8003260:	6039      	str	r1, [r7, #0]
 8003262:	2300      	movs	r3, #0
 8003264:	60fb      	str	r3, [r7, #12]
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	685b      	ldr	r3, [r3, #4]
 800326a:	60bb      	str	r3, [r7, #8]
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003270:	683a      	ldr	r2, [r7, #0]
 8003272:	601a      	str	r2, [r3, #0]
 8003274:	68fb      	ldr	r3, [r7, #12]
 8003276:	3314      	adds	r3, #20
 8003278:	60fb      	str	r3, [r7, #12]
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	6839      	ldr	r1, [r7, #0]
 8003282:	68fa      	ldr	r2, [r7, #12]
 8003284:	440a      	add	r2, r1
 8003286:	611a      	str	r2, [r3, #16]
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	68ba      	ldr	r2, [r7, #8]
 8003290:	f8d2 2088 	ldr.w	r2, [r2, #136]	@ 0x88
 8003294:	601a      	str	r2, [r3, #0]
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	2202      	movs	r2, #2
 800329e:	711a      	strb	r2, [r3, #4]
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80032a4:	681b      	ldr	r3, [r3, #0]
 80032a6:	68ba      	ldr	r2, [r7, #8]
 80032a8:	f8d2 2090 	ldr.w	r2, [r2, #144]	@ 0x90
 80032ac:	609a      	str	r2, [r3, #8]
 80032ae:	68bb      	ldr	r3, [r7, #8]
 80032b0:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80032b4:	4618      	mov	r0, r3
 80032b6:	f000 fadc 	bl	8003872 <aimath_sizeof_tensor_data>
 80032ba:	4602      	mov	r2, r0
 80032bc:	68fb      	ldr	r3, [r7, #12]
 80032be:	4413      	add	r3, r2
 80032c0:	60fb      	str	r3, [r7, #12]
 80032c2:	e002      	b.n	80032ca <ailayer_dense_set_trainmem+0x72>
 80032c4:	68fb      	ldr	r3, [r7, #12]
 80032c6:	3301      	adds	r3, #1
 80032c8:	60fb      	str	r3, [r7, #12]
 80032ca:	68fb      	ldr	r3, [r7, #12]
 80032cc:	f003 0303 	and.w	r3, r3, #3
 80032d0:	2b00      	cmp	r3, #0
 80032d2:	d1f7      	bne.n	80032c4 <ailayer_dense_set_trainmem+0x6c>
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80032d8:	681b      	ldr	r3, [r3, #0]
 80032da:	6839      	ldr	r1, [r7, #0]
 80032dc:	68fa      	ldr	r2, [r7, #12]
 80032de:	440a      	add	r2, r1
 80032e0:	60da      	str	r2, [r3, #12]
 80032e2:	68bb      	ldr	r3, [r7, #8]
 80032e4:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80032e8:	4618      	mov	r0, r3
 80032ea:	f000 fad6 	bl	800389a <aimath_sizeof_tensor_params>
 80032ee:	4602      	mov	r2, r0
 80032f0:	68fb      	ldr	r3, [r7, #12]
 80032f2:	4413      	add	r3, r2
 80032f4:	60fb      	str	r3, [r7, #12]
 80032f6:	e002      	b.n	80032fe <ailayer_dense_set_trainmem+0xa6>
 80032f8:	68fb      	ldr	r3, [r7, #12]
 80032fa:	3301      	adds	r3, #1
 80032fc:	60fb      	str	r3, [r7, #12]
 80032fe:	68fb      	ldr	r3, [r7, #12]
 8003300:	f003 0303 	and.w	r3, r3, #3
 8003304:	2b00      	cmp	r3, #0
 8003306:	d1f7      	bne.n	80032f8 <ailayer_dense_set_trainmem+0xa0>
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800330c:	3304      	adds	r3, #4
 800330e:	6839      	ldr	r1, [r7, #0]
 8003310:	68fa      	ldr	r2, [r7, #12]
 8003312:	440a      	add	r2, r1
 8003314:	601a      	str	r2, [r3, #0]
 8003316:	68fb      	ldr	r3, [r7, #12]
 8003318:	3314      	adds	r3, #20
 800331a:	60fb      	str	r3, [r7, #12]
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003320:	3304      	adds	r3, #4
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	6839      	ldr	r1, [r7, #0]
 8003326:	68fa      	ldr	r2, [r7, #12]
 8003328:	440a      	add	r2, r1
 800332a:	611a      	str	r2, [r3, #16]
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003330:	3304      	adds	r3, #4
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	68ba      	ldr	r2, [r7, #8]
 8003336:	f8d2 209c 	ldr.w	r2, [r2, #156]	@ 0x9c
 800333a:	601a      	str	r2, [r3, #0]
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003340:	3304      	adds	r3, #4
 8003342:	681b      	ldr	r3, [r3, #0]
 8003344:	2201      	movs	r2, #1
 8003346:	711a      	strb	r2, [r3, #4]
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800334c:	3304      	adds	r3, #4
 800334e:	681b      	ldr	r3, [r3, #0]
 8003350:	68ba      	ldr	r2, [r7, #8]
 8003352:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 8003356:	609a      	str	r2, [r3, #8]
 8003358:	68bb      	ldr	r3, [r7, #8]
 800335a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800335e:	4618      	mov	r0, r3
 8003360:	f000 fa87 	bl	8003872 <aimath_sizeof_tensor_data>
 8003364:	4602      	mov	r2, r0
 8003366:	68fb      	ldr	r3, [r7, #12]
 8003368:	4413      	add	r3, r2
 800336a:	60fb      	str	r3, [r7, #12]
 800336c:	e002      	b.n	8003374 <ailayer_dense_set_trainmem+0x11c>
 800336e:	68fb      	ldr	r3, [r7, #12]
 8003370:	3301      	adds	r3, #1
 8003372:	60fb      	str	r3, [r7, #12]
 8003374:	68fb      	ldr	r3, [r7, #12]
 8003376:	f003 0303 	and.w	r3, r3, #3
 800337a:	2b00      	cmp	r3, #0
 800337c:	d1f7      	bne.n	800336e <ailayer_dense_set_trainmem+0x116>
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003382:	3304      	adds	r3, #4
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	6839      	ldr	r1, [r7, #0]
 8003388:	68fa      	ldr	r2, [r7, #12]
 800338a:	440a      	add	r2, r1
 800338c:	60da      	str	r2, [r3, #12]
 800338e:	68bb      	ldr	r3, [r7, #8]
 8003390:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8003394:	4618      	mov	r0, r3
 8003396:	f000 fa80 	bl	800389a <aimath_sizeof_tensor_params>
 800339a:	4602      	mov	r2, r0
 800339c:	68fb      	ldr	r3, [r7, #12]
 800339e:	4413      	add	r3, r2
 80033a0:	60fb      	str	r3, [r7, #12]
 80033a2:	bf00      	nop
 80033a4:	3710      	adds	r7, #16
 80033a6:	46bd      	mov	sp, r7
 80033a8:	bd80      	pop	{r7, pc}
	...

080033ac <ailayer_dense_print_specs>:
 80033ac:	b580      	push	{r7, lr}
 80033ae:	b084      	sub	sp, #16
 80033b0:	af00      	add	r7, sp, #0
 80033b2:	6078      	str	r0, [r7, #4]
 80033b4:	687b      	ldr	r3, [r7, #4]
 80033b6:	685b      	ldr	r3, [r3, #4]
 80033b8:	60fb      	str	r3, [r7, #12]
 80033ba:	4b08      	ldr	r3, [pc, #32]	@ (80033dc <ailayer_dense_print_specs+0x30>)
 80033bc:	681b      	ldr	r3, [r3, #0]
 80033be:	4808      	ldr	r0, [pc, #32]	@ (80033e0 <ailayer_dense_print_specs+0x34>)
 80033c0:	4798      	blx	r3
 80033c2:	4b08      	ldr	r3, [pc, #32]	@ (80033e4 <ailayer_dense_print_specs+0x38>)
 80033c4:	681b      	ldr	r3, [r3, #0]
 80033c6:	68fa      	ldr	r2, [r7, #12]
 80033c8:	f8d2 2084 	ldr.w	r2, [r2, #132]	@ 0x84
 80033cc:	4611      	mov	r1, r2
 80033ce:	4806      	ldr	r0, [pc, #24]	@ (80033e8 <ailayer_dense_print_specs+0x3c>)
 80033d0:	4798      	blx	r3
 80033d2:	bf00      	nop
 80033d4:	3710      	adds	r7, #16
 80033d6:	46bd      	mov	sp, r7
 80033d8:	bd80      	pop	{r7, pc}
 80033da:	bf00      	nop
 80033dc:	20000548 	.word	0x20000548
 80033e0:	0800c718 	.word	0x0800c718
 80033e4:	20000554 	.word	0x20000554
 80033e8:	0800bf24 	.word	0x0800bf24

080033ec <ailayer_input>:
 80033ec:	b580      	push	{r7, lr}
 80033ee:	b082      	sub	sp, #8
 80033f0:	af00      	add	r7, sp, #0
 80033f2:	6078      	str	r0, [r7, #4]
 80033f4:	4b26      	ldr	r3, [pc, #152]	@ (8003490 <ailayer_input+0xa4>)
 80033f6:	681a      	ldr	r2, [r3, #0]
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	601a      	str	r2, [r3, #0]
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	2200      	movs	r2, #0
 8003400:	611a      	str	r2, [r3, #16]
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	2200      	movs	r2, #0
 8003406:	609a      	str	r2, [r3, #8]
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	689b      	ldr	r3, [r3, #8]
 800340c:	f023 0202 	bic.w	r2, r3, #2
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	609a      	str	r2, [r3, #8]
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	689b      	ldr	r3, [r3, #8]
 8003418:	f043 0208 	orr.w	r2, r3, #8
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	609a      	str	r2, [r3, #8]
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	687a      	ldr	r2, [r7, #4]
 8003424:	605a      	str	r2, [r3, #4]
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	f893 2084 	ldrb.w	r2, [r3, #132]	@ 0x84
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	f883 2020 	strb.w	r2, [r3, #32]
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	4a15      	ldr	r2, [pc, #84]	@ (8003494 <ailayer_input+0xa8>)
 8003440:	639a      	str	r2, [r3, #56]	@ 0x38
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	4a14      	ldr	r2, [pc, #80]	@ (8003498 <ailayer_input+0xac>)
 8003446:	661a      	str	r2, [r3, #96]	@ 0x60
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	4a14      	ldr	r2, [pc, #80]	@ (800349c <ailayer_input+0xb0>)
 800344c:	631a      	str	r2, [r3, #48]	@ 0x30
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	2200      	movs	r2, #0
 8003452:	665a      	str	r2, [r3, #100]	@ 0x64
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	2200      	movs	r2, #0
 8003458:	669a      	str	r2, [r3, #104]	@ 0x68
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	2200      	movs	r2, #0
 800345e:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	2200      	movs	r2, #0
 8003464:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	2200      	movs	r2, #0
 800346c:	671a      	str	r2, [r3, #112]	@ 0x70
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	2200      	movs	r2, #0
 8003472:	675a      	str	r2, [r3, #116]	@ 0x74
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	2200      	movs	r2, #0
 8003478:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	4618      	mov	r0, r3
 8003480:	f000 f822 	bl	80034c8 <ailayer_input_calc_result_shape>
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	4618      	mov	r0, r3
 8003488:	3708      	adds	r7, #8
 800348a:	46bd      	mov	sp, r7
 800348c:	bd80      	pop	{r7, pc}
 800348e:	bf00      	nop
 8003490:	20000560 	.word	0x20000560
 8003494:	080034a1 	.word	0x080034a1
 8003498:	080034b5 	.word	0x080034b5
 800349c:	080034c9 	.word	0x080034c9

080034a0 <ailayer_input_forward>:
 80034a0:	b480      	push	{r7}
 80034a2:	b083      	sub	sp, #12
 80034a4:	af00      	add	r7, sp, #0
 80034a6:	6078      	str	r0, [r7, #4]
 80034a8:	bf00      	nop
 80034aa:	370c      	adds	r7, #12
 80034ac:	46bd      	mov	sp, r7
 80034ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034b2:	4770      	bx	lr

080034b4 <ailayer_input_backward>:
 80034b4:	b480      	push	{r7}
 80034b6:	b083      	sub	sp, #12
 80034b8:	af00      	add	r7, sp, #0
 80034ba:	6078      	str	r0, [r7, #4]
 80034bc:	bf00      	nop
 80034be:	370c      	adds	r7, #12
 80034c0:	46bd      	mov	sp, r7
 80034c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034c6:	4770      	bx	lr

080034c8 <ailayer_input_calc_result_shape>:
 80034c8:	b480      	push	{r7}
 80034ca:	b083      	sub	sp, #12
 80034cc:	af00      	add	r7, sp, #0
 80034ce:	6078      	str	r0, [r7, #4]
 80034d0:	bf00      	nop
 80034d2:	370c      	adds	r7, #12
 80034d4:	46bd      	mov	sp, r7
 80034d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034da:	4770      	bx	lr

080034dc <ailayer_input_print_specs>:
 80034dc:	b580      	push	{r7, lr}
 80034de:	b084      	sub	sp, #16
 80034e0:	af00      	add	r7, sp, #0
 80034e2:	6078      	str	r0, [r7, #4]
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	60bb      	str	r3, [r7, #8]
 80034e8:	2300      	movs	r3, #0
 80034ea:	73fb      	strb	r3, [r7, #15]
 80034ec:	4b1f      	ldr	r3, [pc, #124]	@ (800356c <ailayer_input_print_specs+0x90>)
 80034ee:	681b      	ldr	r3, [r3, #0]
 80034f0:	481f      	ldr	r0, [pc, #124]	@ (8003570 <ailayer_input_print_specs+0x94>)
 80034f2:	4798      	blx	r3
 80034f4:	4b1f      	ldr	r3, [pc, #124]	@ (8003574 <ailayer_input_print_specs+0x98>)
 80034f6:	681b      	ldr	r3, [r3, #0]
 80034f8:	68ba      	ldr	r2, [r7, #8]
 80034fa:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 80034fe:	4611      	mov	r1, r2
 8003500:	481d      	ldr	r0, [pc, #116]	@ (8003578 <ailayer_input_print_specs+0x9c>)
 8003502:	4798      	blx	r3
 8003504:	4b19      	ldr	r3, [pc, #100]	@ (800356c <ailayer_input_print_specs+0x90>)
 8003506:	681b      	ldr	r3, [r3, #0]
 8003508:	481c      	ldr	r0, [pc, #112]	@ (800357c <ailayer_input_print_specs+0xa0>)
 800350a:	4798      	blx	r3
 800350c:	4b1c      	ldr	r3, [pc, #112]	@ (8003580 <ailayer_input_print_specs+0xa4>)
 800350e:	681b      	ldr	r3, [r3, #0]
 8003510:	68ba      	ldr	r2, [r7, #8]
 8003512:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
 8003516:	7bfa      	ldrb	r2, [r7, #15]
 8003518:	0052      	lsls	r2, r2, #1
 800351a:	440a      	add	r2, r1
 800351c:	8812      	ldrh	r2, [r2, #0]
 800351e:	4611      	mov	r1, r2
 8003520:	4818      	ldr	r0, [pc, #96]	@ (8003584 <ailayer_input_print_specs+0xa8>)
 8003522:	4798      	blx	r3
 8003524:	2301      	movs	r3, #1
 8003526:	73fb      	strb	r3, [r7, #15]
 8003528:	e012      	b.n	8003550 <ailayer_input_print_specs+0x74>
 800352a:	4b10      	ldr	r3, [pc, #64]	@ (800356c <ailayer_input_print_specs+0x90>)
 800352c:	681b      	ldr	r3, [r3, #0]
 800352e:	4816      	ldr	r0, [pc, #88]	@ (8003588 <ailayer_input_print_specs+0xac>)
 8003530:	4798      	blx	r3
 8003532:	4b13      	ldr	r3, [pc, #76]	@ (8003580 <ailayer_input_print_specs+0xa4>)
 8003534:	681b      	ldr	r3, [r3, #0]
 8003536:	68ba      	ldr	r2, [r7, #8]
 8003538:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
 800353c:	7bfa      	ldrb	r2, [r7, #15]
 800353e:	0052      	lsls	r2, r2, #1
 8003540:	440a      	add	r2, r1
 8003542:	8812      	ldrh	r2, [r2, #0]
 8003544:	4611      	mov	r1, r2
 8003546:	480f      	ldr	r0, [pc, #60]	@ (8003584 <ailayer_input_print_specs+0xa8>)
 8003548:	4798      	blx	r3
 800354a:	7bfb      	ldrb	r3, [r7, #15]
 800354c:	3301      	adds	r3, #1
 800354e:	73fb      	strb	r3, [r7, #15]
 8003550:	68bb      	ldr	r3, [r7, #8]
 8003552:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 8003556:	7bfa      	ldrb	r2, [r7, #15]
 8003558:	429a      	cmp	r2, r3
 800355a:	d3e6      	bcc.n	800352a <ailayer_input_print_specs+0x4e>
 800355c:	4b03      	ldr	r3, [pc, #12]	@ (800356c <ailayer_input_print_specs+0x90>)
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	480a      	ldr	r0, [pc, #40]	@ (800358c <ailayer_input_print_specs+0xb0>)
 8003562:	4798      	blx	r3
 8003564:	bf00      	nop
 8003566:	3710      	adds	r7, #16
 8003568:	46bd      	mov	sp, r7
 800356a:	bd80      	pop	{r7, pc}
 800356c:	20000548 	.word	0x20000548
 8003570:	0800c734 	.word	0x0800c734
 8003574:	20000550 	.word	0x20000550
 8003578:	0800bf28 	.word	0x0800bf28
 800357c:	0800c73c 	.word	0x0800c73c
 8003580:	20000554 	.word	0x20000554
 8003584:	0800bf2c 	.word	0x0800bf2c
 8003588:	0800c748 	.word	0x0800c748
 800358c:	0800c74c 	.word	0x0800c74c

08003590 <ailayer_relu>:
 8003590:	b580      	push	{r7, lr}
 8003592:	b082      	sub	sp, #8
 8003594:	af00      	add	r7, sp, #0
 8003596:	6078      	str	r0, [r7, #4]
 8003598:	6039      	str	r1, [r7, #0]
 800359a:	4b2d      	ldr	r3, [pc, #180]	@ (8003650 <ailayer_relu+0xc0>)
 800359c:	681a      	ldr	r2, [r3, #0]
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	601a      	str	r2, [r3, #0]
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	2200      	movs	r2, #0
 80035a6:	609a      	str	r2, [r3, #8]
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	689b      	ldr	r3, [r3, #8]
 80035ac:	f023 0202 	bic.w	r2, r3, #2
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	609a      	str	r2, [r3, #8]
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	689b      	ldr	r3, [r3, #8]
 80035b8:	f023 0208 	bic.w	r2, r3, #8
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	609a      	str	r2, [r3, #8]
 80035c0:	687b      	ldr	r3, [r7, #4]
 80035c2:	683a      	ldr	r2, [r7, #0]
 80035c4:	60da      	str	r2, [r3, #12]
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	2200      	movs	r2, #0
 80035ca:	611a      	str	r2, [r3, #16]
 80035cc:	687a      	ldr	r2, [r7, #4]
 80035ce:	683b      	ldr	r3, [r7, #0]
 80035d0:	611a      	str	r2, [r3, #16]
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	687a      	ldr	r2, [r7, #4]
 80035d6:	605a      	str	r2, [r3, #4]
 80035d8:	683b      	ldr	r3, [r7, #0]
 80035da:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	625a      	str	r2, [r3, #36]	@ 0x24
 80035e0:	683b      	ldr	r3, [r7, #0]
 80035e2:	f893 2020 	ldrb.w	r2, [r3, #32]
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	f883 2020 	strb.w	r2, [r3, #32]
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	2202      	movs	r2, #2
 80035f0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80035f8:	687b      	ldr	r3, [r7, #4]
 80035fa:	645a      	str	r2, [r3, #68]	@ 0x44
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	4a15      	ldr	r2, [pc, #84]	@ (8003654 <ailayer_relu+0xc4>)
 8003600:	639a      	str	r2, [r3, #56]	@ 0x38
 8003602:	687b      	ldr	r3, [r7, #4]
 8003604:	4a14      	ldr	r2, [pc, #80]	@ (8003658 <ailayer_relu+0xc8>)
 8003606:	661a      	str	r2, [r3, #96]	@ 0x60
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	4a14      	ldr	r2, [pc, #80]	@ (800365c <ailayer_relu+0xcc>)
 800360c:	631a      	str	r2, [r3, #48]	@ 0x30
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	2200      	movs	r2, #0
 8003612:	665a      	str	r2, [r3, #100]	@ 0x64
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	2200      	movs	r2, #0
 8003618:	669a      	str	r2, [r3, #104]	@ 0x68
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	2200      	movs	r2, #0
 800361e:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003620:	687b      	ldr	r3, [r7, #4]
 8003622:	2200      	movs	r2, #0
 8003624:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	2200      	movs	r2, #0
 800362c:	671a      	str	r2, [r3, #112]	@ 0x70
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	2200      	movs	r2, #0
 8003632:	675a      	str	r2, [r3, #116]	@ 0x74
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	2200      	movs	r2, #0
 8003638:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	4618      	mov	r0, r3
 8003640:	f000 f849 	bl	80036d6 <ailayer_relu_calc_result_shape>
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	4618      	mov	r0, r3
 8003648:	3708      	adds	r7, #8
 800364a:	46bd      	mov	sp, r7
 800364c:	bd80      	pop	{r7, pc}
 800364e:	bf00      	nop
 8003650:	20000564 	.word	0x20000564
 8003654:	08003661 	.word	0x08003661
 8003658:	08003691 	.word	0x08003691
 800365c:	080036d7 	.word	0x080036d7

08003660 <ailayer_relu_forward>:
 8003660:	b580      	push	{r7, lr}
 8003662:	b086      	sub	sp, #24
 8003664:	af00      	add	r7, sp, #0
 8003666:	6078      	str	r0, [r7, #4]
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	685b      	ldr	r3, [r3, #4]
 800366c:	617b      	str	r3, [r7, #20]
 800366e:	687b      	ldr	r3, [r7, #4]
 8003670:	68db      	ldr	r3, [r3, #12]
 8003672:	331c      	adds	r3, #28
 8003674:	613b      	str	r3, [r7, #16]
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	331c      	adds	r3, #28
 800367a:	60fb      	str	r3, [r7, #12]
 800367c:	697b      	ldr	r3, [r7, #20]
 800367e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003682:	68f9      	ldr	r1, [r7, #12]
 8003684:	6938      	ldr	r0, [r7, #16]
 8003686:	4798      	blx	r3
 8003688:	bf00      	nop
 800368a:	3718      	adds	r7, #24
 800368c:	46bd      	mov	sp, r7
 800368e:	bd80      	pop	{r7, pc}

08003690 <ailayer_relu_backward>:
 8003690:	b580      	push	{r7, lr}
 8003692:	b086      	sub	sp, #24
 8003694:	af00      	add	r7, sp, #0
 8003696:	6078      	str	r0, [r7, #4]
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	685b      	ldr	r3, [r3, #4]
 800369c:	617b      	str	r3, [r7, #20]
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	333c      	adds	r3, #60	@ 0x3c
 80036a2:	613b      	str	r3, [r7, #16]
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	691b      	ldr	r3, [r3, #16]
 80036a8:	333c      	adds	r3, #60	@ 0x3c
 80036aa:	60fb      	str	r3, [r7, #12]
 80036ac:	687b      	ldr	r3, [r7, #4]
 80036ae:	68db      	ldr	r3, [r3, #12]
 80036b0:	331c      	adds	r3, #28
 80036b2:	60bb      	str	r3, [r7, #8]
 80036b4:	697b      	ldr	r3, [r7, #20]
 80036b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80036ba:	6939      	ldr	r1, [r7, #16]
 80036bc:	68b8      	ldr	r0, [r7, #8]
 80036be:	4798      	blx	r3
 80036c0:	697b      	ldr	r3, [r7, #20]
 80036c2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80036c6:	693a      	ldr	r2, [r7, #16]
 80036c8:	68f9      	ldr	r1, [r7, #12]
 80036ca:	6938      	ldr	r0, [r7, #16]
 80036cc:	4798      	blx	r3
 80036ce:	bf00      	nop
 80036d0:	3718      	adds	r7, #24
 80036d2:	46bd      	mov	sp, r7
 80036d4:	bd80      	pop	{r7, pc}

080036d6 <ailayer_relu_calc_result_shape>:
 80036d6:	b480      	push	{r7}
 80036d8:	b083      	sub	sp, #12
 80036da:	af00      	add	r7, sp, #0
 80036dc:	6078      	str	r0, [r7, #4]
 80036de:	bf00      	nop
 80036e0:	370c      	adds	r7, #12
 80036e2:	46bd      	mov	sp, r7
 80036e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036e8:	4770      	bx	lr

080036ea <ailayer_relu_print_specs>:
 80036ea:	b480      	push	{r7}
 80036ec:	b083      	sub	sp, #12
 80036ee:	af00      	add	r7, sp, #0
 80036f0:	6078      	str	r0, [r7, #4]
 80036f2:	bf00      	nop
 80036f4:	370c      	adds	r7, #12
 80036f6:	46bd      	mov	sp, r7
 80036f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036fc:	4770      	bx	lr
	...

08003700 <ailayer_softmax>:
 8003700:	b580      	push	{r7, lr}
 8003702:	b082      	sub	sp, #8
 8003704:	af00      	add	r7, sp, #0
 8003706:	6078      	str	r0, [r7, #4]
 8003708:	6039      	str	r1, [r7, #0]
 800370a:	4b29      	ldr	r3, [pc, #164]	@ (80037b0 <ailayer_softmax+0xb0>)
 800370c:	681a      	ldr	r2, [r3, #0]
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	601a      	str	r2, [r3, #0]
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	2200      	movs	r2, #0
 8003716:	609a      	str	r2, [r3, #8]
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	689b      	ldr	r3, [r3, #8]
 800371c:	f023 0202 	bic.w	r2, r3, #2
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	609a      	str	r2, [r3, #8]
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	689b      	ldr	r3, [r3, #8]
 8003728:	f023 0208 	bic.w	r2, r3, #8
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	609a      	str	r2, [r3, #8]
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	683a      	ldr	r2, [r7, #0]
 8003734:	60da      	str	r2, [r3, #12]
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	2200      	movs	r2, #0
 800373a:	611a      	str	r2, [r3, #16]
 800373c:	687a      	ldr	r2, [r7, #4]
 800373e:	683b      	ldr	r3, [r7, #0]
 8003740:	611a      	str	r2, [r3, #16]
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	687a      	ldr	r2, [r7, #4]
 8003746:	605a      	str	r2, [r3, #4]
 8003748:	683b      	ldr	r3, [r7, #0]
 800374a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003750:	683b      	ldr	r3, [r7, #0]
 8003752:	f893 2020 	ldrb.w	r2, [r3, #32]
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	f883 2020 	strb.w	r2, [r3, #32]
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	4a15      	ldr	r2, [pc, #84]	@ (80037b4 <ailayer_softmax+0xb4>)
 8003760:	639a      	str	r2, [r3, #56]	@ 0x38
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	2200      	movs	r2, #0
 8003766:	661a      	str	r2, [r3, #96]	@ 0x60
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	4a13      	ldr	r2, [pc, #76]	@ (80037b8 <ailayer_softmax+0xb8>)
 800376c:	631a      	str	r2, [r3, #48]	@ 0x30
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	2200      	movs	r2, #0
 8003772:	665a      	str	r2, [r3, #100]	@ 0x64
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	2200      	movs	r2, #0
 8003778:	669a      	str	r2, [r3, #104]	@ 0x68
 800377a:	687b      	ldr	r3, [r7, #4]
 800377c:	2200      	movs	r2, #0
 800377e:	67da      	str	r2, [r3, #124]	@ 0x7c
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	2200      	movs	r2, #0
 8003784:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	2200      	movs	r2, #0
 800378c:	671a      	str	r2, [r3, #112]	@ 0x70
 800378e:	687b      	ldr	r3, [r7, #4]
 8003790:	2200      	movs	r2, #0
 8003792:	675a      	str	r2, [r3, #116]	@ 0x74
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	2200      	movs	r2, #0
 8003798:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	4618      	mov	r0, r3
 80037a0:	f000 f824 	bl	80037ec <ailayer_softmax_calc_result_shape>
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	4618      	mov	r0, r3
 80037a8:	3708      	adds	r7, #8
 80037aa:	46bd      	mov	sp, r7
 80037ac:	bd80      	pop	{r7, pc}
 80037ae:	bf00      	nop
 80037b0:	20000568 	.word	0x20000568
 80037b4:	080037bd 	.word	0x080037bd
 80037b8:	080037ed 	.word	0x080037ed

080037bc <ailayer_softmax_forward>:
 80037bc:	b580      	push	{r7, lr}
 80037be:	b086      	sub	sp, #24
 80037c0:	af00      	add	r7, sp, #0
 80037c2:	6078      	str	r0, [r7, #4]
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	685b      	ldr	r3, [r3, #4]
 80037c8:	617b      	str	r3, [r7, #20]
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	68db      	ldr	r3, [r3, #12]
 80037ce:	331c      	adds	r3, #28
 80037d0:	613b      	str	r3, [r7, #16]
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	331c      	adds	r3, #28
 80037d6:	60fb      	str	r3, [r7, #12]
 80037d8:	697b      	ldr	r3, [r7, #20]
 80037da:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80037de:	68f9      	ldr	r1, [r7, #12]
 80037e0:	6938      	ldr	r0, [r7, #16]
 80037e2:	4798      	blx	r3
 80037e4:	bf00      	nop
 80037e6:	3718      	adds	r7, #24
 80037e8:	46bd      	mov	sp, r7
 80037ea:	bd80      	pop	{r7, pc}

080037ec <ailayer_softmax_calc_result_shape>:
 80037ec:	b480      	push	{r7}
 80037ee:	b083      	sub	sp, #12
 80037f0:	af00      	add	r7, sp, #0
 80037f2:	6078      	str	r0, [r7, #4]
 80037f4:	bf00      	nop
 80037f6:	370c      	adds	r7, #12
 80037f8:	46bd      	mov	sp, r7
 80037fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037fe:	4770      	bx	lr

08003800 <ailayer_softmax_print_specs>:
 8003800:	b480      	push	{r7}
 8003802:	b083      	sub	sp, #12
 8003804:	af00      	add	r7, sp, #0
 8003806:	6078      	str	r0, [r7, #4]
 8003808:	bf00      	nop
 800380a:	370c      	adds	r7, #12
 800380c:	46bd      	mov	sp, r7
 800380e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003812:	4770      	bx	lr

08003814 <aimath_tensor_elements>:
 8003814:	b480      	push	{r7}
 8003816:	b085      	sub	sp, #20
 8003818:	af00      	add	r7, sp, #0
 800381a:	6078      	str	r0, [r7, #4]
 800381c:	2301      	movs	r3, #1
 800381e:	60fb      	str	r3, [r7, #12]
 8003820:	2300      	movs	r3, #0
 8003822:	72fb      	strb	r3, [r7, #11]
 8003824:	e00d      	b.n	8003842 <aimath_tensor_elements+0x2e>
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	689a      	ldr	r2, [r3, #8]
 800382a:	7afb      	ldrb	r3, [r7, #11]
 800382c:	005b      	lsls	r3, r3, #1
 800382e:	4413      	add	r3, r2
 8003830:	881b      	ldrh	r3, [r3, #0]
 8003832:	461a      	mov	r2, r3
 8003834:	68fb      	ldr	r3, [r7, #12]
 8003836:	fb02 f303 	mul.w	r3, r2, r3
 800383a:	60fb      	str	r3, [r7, #12]
 800383c:	7afb      	ldrb	r3, [r7, #11]
 800383e:	3301      	adds	r3, #1
 8003840:	72fb      	strb	r3, [r7, #11]
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	791b      	ldrb	r3, [r3, #4]
 8003846:	7afa      	ldrb	r2, [r7, #11]
 8003848:	429a      	cmp	r2, r3
 800384a:	d3ec      	bcc.n	8003826 <aimath_tensor_elements+0x12>
 800384c:	68fb      	ldr	r3, [r7, #12]
 800384e:	4618      	mov	r0, r3
 8003850:	3714      	adds	r7, #20
 8003852:	46bd      	mov	sp, r7
 8003854:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003858:	4770      	bx	lr

0800385a <aimath_sizeof_dtype>:
 800385a:	b480      	push	{r7}
 800385c:	b083      	sub	sp, #12
 800385e:	af00      	add	r7, sp, #0
 8003860:	6078      	str	r0, [r7, #4]
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	685b      	ldr	r3, [r3, #4]
 8003866:	4618      	mov	r0, r3
 8003868:	370c      	adds	r7, #12
 800386a:	46bd      	mov	sp, r7
 800386c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003870:	4770      	bx	lr

08003872 <aimath_sizeof_tensor_data>:
 8003872:	b590      	push	{r4, r7, lr}
 8003874:	b083      	sub	sp, #12
 8003876:	af00      	add	r7, sp, #0
 8003878:	6078      	str	r0, [r7, #4]
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	4618      	mov	r0, r3
 8003880:	f7ff ffeb 	bl	800385a <aimath_sizeof_dtype>
 8003884:	4604      	mov	r4, r0
 8003886:	6878      	ldr	r0, [r7, #4]
 8003888:	f7ff ffc4 	bl	8003814 <aimath_tensor_elements>
 800388c:	4603      	mov	r3, r0
 800388e:	fb04 f303 	mul.w	r3, r4, r3
 8003892:	4618      	mov	r0, r3
 8003894:	370c      	adds	r7, #12
 8003896:	46bd      	mov	sp, r7
 8003898:	bd90      	pop	{r4, r7, pc}

0800389a <aimath_sizeof_tensor_params>:
 800389a:	b480      	push	{r7}
 800389c:	b083      	sub	sp, #12
 800389e:	af00      	add	r7, sp, #0
 80038a0:	6078      	str	r0, [r7, #4]
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	689b      	ldr	r3, [r3, #8]
 80038a8:	4618      	mov	r0, r3
 80038aa:	370c      	adds	r7, #12
 80038ac:	46bd      	mov	sp, r7
 80038ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038b2:	4770      	bx	lr

080038b4 <aimath_q31_print_aitensor>:
 80038b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038b8:	ed2d 8b02 	vpush	{d8}
 80038bc:	b09d      	sub	sp, #116	@ 0x74
 80038be:	af00      	add	r7, sp, #0
 80038c0:	6578      	str	r0, [r7, #84]	@ 0x54
 80038c2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80038c4:	68db      	ldr	r3, [r3, #12]
 80038c6:	881b      	ldrh	r3, [r3, #0]
 80038c8:	f8a7 3066 	strh.w	r3, [r7, #102]	@ 0x66
 80038cc:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80038ce:	68db      	ldr	r3, [r3, #12]
 80038d0:	685b      	ldr	r3, [r3, #4]
 80038d2:	663b      	str	r3, [r7, #96]	@ 0x60
 80038d4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80038d6:	691b      	ldr	r3, [r3, #16]
 80038d8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80038da:	4b99      	ldr	r3, [pc, #612]	@ (8003b40 <aimath_q31_print_aitensor+0x28c>)
 80038dc:	681b      	ldr	r3, [r3, #0]
 80038de:	4899      	ldr	r0, [pc, #612]	@ (8003b44 <aimath_q31_print_aitensor+0x290>)
 80038e0:	4798      	blx	r3
 80038e2:	4b99      	ldr	r3, [pc, #612]	@ (8003b48 <aimath_q31_print_aitensor+0x294>)
 80038e4:	681a      	ldr	r2, [r3, #0]
 80038e6:	f8b7 3066 	ldrh.w	r3, [r7, #102]	@ 0x66
 80038ea:	4619      	mov	r1, r3
 80038ec:	4897      	ldr	r0, [pc, #604]	@ (8003b4c <aimath_q31_print_aitensor+0x298>)
 80038ee:	4790      	blx	r2
 80038f0:	4b93      	ldr	r3, [pc, #588]	@ (8003b40 <aimath_q31_print_aitensor+0x28c>)
 80038f2:	681b      	ldr	r3, [r3, #0]
 80038f4:	4896      	ldr	r0, [pc, #600]	@ (8003b50 <aimath_q31_print_aitensor+0x29c>)
 80038f6:	4798      	blx	r3
 80038f8:	4b96      	ldr	r3, [pc, #600]	@ (8003b54 <aimath_q31_print_aitensor+0x2a0>)
 80038fa:	681b      	ldr	r3, [r3, #0]
 80038fc:	6e39      	ldr	r1, [r7, #96]	@ 0x60
 80038fe:	4896      	ldr	r0, [pc, #600]	@ (8003b58 <aimath_q31_print_aitensor+0x2a4>)
 8003900:	4798      	blx	r3
 8003902:	4b8f      	ldr	r3, [pc, #572]	@ (8003b40 <aimath_q31_print_aitensor+0x28c>)
 8003904:	681b      	ldr	r3, [r3, #0]
 8003906:	4895      	ldr	r0, [pc, #596]	@ (8003b5c <aimath_q31_print_aitensor+0x2a8>)
 8003908:	4798      	blx	r3
 800390a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800390c:	791b      	ldrb	r3, [r3, #4]
 800390e:	2b01      	cmp	r3, #1
 8003910:	d167      	bne.n	80039e2 <aimath_q31_print_aitensor+0x12e>
 8003912:	2300      	movs	r3, #0
 8003914:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8003918:	e05b      	b.n	80039d2 <aimath_q31_print_aitensor+0x11e>
 800391a:	4b91      	ldr	r3, [pc, #580]	@ (8003b60 <aimath_q31_print_aitensor+0x2ac>)
 800391c:	681d      	ldr	r5, [r3, #0]
 800391e:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 8003922:	009b      	lsls	r3, r3, #2
 8003924:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8003926:	4413      	add	r3, r2
 8003928:	681b      	ldr	r3, [r3, #0]
 800392a:	17da      	asrs	r2, r3, #31
 800392c:	643b      	str	r3, [r7, #64]	@ 0x40
 800392e:	647a      	str	r2, [r7, #68]	@ 0x44
 8003930:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003932:	17da      	asrs	r2, r3, #31
 8003934:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003936:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8003938:	e9d7 ab10 	ldrd	sl, fp, [r7, #64]	@ 0x40
 800393c:	4653      	mov	r3, sl
 800393e:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8003942:	4602      	mov	r2, r0
 8003944:	1a9b      	subs	r3, r3, r2
 8003946:	633b      	str	r3, [r7, #48]	@ 0x30
 8003948:	465b      	mov	r3, fp
 800394a:	460a      	mov	r2, r1
 800394c:	eb63 0302 	sbc.w	r3, r3, r2
 8003950:	637b      	str	r3, [r7, #52]	@ 0x34
 8003952:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8003956:	f7fd fa6f 	bl	8000e38 <__aeabi_l2f>
 800395a:	ee08 0a10 	vmov	s16, r0
 800395e:	f8b7 1066 	ldrh.w	r1, [r7, #102]	@ 0x66
 8003962:	f04f 0201 	mov.w	r2, #1
 8003966:	f04f 0300 	mov.w	r3, #0
 800396a:	f1a1 0420 	sub.w	r4, r1, #32
 800396e:	f1c1 0020 	rsb	r0, r1, #32
 8003972:	fa03 f901 	lsl.w	r9, r3, r1
 8003976:	fa02 f404 	lsl.w	r4, r2, r4
 800397a:	ea49 0904 	orr.w	r9, r9, r4
 800397e:	fa22 f000 	lsr.w	r0, r2, r0
 8003982:	ea49 0900 	orr.w	r9, r9, r0
 8003986:	fa02 f801 	lsl.w	r8, r2, r1
 800398a:	4640      	mov	r0, r8
 800398c:	4649      	mov	r1, r9
 800398e:	f7fd fa53 	bl	8000e38 <__aeabi_l2f>
 8003992:	ee07 0a10 	vmov	s14, r0
 8003996:	eec8 7a07 	vdiv.f32	s15, s16, s14
 800399a:	eeb0 0a67 	vmov.f32	s0, s15
 800399e:	4871      	ldr	r0, [pc, #452]	@ (8003b64 <aimath_q31_print_aitensor+0x2b0>)
 80039a0:	47a8      	blx	r5
 80039a2:	4b67      	ldr	r3, [pc, #412]	@ (8003b40 <aimath_q31_print_aitensor+0x28c>)
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	4870      	ldr	r0, [pc, #448]	@ (8003b68 <aimath_q31_print_aitensor+0x2b4>)
 80039a8:	4798      	blx	r3
 80039aa:	4b6a      	ldr	r3, [pc, #424]	@ (8003b54 <aimath_q31_print_aitensor+0x2a0>)
 80039ac:	681b      	ldr	r3, [r3, #0]
 80039ae:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 80039b2:	0092      	lsls	r2, r2, #2
 80039b4:	6df9      	ldr	r1, [r7, #92]	@ 0x5c
 80039b6:	440a      	add	r2, r1
 80039b8:	6812      	ldr	r2, [r2, #0]
 80039ba:	4611      	mov	r1, r2
 80039bc:	486b      	ldr	r0, [pc, #428]	@ (8003b6c <aimath_q31_print_aitensor+0x2b8>)
 80039be:	4798      	blx	r3
 80039c0:	4b5f      	ldr	r3, [pc, #380]	@ (8003b40 <aimath_q31_print_aitensor+0x28c>)
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	486a      	ldr	r0, [pc, #424]	@ (8003b70 <aimath_q31_print_aitensor+0x2bc>)
 80039c6:	4798      	blx	r3
 80039c8:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 80039cc:	3301      	adds	r3, #1
 80039ce:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 80039d2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80039d4:	689b      	ldr	r3, [r3, #8]
 80039d6:	881b      	ldrh	r3, [r3, #0]
 80039d8:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 80039dc:	429a      	cmp	r2, r3
 80039de:	d39c      	bcc.n	800391a <aimath_q31_print_aitensor+0x66>
 80039e0:	e19a      	b.n	8003d18 <aimath_q31_print_aitensor+0x464>
 80039e2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80039e4:	791b      	ldrb	r3, [r3, #4]
 80039e6:	2b02      	cmp	r3, #2
 80039e8:	f040 8094 	bne.w	8003b14 <aimath_q31_print_aitensor+0x260>
 80039ec:	2300      	movs	r3, #0
 80039ee:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 80039f2:	e086      	b.n	8003b02 <aimath_q31_print_aitensor+0x24e>
 80039f4:	2300      	movs	r3, #0
 80039f6:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 80039fa:	e071      	b.n	8003ae0 <aimath_q31_print_aitensor+0x22c>
 80039fc:	4b58      	ldr	r3, [pc, #352]	@ (8003b60 <aimath_q31_print_aitensor+0x2ac>)
 80039fe:	681d      	ldr	r5, [r3, #0]
 8003a00:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 8003a04:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8003a06:	6892      	ldr	r2, [r2, #8]
 8003a08:	3202      	adds	r2, #2
 8003a0a:	8812      	ldrh	r2, [r2, #0]
 8003a0c:	fb03 f202 	mul.w	r2, r3, r2
 8003a10:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 8003a14:	4413      	add	r3, r2
 8003a16:	009b      	lsls	r3, r3, #2
 8003a18:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8003a1a:	4413      	add	r3, r2
 8003a1c:	681b      	ldr	r3, [r3, #0]
 8003a1e:	17da      	asrs	r2, r3, #31
 8003a20:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003a22:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003a24:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003a26:	17da      	asrs	r2, r3, #31
 8003a28:	623b      	str	r3, [r7, #32]
 8003a2a:	627a      	str	r2, [r7, #36]	@ 0x24
 8003a2c:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 8003a30:	4643      	mov	r3, r8
 8003a32:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8003a36:	4602      	mov	r2, r0
 8003a38:	1a9b      	subs	r3, r3, r2
 8003a3a:	61bb      	str	r3, [r7, #24]
 8003a3c:	464b      	mov	r3, r9
 8003a3e:	460a      	mov	r2, r1
 8003a40:	eb63 0302 	sbc.w	r3, r3, r2
 8003a44:	61fb      	str	r3, [r7, #28]
 8003a46:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8003a4a:	f7fd f9f5 	bl	8000e38 <__aeabi_l2f>
 8003a4e:	ee08 0a10 	vmov	s16, r0
 8003a52:	f8b7 1066 	ldrh.w	r1, [r7, #102]	@ 0x66
 8003a56:	f04f 0201 	mov.w	r2, #1
 8003a5a:	f04f 0300 	mov.w	r3, #0
 8003a5e:	f1a1 0420 	sub.w	r4, r1, #32
 8003a62:	f1c1 0020 	rsb	r0, r1, #32
 8003a66:	fa03 f601 	lsl.w	r6, r3, r1
 8003a6a:	64fe      	str	r6, [r7, #76]	@ 0x4c
 8003a6c:	fa02 f404 	lsl.w	r4, r2, r4
 8003a70:	6cfe      	ldr	r6, [r7, #76]	@ 0x4c
 8003a72:	4326      	orrs	r6, r4
 8003a74:	64fe      	str	r6, [r7, #76]	@ 0x4c
 8003a76:	fa22 f000 	lsr.w	r0, r2, r0
 8003a7a:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
 8003a7c:	4304      	orrs	r4, r0
 8003a7e:	64fc      	str	r4, [r7, #76]	@ 0x4c
 8003a80:	fa02 f301 	lsl.w	r3, r2, r1
 8003a84:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003a86:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8003a8a:	f7fd f9d5 	bl	8000e38 <__aeabi_l2f>
 8003a8e:	ee07 0a10 	vmov	s14, r0
 8003a92:	eec8 7a07 	vdiv.f32	s15, s16, s14
 8003a96:	eeb0 0a67 	vmov.f32	s0, s15
 8003a9a:	4832      	ldr	r0, [pc, #200]	@ (8003b64 <aimath_q31_print_aitensor+0x2b0>)
 8003a9c:	47a8      	blx	r5
 8003a9e:	4b28      	ldr	r3, [pc, #160]	@ (8003b40 <aimath_q31_print_aitensor+0x28c>)
 8003aa0:	681b      	ldr	r3, [r3, #0]
 8003aa2:	4831      	ldr	r0, [pc, #196]	@ (8003b68 <aimath_q31_print_aitensor+0x2b4>)
 8003aa4:	4798      	blx	r3
 8003aa6:	4b2b      	ldr	r3, [pc, #172]	@ (8003b54 <aimath_q31_print_aitensor+0x2a0>)
 8003aa8:	681b      	ldr	r3, [r3, #0]
 8003aaa:	f8b7 206e 	ldrh.w	r2, [r7, #110]	@ 0x6e
 8003aae:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8003ab0:	6889      	ldr	r1, [r1, #8]
 8003ab2:	3102      	adds	r1, #2
 8003ab4:	8809      	ldrh	r1, [r1, #0]
 8003ab6:	fb02 f101 	mul.w	r1, r2, r1
 8003aba:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 8003abe:	440a      	add	r2, r1
 8003ac0:	0092      	lsls	r2, r2, #2
 8003ac2:	6df9      	ldr	r1, [r7, #92]	@ 0x5c
 8003ac4:	440a      	add	r2, r1
 8003ac6:	6812      	ldr	r2, [r2, #0]
 8003ac8:	4611      	mov	r1, r2
 8003aca:	4828      	ldr	r0, [pc, #160]	@ (8003b6c <aimath_q31_print_aitensor+0x2b8>)
 8003acc:	4798      	blx	r3
 8003ace:	4b1c      	ldr	r3, [pc, #112]	@ (8003b40 <aimath_q31_print_aitensor+0x28c>)
 8003ad0:	681b      	ldr	r3, [r3, #0]
 8003ad2:	4827      	ldr	r0, [pc, #156]	@ (8003b70 <aimath_q31_print_aitensor+0x2bc>)
 8003ad4:	4798      	blx	r3
 8003ad6:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 8003ada:	3301      	adds	r3, #1
 8003adc:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8003ae0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003ae2:	689b      	ldr	r3, [r3, #8]
 8003ae4:	3302      	adds	r3, #2
 8003ae6:	881b      	ldrh	r3, [r3, #0]
 8003ae8:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 8003aec:	429a      	cmp	r2, r3
 8003aee:	d385      	bcc.n	80039fc <aimath_q31_print_aitensor+0x148>
 8003af0:	4b13      	ldr	r3, [pc, #76]	@ (8003b40 <aimath_q31_print_aitensor+0x28c>)
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	481f      	ldr	r0, [pc, #124]	@ (8003b74 <aimath_q31_print_aitensor+0x2c0>)
 8003af6:	4798      	blx	r3
 8003af8:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 8003afc:	3301      	adds	r3, #1
 8003afe:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 8003b02:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003b04:	689b      	ldr	r3, [r3, #8]
 8003b06:	881b      	ldrh	r3, [r3, #0]
 8003b08:	f8b7 206e 	ldrh.w	r2, [r7, #110]	@ 0x6e
 8003b0c:	429a      	cmp	r2, r3
 8003b0e:	f4ff af71 	bcc.w	80039f4 <aimath_q31_print_aitensor+0x140>
 8003b12:	e101      	b.n	8003d18 <aimath_q31_print_aitensor+0x464>
 8003b14:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003b16:	791b      	ldrb	r3, [r3, #4]
 8003b18:	2b04      	cmp	r3, #4
 8003b1a:	f040 80fd 	bne.w	8003d18 <aimath_q31_print_aitensor+0x464>
 8003b1e:	2300      	movs	r3, #0
 8003b20:	f8a7 3068 	strh.w	r3, [r7, #104]	@ 0x68
 8003b24:	e0f0      	b.n	8003d08 <aimath_q31_print_aitensor+0x454>
 8003b26:	2300      	movs	r3, #0
 8003b28:	f8a7 306a 	strh.w	r3, [r7, #106]	@ 0x6a
 8003b2c:	e0da      	b.n	8003ce4 <aimath_q31_print_aitensor+0x430>
 8003b2e:	2300      	movs	r3, #0
 8003b30:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 8003b34:	e0c4      	b.n	8003cc0 <aimath_q31_print_aitensor+0x40c>
 8003b36:	2300      	movs	r3, #0
 8003b38:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8003b3c:	e0ae      	b.n	8003c9c <aimath_q31_print_aitensor+0x3e8>
 8003b3e:	bf00      	nop
 8003b40:	20000548 	.word	0x20000548
 8003b44:	0800c780 	.word	0x0800c780
 8003b48:	20000550 	.word	0x20000550
 8003b4c:	0800bf30 	.word	0x0800bf30
 8003b50:	0800c78c 	.word	0x0800c78c
 8003b54:	20000554 	.word	0x20000554
 8003b58:	0800bf34 	.word	0x0800bf34
 8003b5c:	0800c794 	.word	0x0800c794
 8003b60:	20000558 	.word	0x20000558
 8003b64:	0800bf38 	.word	0x0800bf38
 8003b68:	0800c774 	.word	0x0800c774
 8003b6c:	0800bf40 	.word	0x0800bf40
 8003b70:	0800c778 	.word	0x0800c778
 8003b74:	0800c77c 	.word	0x0800c77c
 8003b78:	4b6d      	ldr	r3, [pc, #436]	@ (8003d30 <aimath_q31_print_aitensor+0x47c>)
 8003b7a:	681d      	ldr	r5, [r3, #0]
 8003b7c:	f8b7 3068 	ldrh.w	r3, [r7, #104]	@ 0x68
 8003b80:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8003b82:	6892      	ldr	r2, [r2, #8]
 8003b84:	3202      	adds	r2, #2
 8003b86:	8812      	ldrh	r2, [r2, #0]
 8003b88:	fb03 f202 	mul.w	r2, r3, r2
 8003b8c:	f8b7 306a 	ldrh.w	r3, [r7, #106]	@ 0x6a
 8003b90:	4413      	add	r3, r2
 8003b92:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8003b94:	6892      	ldr	r2, [r2, #8]
 8003b96:	3204      	adds	r2, #4
 8003b98:	8812      	ldrh	r2, [r2, #0]
 8003b9a:	fb03 f202 	mul.w	r2, r3, r2
 8003b9e:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 8003ba2:	4413      	add	r3, r2
 8003ba4:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 8003ba6:	6892      	ldr	r2, [r2, #8]
 8003ba8:	3206      	adds	r2, #6
 8003baa:	8812      	ldrh	r2, [r2, #0]
 8003bac:	fb03 f202 	mul.w	r2, r3, r2
 8003bb0:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 8003bb4:	4413      	add	r3, r2
 8003bb6:	009b      	lsls	r3, r3, #2
 8003bb8:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8003bba:	4413      	add	r3, r2
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	17da      	asrs	r2, r3, #31
 8003bc0:	613b      	str	r3, [r7, #16]
 8003bc2:	617a      	str	r2, [r7, #20]
 8003bc4:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003bc6:	17da      	asrs	r2, r3, #31
 8003bc8:	60bb      	str	r3, [r7, #8]
 8003bca:	60fa      	str	r2, [r7, #12]
 8003bcc:	e9d7 8904 	ldrd	r8, r9, [r7, #16]
 8003bd0:	4643      	mov	r3, r8
 8003bd2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8003bd6:	4602      	mov	r2, r0
 8003bd8:	1a9b      	subs	r3, r3, r2
 8003bda:	603b      	str	r3, [r7, #0]
 8003bdc:	464b      	mov	r3, r9
 8003bde:	460a      	mov	r2, r1
 8003be0:	eb63 0302 	sbc.w	r3, r3, r2
 8003be4:	607b      	str	r3, [r7, #4]
 8003be6:	e9d7 0100 	ldrd	r0, r1, [r7]
 8003bea:	f7fd f925 	bl	8000e38 <__aeabi_l2f>
 8003bee:	ee08 0a10 	vmov	s16, r0
 8003bf2:	f8b7 1066 	ldrh.w	r1, [r7, #102]	@ 0x66
 8003bf6:	f04f 0201 	mov.w	r2, #1
 8003bfa:	f04f 0300 	mov.w	r3, #0
 8003bfe:	f1a1 0420 	sub.w	r4, r1, #32
 8003c02:	f1c1 0020 	rsb	r0, r1, #32
 8003c06:	fa03 fb01 	lsl.w	fp, r3, r1
 8003c0a:	fa02 f404 	lsl.w	r4, r2, r4
 8003c0e:	ea4b 0b04 	orr.w	fp, fp, r4
 8003c12:	fa22 f000 	lsr.w	r0, r2, r0
 8003c16:	ea4b 0b00 	orr.w	fp, fp, r0
 8003c1a:	fa02 fa01 	lsl.w	sl, r2, r1
 8003c1e:	4650      	mov	r0, sl
 8003c20:	4659      	mov	r1, fp
 8003c22:	f7fd f909 	bl	8000e38 <__aeabi_l2f>
 8003c26:	ee07 0a10 	vmov	s14, r0
 8003c2a:	eec8 7a07 	vdiv.f32	s15, s16, s14
 8003c2e:	eeb0 0a67 	vmov.f32	s0, s15
 8003c32:	4840      	ldr	r0, [pc, #256]	@ (8003d34 <aimath_q31_print_aitensor+0x480>)
 8003c34:	47a8      	blx	r5
 8003c36:	4b40      	ldr	r3, [pc, #256]	@ (8003d38 <aimath_q31_print_aitensor+0x484>)
 8003c38:	681b      	ldr	r3, [r3, #0]
 8003c3a:	4840      	ldr	r0, [pc, #256]	@ (8003d3c <aimath_q31_print_aitensor+0x488>)
 8003c3c:	4798      	blx	r3
 8003c3e:	4b40      	ldr	r3, [pc, #256]	@ (8003d40 <aimath_q31_print_aitensor+0x48c>)
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	f8b7 2068 	ldrh.w	r2, [r7, #104]	@ 0x68
 8003c46:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8003c48:	6889      	ldr	r1, [r1, #8]
 8003c4a:	3102      	adds	r1, #2
 8003c4c:	8809      	ldrh	r1, [r1, #0]
 8003c4e:	fb02 f101 	mul.w	r1, r2, r1
 8003c52:	f8b7 206a 	ldrh.w	r2, [r7, #106]	@ 0x6a
 8003c56:	440a      	add	r2, r1
 8003c58:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8003c5a:	6889      	ldr	r1, [r1, #8]
 8003c5c:	3104      	adds	r1, #4
 8003c5e:	8809      	ldrh	r1, [r1, #0]
 8003c60:	fb02 f101 	mul.w	r1, r2, r1
 8003c64:	f8b7 206e 	ldrh.w	r2, [r7, #110]	@ 0x6e
 8003c68:	440a      	add	r2, r1
 8003c6a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8003c6c:	6889      	ldr	r1, [r1, #8]
 8003c6e:	3106      	adds	r1, #6
 8003c70:	8809      	ldrh	r1, [r1, #0]
 8003c72:	fb02 f101 	mul.w	r1, r2, r1
 8003c76:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 8003c7a:	440a      	add	r2, r1
 8003c7c:	0092      	lsls	r2, r2, #2
 8003c7e:	6df9      	ldr	r1, [r7, #92]	@ 0x5c
 8003c80:	440a      	add	r2, r1
 8003c82:	6812      	ldr	r2, [r2, #0]
 8003c84:	4611      	mov	r1, r2
 8003c86:	482f      	ldr	r0, [pc, #188]	@ (8003d44 <aimath_q31_print_aitensor+0x490>)
 8003c88:	4798      	blx	r3
 8003c8a:	4b2b      	ldr	r3, [pc, #172]	@ (8003d38 <aimath_q31_print_aitensor+0x484>)
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	482e      	ldr	r0, [pc, #184]	@ (8003d48 <aimath_q31_print_aitensor+0x494>)
 8003c90:	4798      	blx	r3
 8003c92:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 8003c96:	3301      	adds	r3, #1
 8003c98:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8003c9c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003c9e:	689b      	ldr	r3, [r3, #8]
 8003ca0:	3306      	adds	r3, #6
 8003ca2:	881b      	ldrh	r3, [r3, #0]
 8003ca4:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 8003ca8:	429a      	cmp	r2, r3
 8003caa:	f4ff af65 	bcc.w	8003b78 <aimath_q31_print_aitensor+0x2c4>
 8003cae:	4b22      	ldr	r3, [pc, #136]	@ (8003d38 <aimath_q31_print_aitensor+0x484>)
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	4826      	ldr	r0, [pc, #152]	@ (8003d4c <aimath_q31_print_aitensor+0x498>)
 8003cb4:	4798      	blx	r3
 8003cb6:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 8003cba:	3301      	adds	r3, #1
 8003cbc:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 8003cc0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003cc2:	689b      	ldr	r3, [r3, #8]
 8003cc4:	3304      	adds	r3, #4
 8003cc6:	881b      	ldrh	r3, [r3, #0]
 8003cc8:	f8b7 206e 	ldrh.w	r2, [r7, #110]	@ 0x6e
 8003ccc:	429a      	cmp	r2, r3
 8003cce:	f4ff af32 	bcc.w	8003b36 <aimath_q31_print_aitensor+0x282>
 8003cd2:	4b19      	ldr	r3, [pc, #100]	@ (8003d38 <aimath_q31_print_aitensor+0x484>)
 8003cd4:	681b      	ldr	r3, [r3, #0]
 8003cd6:	481d      	ldr	r0, [pc, #116]	@ (8003d4c <aimath_q31_print_aitensor+0x498>)
 8003cd8:	4798      	blx	r3
 8003cda:	f8b7 306a 	ldrh.w	r3, [r7, #106]	@ 0x6a
 8003cde:	3301      	adds	r3, #1
 8003ce0:	f8a7 306a 	strh.w	r3, [r7, #106]	@ 0x6a
 8003ce4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003ce6:	689b      	ldr	r3, [r3, #8]
 8003ce8:	3302      	adds	r3, #2
 8003cea:	881b      	ldrh	r3, [r3, #0]
 8003cec:	f8b7 206a 	ldrh.w	r2, [r7, #106]	@ 0x6a
 8003cf0:	429a      	cmp	r2, r3
 8003cf2:	f4ff af1c 	bcc.w	8003b2e <aimath_q31_print_aitensor+0x27a>
 8003cf6:	4b10      	ldr	r3, [pc, #64]	@ (8003d38 <aimath_q31_print_aitensor+0x484>)
 8003cf8:	681b      	ldr	r3, [r3, #0]
 8003cfa:	4814      	ldr	r0, [pc, #80]	@ (8003d4c <aimath_q31_print_aitensor+0x498>)
 8003cfc:	4798      	blx	r3
 8003cfe:	f8b7 3068 	ldrh.w	r3, [r7, #104]	@ 0x68
 8003d02:	3301      	adds	r3, #1
 8003d04:	f8a7 3068 	strh.w	r3, [r7, #104]	@ 0x68
 8003d08:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003d0a:	689b      	ldr	r3, [r3, #8]
 8003d0c:	881b      	ldrh	r3, [r3, #0]
 8003d0e:	f8b7 2068 	ldrh.w	r2, [r7, #104]	@ 0x68
 8003d12:	429a      	cmp	r2, r3
 8003d14:	f4ff af07 	bcc.w	8003b26 <aimath_q31_print_aitensor+0x272>
 8003d18:	4b07      	ldr	r3, [pc, #28]	@ (8003d38 <aimath_q31_print_aitensor+0x484>)
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	480c      	ldr	r0, [pc, #48]	@ (8003d50 <aimath_q31_print_aitensor+0x49c>)
 8003d1e:	4798      	blx	r3
 8003d20:	bf00      	nop
 8003d22:	3774      	adds	r7, #116	@ 0x74
 8003d24:	46bd      	mov	sp, r7
 8003d26:	ecbd 8b02 	vpop	{d8}
 8003d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d2e:	bf00      	nop
 8003d30:	20000558 	.word	0x20000558
 8003d34:	0800bf48 	.word	0x0800bf48
 8003d38:	20000548 	.word	0x20000548
 8003d3c:	0800c774 	.word	0x0800c774
 8003d40:	20000554 	.word	0x20000554
 8003d44:	0800bf40 	.word	0x0800bf40
 8003d48:	0800c778 	.word	0x0800c778
 8003d4c:	0800c77c 	.word	0x0800c77c
 8003d50:	0800c79c 	.word	0x0800c79c

08003d54 <aimath_q31_print_aiscalar>:
 8003d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d58:	ed2d 8b02 	vpush	{d8}
 8003d5c:	b085      	sub	sp, #20
 8003d5e:	af00      	add	r7, sp, #0
 8003d60:	6078      	str	r0, [r7, #4]
 8003d62:	6879      	ldr	r1, [r7, #4]
 8003d64:	60f9      	str	r1, [r7, #12]
 8003d66:	4932      	ldr	r1, [pc, #200]	@ (8003e30 <aimath_q31_print_aiscalar+0xdc>)
 8003d68:	6809      	ldr	r1, [r1, #0]
 8003d6a:	6039      	str	r1, [r7, #0]
 8003d6c:	68f9      	ldr	r1, [r7, #12]
 8003d6e:	6809      	ldr	r1, [r1, #0]
 8003d70:	17c8      	asrs	r0, r1, #31
 8003d72:	4688      	mov	r8, r1
 8003d74:	4681      	mov	r9, r0
 8003d76:	68f9      	ldr	r1, [r7, #12]
 8003d78:	6889      	ldr	r1, [r1, #8]
 8003d7a:	17c8      	asrs	r0, r1, #31
 8003d7c:	460a      	mov	r2, r1
 8003d7e:	4603      	mov	r3, r0
 8003d80:	ebb8 0a02 	subs.w	sl, r8, r2
 8003d84:	eb69 0b03 	sbc.w	fp, r9, r3
 8003d88:	4650      	mov	r0, sl
 8003d8a:	4659      	mov	r1, fp
 8003d8c:	f7fd f854 	bl	8000e38 <__aeabi_l2f>
 8003d90:	ee08 0a10 	vmov	s16, r0
 8003d94:	68fb      	ldr	r3, [r7, #12]
 8003d96:	889b      	ldrh	r3, [r3, #4]
 8003d98:	4619      	mov	r1, r3
 8003d9a:	f04f 0201 	mov.w	r2, #1
 8003d9e:	f04f 0300 	mov.w	r3, #0
 8003da2:	f1a1 0620 	sub.w	r6, r1, #32
 8003da6:	f1c1 0020 	rsb	r0, r1, #32
 8003daa:	fa03 f501 	lsl.w	r5, r3, r1
 8003dae:	fa02 f606 	lsl.w	r6, r2, r6
 8003db2:	4335      	orrs	r5, r6
 8003db4:	fa22 f000 	lsr.w	r0, r2, r0
 8003db8:	4305      	orrs	r5, r0
 8003dba:	fa02 f401 	lsl.w	r4, r2, r1
 8003dbe:	4620      	mov	r0, r4
 8003dc0:	4629      	mov	r1, r5
 8003dc2:	f7fd f839 	bl	8000e38 <__aeabi_l2f>
 8003dc6:	ee07 0a10 	vmov	s14, r0
 8003dca:	eec8 7a07 	vdiv.f32	s15, s16, s14
 8003dce:	eeb0 0a67 	vmov.f32	s0, s15
 8003dd2:	4818      	ldr	r0, [pc, #96]	@ (8003e34 <aimath_q31_print_aiscalar+0xe0>)
 8003dd4:	6839      	ldr	r1, [r7, #0]
 8003dd6:	4788      	blx	r1
 8003dd8:	4b17      	ldr	r3, [pc, #92]	@ (8003e38 <aimath_q31_print_aiscalar+0xe4>)
 8003dda:	681b      	ldr	r3, [r3, #0]
 8003ddc:	4817      	ldr	r0, [pc, #92]	@ (8003e3c <aimath_q31_print_aiscalar+0xe8>)
 8003dde:	4798      	blx	r3
 8003de0:	4b17      	ldr	r3, [pc, #92]	@ (8003e40 <aimath_q31_print_aiscalar+0xec>)
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	68fa      	ldr	r2, [r7, #12]
 8003de6:	6812      	ldr	r2, [r2, #0]
 8003de8:	4611      	mov	r1, r2
 8003dea:	4816      	ldr	r0, [pc, #88]	@ (8003e44 <aimath_q31_print_aiscalar+0xf0>)
 8003dec:	4798      	blx	r3
 8003dee:	4b12      	ldr	r3, [pc, #72]	@ (8003e38 <aimath_q31_print_aiscalar+0xe4>)
 8003df0:	681b      	ldr	r3, [r3, #0]
 8003df2:	4815      	ldr	r0, [pc, #84]	@ (8003e48 <aimath_q31_print_aiscalar+0xf4>)
 8003df4:	4798      	blx	r3
 8003df6:	4b15      	ldr	r3, [pc, #84]	@ (8003e4c <aimath_q31_print_aiscalar+0xf8>)
 8003df8:	681b      	ldr	r3, [r3, #0]
 8003dfa:	68fa      	ldr	r2, [r7, #12]
 8003dfc:	8892      	ldrh	r2, [r2, #4]
 8003dfe:	4611      	mov	r1, r2
 8003e00:	4813      	ldr	r0, [pc, #76]	@ (8003e50 <aimath_q31_print_aiscalar+0xfc>)
 8003e02:	4798      	blx	r3
 8003e04:	4b0c      	ldr	r3, [pc, #48]	@ (8003e38 <aimath_q31_print_aiscalar+0xe4>)
 8003e06:	681b      	ldr	r3, [r3, #0]
 8003e08:	4812      	ldr	r0, [pc, #72]	@ (8003e54 <aimath_q31_print_aiscalar+0x100>)
 8003e0a:	4798      	blx	r3
 8003e0c:	4b0c      	ldr	r3, [pc, #48]	@ (8003e40 <aimath_q31_print_aiscalar+0xec>)
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	68fa      	ldr	r2, [r7, #12]
 8003e12:	6892      	ldr	r2, [r2, #8]
 8003e14:	4611      	mov	r1, r2
 8003e16:	480b      	ldr	r0, [pc, #44]	@ (8003e44 <aimath_q31_print_aiscalar+0xf0>)
 8003e18:	4798      	blx	r3
 8003e1a:	4b07      	ldr	r3, [pc, #28]	@ (8003e38 <aimath_q31_print_aiscalar+0xe4>)
 8003e1c:	681b      	ldr	r3, [r3, #0]
 8003e1e:	480e      	ldr	r0, [pc, #56]	@ (8003e58 <aimath_q31_print_aiscalar+0x104>)
 8003e20:	4798      	blx	r3
 8003e22:	bf00      	nop
 8003e24:	3714      	adds	r7, #20
 8003e26:	46bd      	mov	sp, r7
 8003e28:	ecbd 8b02 	vpop	{d8}
 8003e2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e30:	20000558 	.word	0x20000558
 8003e34:	0800bf50 	.word	0x0800bf50
 8003e38:	20000548 	.word	0x20000548
 8003e3c:	0800c7a0 	.word	0x0800c7a0
 8003e40:	20000554 	.word	0x20000554
 8003e44:	0800bf34 	.word	0x0800bf34
 8003e48:	0800c7ac 	.word	0x0800c7ac
 8003e4c:	20000550 	.word	0x20000550
 8003e50:	0800bf30 	.word	0x0800bf30
 8003e54:	0800c7b4 	.word	0x0800c7b4
 8003e58:	0800c7bc 	.word	0x0800c7bc

08003e5c <aimath_q7_print_aitensor>:
 8003e5c:	b580      	push	{r7, lr}
 8003e5e:	b086      	sub	sp, #24
 8003e60:	af00      	add	r7, sp, #0
 8003e62:	6078      	str	r0, [r7, #4]
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	68db      	ldr	r3, [r3, #12]
 8003e68:	881b      	ldrh	r3, [r3, #0]
 8003e6a:	81fb      	strh	r3, [r7, #14]
 8003e6c:	687b      	ldr	r3, [r7, #4]
 8003e6e:	68db      	ldr	r3, [r3, #12]
 8003e70:	789b      	ldrb	r3, [r3, #2]
 8003e72:	737b      	strb	r3, [r7, #13]
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	691b      	ldr	r3, [r3, #16]
 8003e78:	60bb      	str	r3, [r7, #8]
 8003e7a:	4b66      	ldr	r3, [pc, #408]	@ (8004014 <aimath_q7_print_aitensor+0x1b8>)
 8003e7c:	681b      	ldr	r3, [r3, #0]
 8003e7e:	4866      	ldr	r0, [pc, #408]	@ (8004018 <aimath_q7_print_aitensor+0x1bc>)
 8003e80:	4798      	blx	r3
 8003e82:	4b66      	ldr	r3, [pc, #408]	@ (800401c <aimath_q7_print_aitensor+0x1c0>)
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	89fa      	ldrh	r2, [r7, #14]
 8003e88:	4611      	mov	r1, r2
 8003e8a:	4865      	ldr	r0, [pc, #404]	@ (8004020 <aimath_q7_print_aitensor+0x1c4>)
 8003e8c:	4798      	blx	r3
 8003e8e:	4b61      	ldr	r3, [pc, #388]	@ (8004014 <aimath_q7_print_aitensor+0x1b8>)
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	4864      	ldr	r0, [pc, #400]	@ (8004024 <aimath_q7_print_aitensor+0x1c8>)
 8003e94:	4798      	blx	r3
 8003e96:	4b64      	ldr	r3, [pc, #400]	@ (8004028 <aimath_q7_print_aitensor+0x1cc>)
 8003e98:	681b      	ldr	r3, [r3, #0]
 8003e9a:	f997 200d 	ldrsb.w	r2, [r7, #13]
 8003e9e:	4611      	mov	r1, r2
 8003ea0:	4862      	ldr	r0, [pc, #392]	@ (800402c <aimath_q7_print_aitensor+0x1d0>)
 8003ea2:	4798      	blx	r3
 8003ea4:	4b5b      	ldr	r3, [pc, #364]	@ (8004014 <aimath_q7_print_aitensor+0x1b8>)
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	4861      	ldr	r0, [pc, #388]	@ (8004030 <aimath_q7_print_aitensor+0x1d4>)
 8003eaa:	4798      	blx	r3
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	791b      	ldrb	r3, [r3, #4]
 8003eb0:	2b01      	cmp	r3, #1
 8003eb2:	d13b      	bne.n	8003f2c <aimath_q7_print_aitensor+0xd0>
 8003eb4:	2300      	movs	r3, #0
 8003eb6:	82bb      	strh	r3, [r7, #20]
 8003eb8:	e031      	b.n	8003f1e <aimath_q7_print_aitensor+0xc2>
 8003eba:	4b5e      	ldr	r3, [pc, #376]	@ (8004034 <aimath_q7_print_aitensor+0x1d8>)
 8003ebc:	681b      	ldr	r3, [r3, #0]
 8003ebe:	8aba      	ldrh	r2, [r7, #20]
 8003ec0:	68b9      	ldr	r1, [r7, #8]
 8003ec2:	440a      	add	r2, r1
 8003ec4:	f992 2000 	ldrsb.w	r2, [r2]
 8003ec8:	4611      	mov	r1, r2
 8003eca:	f997 200d 	ldrsb.w	r2, [r7, #13]
 8003ece:	1a8a      	subs	r2, r1, r2
 8003ed0:	ee07 2a90 	vmov	s15, r2
 8003ed4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003ed8:	89fa      	ldrh	r2, [r7, #14]
 8003eda:	2101      	movs	r1, #1
 8003edc:	fa01 f202 	lsl.w	r2, r1, r2
 8003ee0:	ee07 2a90 	vmov	s15, r2
 8003ee4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003ee8:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8003eec:	eeb0 0a66 	vmov.f32	s0, s13
 8003ef0:	4851      	ldr	r0, [pc, #324]	@ (8004038 <aimath_q7_print_aitensor+0x1dc>)
 8003ef2:	4798      	blx	r3
 8003ef4:	4b47      	ldr	r3, [pc, #284]	@ (8004014 <aimath_q7_print_aitensor+0x1b8>)
 8003ef6:	681b      	ldr	r3, [r3, #0]
 8003ef8:	4850      	ldr	r0, [pc, #320]	@ (800403c <aimath_q7_print_aitensor+0x1e0>)
 8003efa:	4798      	blx	r3
 8003efc:	4b4a      	ldr	r3, [pc, #296]	@ (8004028 <aimath_q7_print_aitensor+0x1cc>)
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	8aba      	ldrh	r2, [r7, #20]
 8003f02:	68b9      	ldr	r1, [r7, #8]
 8003f04:	440a      	add	r2, r1
 8003f06:	f992 2000 	ldrsb.w	r2, [r2]
 8003f0a:	4611      	mov	r1, r2
 8003f0c:	484c      	ldr	r0, [pc, #304]	@ (8004040 <aimath_q7_print_aitensor+0x1e4>)
 8003f0e:	4798      	blx	r3
 8003f10:	4b40      	ldr	r3, [pc, #256]	@ (8004014 <aimath_q7_print_aitensor+0x1b8>)
 8003f12:	681b      	ldr	r3, [r3, #0]
 8003f14:	484b      	ldr	r0, [pc, #300]	@ (8004044 <aimath_q7_print_aitensor+0x1e8>)
 8003f16:	4798      	blx	r3
 8003f18:	8abb      	ldrh	r3, [r7, #20]
 8003f1a:	3301      	adds	r3, #1
 8003f1c:	82bb      	strh	r3, [r7, #20]
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	689b      	ldr	r3, [r3, #8]
 8003f22:	881b      	ldrh	r3, [r3, #0]
 8003f24:	8aba      	ldrh	r2, [r7, #20]
 8003f26:	429a      	cmp	r2, r3
 8003f28:	d3c7      	bcc.n	8003eba <aimath_q7_print_aitensor+0x5e>
 8003f2a:	e126      	b.n	800417a <aimath_q7_print_aitensor+0x31e>
 8003f2c:	687b      	ldr	r3, [r7, #4]
 8003f2e:	791b      	ldrb	r3, [r3, #4]
 8003f30:	2b02      	cmp	r3, #2
 8003f32:	d15e      	bne.n	8003ff2 <aimath_q7_print_aitensor+0x196>
 8003f34:	2300      	movs	r3, #0
 8003f36:	82fb      	strh	r3, [r7, #22]
 8003f38:	e054      	b.n	8003fe4 <aimath_q7_print_aitensor+0x188>
 8003f3a:	2300      	movs	r3, #0
 8003f3c:	82bb      	strh	r3, [r7, #20]
 8003f3e:	e043      	b.n	8003fc8 <aimath_q7_print_aitensor+0x16c>
 8003f40:	4b3c      	ldr	r3, [pc, #240]	@ (8004034 <aimath_q7_print_aitensor+0x1d8>)
 8003f42:	681b      	ldr	r3, [r3, #0]
 8003f44:	8afa      	ldrh	r2, [r7, #22]
 8003f46:	6879      	ldr	r1, [r7, #4]
 8003f48:	6889      	ldr	r1, [r1, #8]
 8003f4a:	3102      	adds	r1, #2
 8003f4c:	8809      	ldrh	r1, [r1, #0]
 8003f4e:	fb02 f101 	mul.w	r1, r2, r1
 8003f52:	8aba      	ldrh	r2, [r7, #20]
 8003f54:	440a      	add	r2, r1
 8003f56:	4611      	mov	r1, r2
 8003f58:	68ba      	ldr	r2, [r7, #8]
 8003f5a:	440a      	add	r2, r1
 8003f5c:	f992 2000 	ldrsb.w	r2, [r2]
 8003f60:	4611      	mov	r1, r2
 8003f62:	f997 200d 	ldrsb.w	r2, [r7, #13]
 8003f66:	1a8a      	subs	r2, r1, r2
 8003f68:	ee07 2a90 	vmov	s15, r2
 8003f6c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003f70:	89fa      	ldrh	r2, [r7, #14]
 8003f72:	2101      	movs	r1, #1
 8003f74:	fa01 f202 	lsl.w	r2, r1, r2
 8003f78:	ee07 2a90 	vmov	s15, r2
 8003f7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003f80:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8003f84:	eeb0 0a66 	vmov.f32	s0, s13
 8003f88:	482b      	ldr	r0, [pc, #172]	@ (8004038 <aimath_q7_print_aitensor+0x1dc>)
 8003f8a:	4798      	blx	r3
 8003f8c:	4b21      	ldr	r3, [pc, #132]	@ (8004014 <aimath_q7_print_aitensor+0x1b8>)
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	482a      	ldr	r0, [pc, #168]	@ (800403c <aimath_q7_print_aitensor+0x1e0>)
 8003f92:	4798      	blx	r3
 8003f94:	4b24      	ldr	r3, [pc, #144]	@ (8004028 <aimath_q7_print_aitensor+0x1cc>)
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	8afa      	ldrh	r2, [r7, #22]
 8003f9a:	6879      	ldr	r1, [r7, #4]
 8003f9c:	6889      	ldr	r1, [r1, #8]
 8003f9e:	3102      	adds	r1, #2
 8003fa0:	8809      	ldrh	r1, [r1, #0]
 8003fa2:	fb02 f101 	mul.w	r1, r2, r1
 8003fa6:	8aba      	ldrh	r2, [r7, #20]
 8003fa8:	440a      	add	r2, r1
 8003faa:	4611      	mov	r1, r2
 8003fac:	68ba      	ldr	r2, [r7, #8]
 8003fae:	440a      	add	r2, r1
 8003fb0:	f992 2000 	ldrsb.w	r2, [r2]
 8003fb4:	4611      	mov	r1, r2
 8003fb6:	4822      	ldr	r0, [pc, #136]	@ (8004040 <aimath_q7_print_aitensor+0x1e4>)
 8003fb8:	4798      	blx	r3
 8003fba:	4b16      	ldr	r3, [pc, #88]	@ (8004014 <aimath_q7_print_aitensor+0x1b8>)
 8003fbc:	681b      	ldr	r3, [r3, #0]
 8003fbe:	4821      	ldr	r0, [pc, #132]	@ (8004044 <aimath_q7_print_aitensor+0x1e8>)
 8003fc0:	4798      	blx	r3
 8003fc2:	8abb      	ldrh	r3, [r7, #20]
 8003fc4:	3301      	adds	r3, #1
 8003fc6:	82bb      	strh	r3, [r7, #20]
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	689b      	ldr	r3, [r3, #8]
 8003fcc:	3302      	adds	r3, #2
 8003fce:	881b      	ldrh	r3, [r3, #0]
 8003fd0:	8aba      	ldrh	r2, [r7, #20]
 8003fd2:	429a      	cmp	r2, r3
 8003fd4:	d3b4      	bcc.n	8003f40 <aimath_q7_print_aitensor+0xe4>
 8003fd6:	4b0f      	ldr	r3, [pc, #60]	@ (8004014 <aimath_q7_print_aitensor+0x1b8>)
 8003fd8:	681b      	ldr	r3, [r3, #0]
 8003fda:	481b      	ldr	r0, [pc, #108]	@ (8004048 <aimath_q7_print_aitensor+0x1ec>)
 8003fdc:	4798      	blx	r3
 8003fde:	8afb      	ldrh	r3, [r7, #22]
 8003fe0:	3301      	adds	r3, #1
 8003fe2:	82fb      	strh	r3, [r7, #22]
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	689b      	ldr	r3, [r3, #8]
 8003fe8:	881b      	ldrh	r3, [r3, #0]
 8003fea:	8afa      	ldrh	r2, [r7, #22]
 8003fec:	429a      	cmp	r2, r3
 8003fee:	d3a4      	bcc.n	8003f3a <aimath_q7_print_aitensor+0xde>
 8003ff0:	e0c3      	b.n	800417a <aimath_q7_print_aitensor+0x31e>
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	791b      	ldrb	r3, [r3, #4]
 8003ff6:	2b04      	cmp	r3, #4
 8003ff8:	f040 80bf 	bne.w	800417a <aimath_q7_print_aitensor+0x31e>
 8003ffc:	2300      	movs	r3, #0
 8003ffe:	823b      	strh	r3, [r7, #16]
 8004000:	e0b4      	b.n	800416c <aimath_q7_print_aitensor+0x310>
 8004002:	2300      	movs	r3, #0
 8004004:	827b      	strh	r3, [r7, #18]
 8004006:	e0a2      	b.n	800414e <aimath_q7_print_aitensor+0x2f2>
 8004008:	2300      	movs	r3, #0
 800400a:	82fb      	strh	r3, [r7, #22]
 800400c:	e090      	b.n	8004130 <aimath_q7_print_aitensor+0x2d4>
 800400e:	2300      	movs	r3, #0
 8004010:	82bb      	strh	r3, [r7, #20]
 8004012:	e07f      	b.n	8004114 <aimath_q7_print_aitensor+0x2b8>
 8004014:	20000548 	.word	0x20000548
 8004018:	0800c7e4 	.word	0x0800c7e4
 800401c:	20000550 	.word	0x20000550
 8004020:	0800bf54 	.word	0x0800bf54
 8004024:	0800c7ec 	.word	0x0800c7ec
 8004028:	2000054c 	.word	0x2000054c
 800402c:	0800bf58 	.word	0x0800bf58
 8004030:	0800c7f4 	.word	0x0800c7f4
 8004034:	20000558 	.word	0x20000558
 8004038:	0800bf5c 	.word	0x0800bf5c
 800403c:	0800c7d8 	.word	0x0800c7d8
 8004040:	0800bf64 	.word	0x0800bf64
 8004044:	0800c7dc 	.word	0x0800c7dc
 8004048:	0800c7e0 	.word	0x0800c7e0
 800404c:	4b4f      	ldr	r3, [pc, #316]	@ (800418c <aimath_q7_print_aitensor+0x330>)
 800404e:	681b      	ldr	r3, [r3, #0]
 8004050:	8a3a      	ldrh	r2, [r7, #16]
 8004052:	6879      	ldr	r1, [r7, #4]
 8004054:	6889      	ldr	r1, [r1, #8]
 8004056:	3102      	adds	r1, #2
 8004058:	8809      	ldrh	r1, [r1, #0]
 800405a:	fb02 f101 	mul.w	r1, r2, r1
 800405e:	8a7a      	ldrh	r2, [r7, #18]
 8004060:	440a      	add	r2, r1
 8004062:	6879      	ldr	r1, [r7, #4]
 8004064:	6889      	ldr	r1, [r1, #8]
 8004066:	3104      	adds	r1, #4
 8004068:	8809      	ldrh	r1, [r1, #0]
 800406a:	fb02 f101 	mul.w	r1, r2, r1
 800406e:	8afa      	ldrh	r2, [r7, #22]
 8004070:	440a      	add	r2, r1
 8004072:	6879      	ldr	r1, [r7, #4]
 8004074:	6889      	ldr	r1, [r1, #8]
 8004076:	3106      	adds	r1, #6
 8004078:	8809      	ldrh	r1, [r1, #0]
 800407a:	fb02 f101 	mul.w	r1, r2, r1
 800407e:	8aba      	ldrh	r2, [r7, #20]
 8004080:	440a      	add	r2, r1
 8004082:	4611      	mov	r1, r2
 8004084:	68ba      	ldr	r2, [r7, #8]
 8004086:	440a      	add	r2, r1
 8004088:	f992 2000 	ldrsb.w	r2, [r2]
 800408c:	4611      	mov	r1, r2
 800408e:	f997 200d 	ldrsb.w	r2, [r7, #13]
 8004092:	1a8a      	subs	r2, r1, r2
 8004094:	ee07 2a90 	vmov	s15, r2
 8004098:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800409c:	89fa      	ldrh	r2, [r7, #14]
 800409e:	2101      	movs	r1, #1
 80040a0:	fa01 f202 	lsl.w	r2, r1, r2
 80040a4:	ee07 2a90 	vmov	s15, r2
 80040a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80040ac:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80040b0:	eeb0 0a66 	vmov.f32	s0, s13
 80040b4:	4836      	ldr	r0, [pc, #216]	@ (8004190 <aimath_q7_print_aitensor+0x334>)
 80040b6:	4798      	blx	r3
 80040b8:	4b36      	ldr	r3, [pc, #216]	@ (8004194 <aimath_q7_print_aitensor+0x338>)
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	4836      	ldr	r0, [pc, #216]	@ (8004198 <aimath_q7_print_aitensor+0x33c>)
 80040be:	4798      	blx	r3
 80040c0:	4b36      	ldr	r3, [pc, #216]	@ (800419c <aimath_q7_print_aitensor+0x340>)
 80040c2:	681b      	ldr	r3, [r3, #0]
 80040c4:	8a3a      	ldrh	r2, [r7, #16]
 80040c6:	6879      	ldr	r1, [r7, #4]
 80040c8:	6889      	ldr	r1, [r1, #8]
 80040ca:	3102      	adds	r1, #2
 80040cc:	8809      	ldrh	r1, [r1, #0]
 80040ce:	fb02 f101 	mul.w	r1, r2, r1
 80040d2:	8a7a      	ldrh	r2, [r7, #18]
 80040d4:	440a      	add	r2, r1
 80040d6:	6879      	ldr	r1, [r7, #4]
 80040d8:	6889      	ldr	r1, [r1, #8]
 80040da:	3104      	adds	r1, #4
 80040dc:	8809      	ldrh	r1, [r1, #0]
 80040de:	fb02 f101 	mul.w	r1, r2, r1
 80040e2:	8afa      	ldrh	r2, [r7, #22]
 80040e4:	440a      	add	r2, r1
 80040e6:	6879      	ldr	r1, [r7, #4]
 80040e8:	6889      	ldr	r1, [r1, #8]
 80040ea:	3106      	adds	r1, #6
 80040ec:	8809      	ldrh	r1, [r1, #0]
 80040ee:	fb02 f101 	mul.w	r1, r2, r1
 80040f2:	8aba      	ldrh	r2, [r7, #20]
 80040f4:	440a      	add	r2, r1
 80040f6:	4611      	mov	r1, r2
 80040f8:	68ba      	ldr	r2, [r7, #8]
 80040fa:	440a      	add	r2, r1
 80040fc:	f992 2000 	ldrsb.w	r2, [r2]
 8004100:	4611      	mov	r1, r2
 8004102:	4827      	ldr	r0, [pc, #156]	@ (80041a0 <aimath_q7_print_aitensor+0x344>)
 8004104:	4798      	blx	r3
 8004106:	4b23      	ldr	r3, [pc, #140]	@ (8004194 <aimath_q7_print_aitensor+0x338>)
 8004108:	681b      	ldr	r3, [r3, #0]
 800410a:	4826      	ldr	r0, [pc, #152]	@ (80041a4 <aimath_q7_print_aitensor+0x348>)
 800410c:	4798      	blx	r3
 800410e:	8abb      	ldrh	r3, [r7, #20]
 8004110:	3301      	adds	r3, #1
 8004112:	82bb      	strh	r3, [r7, #20]
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	689b      	ldr	r3, [r3, #8]
 8004118:	3306      	adds	r3, #6
 800411a:	881b      	ldrh	r3, [r3, #0]
 800411c:	8aba      	ldrh	r2, [r7, #20]
 800411e:	429a      	cmp	r2, r3
 8004120:	d394      	bcc.n	800404c <aimath_q7_print_aitensor+0x1f0>
 8004122:	4b1c      	ldr	r3, [pc, #112]	@ (8004194 <aimath_q7_print_aitensor+0x338>)
 8004124:	681b      	ldr	r3, [r3, #0]
 8004126:	4820      	ldr	r0, [pc, #128]	@ (80041a8 <aimath_q7_print_aitensor+0x34c>)
 8004128:	4798      	blx	r3
 800412a:	8afb      	ldrh	r3, [r7, #22]
 800412c:	3301      	adds	r3, #1
 800412e:	82fb      	strh	r3, [r7, #22]
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	689b      	ldr	r3, [r3, #8]
 8004134:	3304      	adds	r3, #4
 8004136:	881b      	ldrh	r3, [r3, #0]
 8004138:	8afa      	ldrh	r2, [r7, #22]
 800413a:	429a      	cmp	r2, r3
 800413c:	f4ff af67 	bcc.w	800400e <aimath_q7_print_aitensor+0x1b2>
 8004140:	4b14      	ldr	r3, [pc, #80]	@ (8004194 <aimath_q7_print_aitensor+0x338>)
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	4818      	ldr	r0, [pc, #96]	@ (80041a8 <aimath_q7_print_aitensor+0x34c>)
 8004146:	4798      	blx	r3
 8004148:	8a7b      	ldrh	r3, [r7, #18]
 800414a:	3301      	adds	r3, #1
 800414c:	827b      	strh	r3, [r7, #18]
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	689b      	ldr	r3, [r3, #8]
 8004152:	3302      	adds	r3, #2
 8004154:	881b      	ldrh	r3, [r3, #0]
 8004156:	8a7a      	ldrh	r2, [r7, #18]
 8004158:	429a      	cmp	r2, r3
 800415a:	f4ff af55 	bcc.w	8004008 <aimath_q7_print_aitensor+0x1ac>
 800415e:	4b0d      	ldr	r3, [pc, #52]	@ (8004194 <aimath_q7_print_aitensor+0x338>)
 8004160:	681b      	ldr	r3, [r3, #0]
 8004162:	4811      	ldr	r0, [pc, #68]	@ (80041a8 <aimath_q7_print_aitensor+0x34c>)
 8004164:	4798      	blx	r3
 8004166:	8a3b      	ldrh	r3, [r7, #16]
 8004168:	3301      	adds	r3, #1
 800416a:	823b      	strh	r3, [r7, #16]
 800416c:	687b      	ldr	r3, [r7, #4]
 800416e:	689b      	ldr	r3, [r3, #8]
 8004170:	881b      	ldrh	r3, [r3, #0]
 8004172:	8a3a      	ldrh	r2, [r7, #16]
 8004174:	429a      	cmp	r2, r3
 8004176:	f4ff af44 	bcc.w	8004002 <aimath_q7_print_aitensor+0x1a6>
 800417a:	4b06      	ldr	r3, [pc, #24]	@ (8004194 <aimath_q7_print_aitensor+0x338>)
 800417c:	681b      	ldr	r3, [r3, #0]
 800417e:	480b      	ldr	r0, [pc, #44]	@ (80041ac <aimath_q7_print_aitensor+0x350>)
 8004180:	4798      	blx	r3
 8004182:	bf00      	nop
 8004184:	3718      	adds	r7, #24
 8004186:	46bd      	mov	sp, r7
 8004188:	bd80      	pop	{r7, pc}
 800418a:	bf00      	nop
 800418c:	20000558 	.word	0x20000558
 8004190:	0800bf68 	.word	0x0800bf68
 8004194:	20000548 	.word	0x20000548
 8004198:	0800c7d8 	.word	0x0800c7d8
 800419c:	2000054c 	.word	0x2000054c
 80041a0:	0800bf64 	.word	0x0800bf64
 80041a4:	0800c7dc 	.word	0x0800c7dc
 80041a8:	0800c7e0 	.word	0x0800c7e0
 80041ac:	0800c7fc 	.word	0x0800c7fc

080041b0 <aimath_q7_print_aiscalar>:
 80041b0:	b580      	push	{r7, lr}
 80041b2:	b084      	sub	sp, #16
 80041b4:	af00      	add	r7, sp, #0
 80041b6:	6078      	str	r0, [r7, #4]
 80041b8:	687b      	ldr	r3, [r7, #4]
 80041ba:	60fb      	str	r3, [r7, #12]
 80041bc:	4b23      	ldr	r3, [pc, #140]	@ (800424c <aimath_q7_print_aiscalar+0x9c>)
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	68fa      	ldr	r2, [r7, #12]
 80041c2:	f992 2000 	ldrsb.w	r2, [r2]
 80041c6:	4611      	mov	r1, r2
 80041c8:	68fa      	ldr	r2, [r7, #12]
 80041ca:	f992 2004 	ldrsb.w	r2, [r2, #4]
 80041ce:	1a8a      	subs	r2, r1, r2
 80041d0:	ee07 2a90 	vmov	s15, r2
 80041d4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80041d8:	68fa      	ldr	r2, [r7, #12]
 80041da:	8852      	ldrh	r2, [r2, #2]
 80041dc:	4611      	mov	r1, r2
 80041de:	2201      	movs	r2, #1
 80041e0:	408a      	lsls	r2, r1
 80041e2:	ee07 2a90 	vmov	s15, r2
 80041e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80041ea:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80041ee:	eeb0 0a66 	vmov.f32	s0, s13
 80041f2:	4817      	ldr	r0, [pc, #92]	@ (8004250 <aimath_q7_print_aiscalar+0xa0>)
 80041f4:	4798      	blx	r3
 80041f6:	4b17      	ldr	r3, [pc, #92]	@ (8004254 <aimath_q7_print_aiscalar+0xa4>)
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	4817      	ldr	r0, [pc, #92]	@ (8004258 <aimath_q7_print_aiscalar+0xa8>)
 80041fc:	4798      	blx	r3
 80041fe:	4b17      	ldr	r3, [pc, #92]	@ (800425c <aimath_q7_print_aiscalar+0xac>)
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	68fa      	ldr	r2, [r7, #12]
 8004204:	f992 2000 	ldrsb.w	r2, [r2]
 8004208:	4611      	mov	r1, r2
 800420a:	4815      	ldr	r0, [pc, #84]	@ (8004260 <aimath_q7_print_aiscalar+0xb0>)
 800420c:	4798      	blx	r3
 800420e:	4b11      	ldr	r3, [pc, #68]	@ (8004254 <aimath_q7_print_aiscalar+0xa4>)
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	4814      	ldr	r0, [pc, #80]	@ (8004264 <aimath_q7_print_aiscalar+0xb4>)
 8004214:	4798      	blx	r3
 8004216:	4b14      	ldr	r3, [pc, #80]	@ (8004268 <aimath_q7_print_aiscalar+0xb8>)
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	68fa      	ldr	r2, [r7, #12]
 800421c:	8852      	ldrh	r2, [r2, #2]
 800421e:	4611      	mov	r1, r2
 8004220:	4812      	ldr	r0, [pc, #72]	@ (800426c <aimath_q7_print_aiscalar+0xbc>)
 8004222:	4798      	blx	r3
 8004224:	4b0b      	ldr	r3, [pc, #44]	@ (8004254 <aimath_q7_print_aiscalar+0xa4>)
 8004226:	681b      	ldr	r3, [r3, #0]
 8004228:	4811      	ldr	r0, [pc, #68]	@ (8004270 <aimath_q7_print_aiscalar+0xc0>)
 800422a:	4798      	blx	r3
 800422c:	4b0b      	ldr	r3, [pc, #44]	@ (800425c <aimath_q7_print_aiscalar+0xac>)
 800422e:	681b      	ldr	r3, [r3, #0]
 8004230:	68fa      	ldr	r2, [r7, #12]
 8004232:	f992 2004 	ldrsb.w	r2, [r2, #4]
 8004236:	4611      	mov	r1, r2
 8004238:	4809      	ldr	r0, [pc, #36]	@ (8004260 <aimath_q7_print_aiscalar+0xb0>)
 800423a:	4798      	blx	r3
 800423c:	4b05      	ldr	r3, [pc, #20]	@ (8004254 <aimath_q7_print_aiscalar+0xa4>)
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	480c      	ldr	r0, [pc, #48]	@ (8004274 <aimath_q7_print_aiscalar+0xc4>)
 8004242:	4798      	blx	r3
 8004244:	bf00      	nop
 8004246:	3710      	adds	r7, #16
 8004248:	46bd      	mov	sp, r7
 800424a:	bd80      	pop	{r7, pc}
 800424c:	20000558 	.word	0x20000558
 8004250:	0800bf70 	.word	0x0800bf70
 8004254:	20000548 	.word	0x20000548
 8004258:	0800c800 	.word	0x0800c800
 800425c:	2000054c 	.word	0x2000054c
 8004260:	0800bf58 	.word	0x0800bf58
 8004264:	0800c80c 	.word	0x0800c80c
 8004268:	20000550 	.word	0x20000550
 800426c:	0800bf54 	.word	0x0800bf54
 8004270:	0800c814 	.word	0x0800c814
 8004274:	0800c81c 	.word	0x0800c81c

08004278 <ailayer_dense_wt_q7_default>:
 8004278:	b580      	push	{r7, lr}
 800427a:	b084      	sub	sp, #16
 800427c:	af00      	add	r7, sp, #0
 800427e:	6078      	str	r0, [r7, #4]
 8004280:	6039      	str	r1, [r7, #0]
 8004282:	4b1c      	ldr	r3, [pc, #112]	@ (80042f4 <ailayer_dense_wt_q7_default+0x7c>)
 8004284:	681a      	ldr	r2, [r3, #0]
 8004286:	687b      	ldr	r3, [r7, #4]
 8004288:	61da      	str	r2, [r3, #28]
 800428a:	4b1a      	ldr	r3, [pc, #104]	@ (80042f4 <ailayer_dense_wt_q7_default+0x7c>)
 800428c:	681a      	ldr	r2, [r3, #0]
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004292:	4b18      	ldr	r3, [pc, #96]	@ (80042f4 <ailayer_dense_wt_q7_default+0x7c>)
 8004294:	681a      	ldr	r2, [r3, #0]
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800429c:	4b16      	ldr	r3, [pc, #88]	@ (80042f8 <ailayer_dense_wt_q7_default+0x80>)
 800429e:	681a      	ldr	r2, [r3, #0]
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
 80042a6:	687b      	ldr	r3, [r7, #4]
 80042a8:	2200      	movs	r2, #0
 80042aa:	635a      	str	r2, [r3, #52]	@ 0x34
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	2200      	movs	r2, #0
 80042b0:	66da      	str	r2, [r3, #108]	@ 0x6c
 80042b2:	6839      	ldr	r1, [r7, #0]
 80042b4:	6878      	ldr	r0, [r7, #4]
 80042b6:	f7fe fd2d 	bl	8002d14 <ailayer_dense>
 80042ba:	60f8      	str	r0, [r7, #12]
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80042c8:	b292      	uxth	r2, r2
 80042ca:	801a      	strh	r2, [r3, #0]
 80042cc:	683b      	ldr	r3, [r7, #0]
 80042ce:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80042d0:	687b      	ldr	r3, [r7, #4]
 80042d2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80042d6:	3302      	adds	r3, #2
 80042d8:	8852      	ldrh	r2, [r2, #2]
 80042da:	801a      	strh	r2, [r3, #0]
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	4a07      	ldr	r2, [pc, #28]	@ (80042fc <ailayer_dense_wt_q7_default+0x84>)
 80042e0:	f8c3 20d0 	str.w	r2, [r3, #208]	@ 0xd0
 80042e4:	68fb      	ldr	r3, [r7, #12]
 80042e6:	2200      	movs	r2, #0
 80042e8:	661a      	str	r2, [r3, #96]	@ 0x60
 80042ea:	68fb      	ldr	r3, [r7, #12]
 80042ec:	4618      	mov	r0, r3
 80042ee:	3710      	adds	r7, #16
 80042f0:	46bd      	mov	sp, r7
 80042f2:	bd80      	pop	{r7, pc}
 80042f4:	20000570 	.word	0x20000570
 80042f8:	2000056c 	.word	0x2000056c
 80042fc:	08004445 	.word	0x08004445

08004300 <ailayer_input_q7_default>:
 8004300:	b580      	push	{r7, lr}
 8004302:	b082      	sub	sp, #8
 8004304:	af00      	add	r7, sp, #0
 8004306:	6078      	str	r0, [r7, #4]
 8004308:	4b0a      	ldr	r3, [pc, #40]	@ (8004334 <ailayer_input_q7_default+0x34>)
 800430a:	681a      	ldr	r2, [r3, #0]
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	61da      	str	r2, [r3, #28]
 8004310:	4b08      	ldr	r3, [pc, #32]	@ (8004334 <ailayer_input_q7_default+0x34>)
 8004312:	681a      	ldr	r2, [r3, #0]
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004318:	687b      	ldr	r3, [r7, #4]
 800431a:	2200      	movs	r2, #0
 800431c:	635a      	str	r2, [r3, #52]	@ 0x34
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	2200      	movs	r2, #0
 8004322:	66da      	str	r2, [r3, #108]	@ 0x6c
 8004324:	6878      	ldr	r0, [r7, #4]
 8004326:	f7ff f861 	bl	80033ec <ailayer_input>
 800432a:	4603      	mov	r3, r0
 800432c:	4618      	mov	r0, r3
 800432e:	3708      	adds	r7, #8
 8004330:	46bd      	mov	sp, r7
 8004332:	bd80      	pop	{r7, pc}
 8004334:	20000570 	.word	0x20000570

08004338 <ailayer_relu_q7_default>:
 8004338:	b580      	push	{r7, lr}
 800433a:	b082      	sub	sp, #8
 800433c:	af00      	add	r7, sp, #0
 800433e:	6078      	str	r0, [r7, #4]
 8004340:	6039      	str	r1, [r7, #0]
 8004342:	4b11      	ldr	r3, [pc, #68]	@ (8004388 <ailayer_relu_q7_default+0x50>)
 8004344:	681a      	ldr	r2, [r3, #0]
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	61da      	str	r2, [r3, #28]
 800434a:	4b0f      	ldr	r3, [pc, #60]	@ (8004388 <ailayer_relu_q7_default+0x50>)
 800434c:	681a      	ldr	r2, [r3, #0]
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004352:	687b      	ldr	r3, [r7, #4]
 8004354:	4a0d      	ldr	r2, [pc, #52]	@ (800438c <ailayer_relu_q7_default+0x54>)
 8004356:	635a      	str	r2, [r3, #52]	@ 0x34
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	2200      	movs	r2, #0
 800435c:	66da      	str	r2, [r3, #108]	@ 0x6c
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	4a0b      	ldr	r2, [pc, #44]	@ (8004390 <ailayer_relu_q7_default+0x58>)
 8004362:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8004366:	687b      	ldr	r3, [r7, #4]
 8004368:	4a0a      	ldr	r2, [pc, #40]	@ (8004394 <ailayer_relu_q7_default+0x5c>)
 800436a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	4a09      	ldr	r2, [pc, #36]	@ (8004398 <ailayer_relu_q7_default+0x60>)
 8004372:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8004376:	6839      	ldr	r1, [r7, #0]
 8004378:	6878      	ldr	r0, [r7, #4]
 800437a:	f7ff f909 	bl	8003590 <ailayer_relu>
 800437e:	4603      	mov	r3, r0
 8004380:	4618      	mov	r0, r3
 8004382:	3708      	adds	r7, #8
 8004384:	46bd      	mov	sp, r7
 8004386:	bd80      	pop	{r7, pc}
 8004388:	20000570 	.word	0x20000570
 800438c:	0800439d 	.word	0x0800439d
 8004390:	08004931 	.word	0x08004931
 8004394:	0800499f 	.word	0x0800499f
 8004398:	080046f1 	.word	0x080046f1

0800439c <ailayer_relu_calc_result_tensor_params_q7_default>:
 800439c:	b480      	push	{r7}
 800439e:	b085      	sub	sp, #20
 80043a0:	af00      	add	r7, sp, #0
 80043a2:	6078      	str	r0, [r7, #4]
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80043a8:	60fb      	str	r3, [r7, #12]
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	68db      	ldr	r3, [r3, #12]
 80043ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80043b0:	881a      	ldrh	r2, [r3, #0]
 80043b2:	68fb      	ldr	r3, [r7, #12]
 80043b4:	801a      	strh	r2, [r3, #0]
 80043b6:	687b      	ldr	r3, [r7, #4]
 80043b8:	68db      	ldr	r3, [r3, #12]
 80043ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80043bc:	f993 2002 	ldrsb.w	r2, [r3, #2]
 80043c0:	68fb      	ldr	r3, [r7, #12]
 80043c2:	709a      	strb	r2, [r3, #2]
 80043c4:	bf00      	nop
 80043c6:	3714      	adds	r7, #20
 80043c8:	46bd      	mov	sp, r7
 80043ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043ce:	4770      	bx	lr

080043d0 <ailayer_softmax_q7_default>:
 80043d0:	b580      	push	{r7, lr}
 80043d2:	b082      	sub	sp, #8
 80043d4:	af00      	add	r7, sp, #0
 80043d6:	6078      	str	r0, [r7, #4]
 80043d8:	6039      	str	r1, [r7, #0]
 80043da:	4b0d      	ldr	r3, [pc, #52]	@ (8004410 <ailayer_softmax_q7_default+0x40>)
 80043dc:	681a      	ldr	r2, [r3, #0]
 80043de:	687b      	ldr	r3, [r7, #4]
 80043e0:	61da      	str	r2, [r3, #28]
 80043e2:	4b0b      	ldr	r3, [pc, #44]	@ (8004410 <ailayer_softmax_q7_default+0x40>)
 80043e4:	681a      	ldr	r2, [r3, #0]
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	63da      	str	r2, [r3, #60]	@ 0x3c
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	4a09      	ldr	r2, [pc, #36]	@ (8004414 <ailayer_softmax_q7_default+0x44>)
 80043ee:	635a      	str	r2, [r3, #52]	@ 0x34
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	2200      	movs	r2, #0
 80043f4:	66da      	str	r2, [r3, #108]	@ 0x6c
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	4a07      	ldr	r2, [pc, #28]	@ (8004418 <ailayer_softmax_q7_default+0x48>)
 80043fa:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80043fe:	6839      	ldr	r1, [r7, #0]
 8004400:	6878      	ldr	r0, [r7, #4]
 8004402:	f7ff f97d 	bl	8003700 <ailayer_softmax>
 8004406:	4603      	mov	r3, r0
 8004408:	4618      	mov	r0, r3
 800440a:	3708      	adds	r7, #8
 800440c:	46bd      	mov	sp, r7
 800440e:	bd80      	pop	{r7, pc}
 8004410:	20000570 	.word	0x20000570
 8004414:	0800441d 	.word	0x0800441d
 8004418:	08004a09 	.word	0x08004a09

0800441c <ailayer_softmax_calc_result_tensor_params_q7_default>:
 800441c:	b480      	push	{r7}
 800441e:	b085      	sub	sp, #20
 8004420:	af00      	add	r7, sp, #0
 8004422:	6078      	str	r0, [r7, #4]
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004428:	60fb      	str	r3, [r7, #12]
 800442a:	68fb      	ldr	r3, [r7, #12]
 800442c:	2208      	movs	r2, #8
 800442e:	801a      	strh	r2, [r3, #0]
 8004430:	68fb      	ldr	r3, [r7, #12]
 8004432:	2280      	movs	r2, #128	@ 0x80
 8004434:	709a      	strb	r2, [r3, #2]
 8004436:	bf00      	nop
 8004438:	3714      	adds	r7, #20
 800443a:	46bd      	mov	sp, r7
 800443c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004440:	4770      	bx	lr
	...

08004444 <aimath_q7_default_linear32_bt>:
 8004444:	b580      	push	{r7, lr}
 8004446:	b090      	sub	sp, #64	@ 0x40
 8004448:	af00      	add	r7, sp, #0
 800444a:	60f8      	str	r0, [r7, #12]
 800444c:	60b9      	str	r1, [r7, #8]
 800444e:	607a      	str	r2, [r7, #4]
 8004450:	603b      	str	r3, [r7, #0]
 8004452:	68fb      	ldr	r3, [r7, #12]
 8004454:	68db      	ldr	r3, [r3, #12]
 8004456:	881b      	ldrh	r3, [r3, #0]
 8004458:	857b      	strh	r3, [r7, #42]	@ 0x2a
 800445a:	68bb      	ldr	r3, [r7, #8]
 800445c:	68db      	ldr	r3, [r3, #12]
 800445e:	881b      	ldrh	r3, [r3, #0]
 8004460:	853b      	strh	r3, [r7, #40]	@ 0x28
 8004462:	687b      	ldr	r3, [r7, #4]
 8004464:	68db      	ldr	r3, [r3, #12]
 8004466:	881b      	ldrh	r3, [r3, #0]
 8004468:	84fb      	strh	r3, [r7, #38]	@ 0x26
 800446a:	683b      	ldr	r3, [r7, #0]
 800446c:	68db      	ldr	r3, [r3, #12]
 800446e:	881b      	ldrh	r3, [r3, #0]
 8004470:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8004472:	68fb      	ldr	r3, [r7, #12]
 8004474:	68db      	ldr	r3, [r3, #12]
 8004476:	789b      	ldrb	r3, [r3, #2]
 8004478:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800447c:	68bb      	ldr	r3, [r7, #8]
 800447e:	68db      	ldr	r3, [r3, #12]
 8004480:	789b      	ldrb	r3, [r3, #2]
 8004482:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8004486:	683b      	ldr	r3, [r7, #0]
 8004488:	68db      	ldr	r3, [r3, #12]
 800448a:	789b      	ldrb	r3, [r3, #2]
 800448c:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
 8004490:	8d7a      	ldrh	r2, [r7, #42]	@ 0x2a
 8004492:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 8004494:	4413      	add	r3, r2
 8004496:	b29a      	uxth	r2, r3
 8004498:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800449a:	1ad3      	subs	r3, r2, r3
 800449c:	83fb      	strh	r3, [r7, #30]
 800449e:	68fb      	ldr	r3, [r7, #12]
 80044a0:	691b      	ldr	r3, [r3, #16]
 80044a2:	61bb      	str	r3, [r7, #24]
 80044a4:	68bb      	ldr	r3, [r7, #8]
 80044a6:	691b      	ldr	r3, [r3, #16]
 80044a8:	617b      	str	r3, [r7, #20]
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	2b00      	cmp	r3, #0
 80044ae:	d002      	beq.n	80044b6 <aimath_q7_default_linear32_bt+0x72>
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	691b      	ldr	r3, [r3, #16]
 80044b4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80044b6:	683b      	ldr	r3, [r7, #0]
 80044b8:	691b      	ldr	r3, [r3, #16]
 80044ba:	613b      	str	r3, [r7, #16]
 80044bc:	68fb      	ldr	r3, [r7, #12]
 80044be:	689b      	ldr	r3, [r3, #8]
 80044c0:	3302      	adds	r3, #2
 80044c2:	881a      	ldrh	r2, [r3, #0]
 80044c4:	68bb      	ldr	r3, [r7, #8]
 80044c6:	689b      	ldr	r3, [r3, #8]
 80044c8:	3302      	adds	r3, #2
 80044ca:	881b      	ldrh	r3, [r3, #0]
 80044cc:	429a      	cmp	r2, r3
 80044ce:	d004      	beq.n	80044da <aimath_q7_default_linear32_bt+0x96>
 80044d0:	4b83      	ldr	r3, [pc, #524]	@ (80046e0 <aimath_q7_default_linear32_bt+0x29c>)
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	4883      	ldr	r0, [pc, #524]	@ (80046e4 <aimath_q7_default_linear32_bt+0x2a0>)
 80044d6:	4798      	blx	r3
 80044d8:	e0ff      	b.n	80046da <aimath_q7_default_linear32_bt+0x296>
 80044da:	68fb      	ldr	r3, [r7, #12]
 80044dc:	689b      	ldr	r3, [r3, #8]
 80044de:	881a      	ldrh	r2, [r3, #0]
 80044e0:	683b      	ldr	r3, [r7, #0]
 80044e2:	689b      	ldr	r3, [r3, #8]
 80044e4:	881b      	ldrh	r3, [r3, #0]
 80044e6:	429a      	cmp	r2, r3
 80044e8:	d108      	bne.n	80044fc <aimath_q7_default_linear32_bt+0xb8>
 80044ea:	68bb      	ldr	r3, [r7, #8]
 80044ec:	689b      	ldr	r3, [r3, #8]
 80044ee:	881a      	ldrh	r2, [r3, #0]
 80044f0:	683b      	ldr	r3, [r7, #0]
 80044f2:	689b      	ldr	r3, [r3, #8]
 80044f4:	3302      	adds	r3, #2
 80044f6:	881b      	ldrh	r3, [r3, #0]
 80044f8:	429a      	cmp	r2, r3
 80044fa:	d004      	beq.n	8004506 <aimath_q7_default_linear32_bt+0xc2>
 80044fc:	4b78      	ldr	r3, [pc, #480]	@ (80046e0 <aimath_q7_default_linear32_bt+0x29c>)
 80044fe:	681b      	ldr	r3, [r3, #0]
 8004500:	4879      	ldr	r0, [pc, #484]	@ (80046e8 <aimath_q7_default_linear32_bt+0x2a4>)
 8004502:	4798      	blx	r3
 8004504:	e0e9      	b.n	80046da <aimath_q7_default_linear32_bt+0x296>
 8004506:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8004508:	8d79      	ldrh	r1, [r7, #42]	@ 0x2a
 800450a:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 800450c:	440b      	add	r3, r1
 800450e:	429a      	cmp	r2, r3
 8004510:	d004      	beq.n	800451c <aimath_q7_default_linear32_bt+0xd8>
 8004512:	4b73      	ldr	r3, [pc, #460]	@ (80046e0 <aimath_q7_default_linear32_bt+0x29c>)
 8004514:	681b      	ldr	r3, [r3, #0]
 8004516:	4875      	ldr	r0, [pc, #468]	@ (80046ec <aimath_q7_default_linear32_bt+0x2a8>)
 8004518:	4798      	blx	r3
 800451a:	e0de      	b.n	80046da <aimath_q7_default_linear32_bt+0x296>
 800451c:	2300      	movs	r3, #0
 800451e:	87fb      	strh	r3, [r7, #62]	@ 0x3e
 8004520:	e0d3      	b.n	80046ca <aimath_q7_default_linear32_bt+0x286>
 8004522:	2300      	movs	r3, #0
 8004524:	87bb      	strh	r3, [r7, #60]	@ 0x3c
 8004526:	e0c6      	b.n	80046b6 <aimath_q7_default_linear32_bt+0x272>
 8004528:	2300      	movs	r3, #0
 800452a:	637b      	str	r3, [r7, #52]	@ 0x34
 800452c:	2300      	movs	r3, #0
 800452e:	877b      	strh	r3, [r7, #58]	@ 0x3a
 8004530:	e024      	b.n	800457c <aimath_q7_default_linear32_bt+0x138>
 8004532:	8ffb      	ldrh	r3, [r7, #62]	@ 0x3e
 8004534:	68fa      	ldr	r2, [r7, #12]
 8004536:	6892      	ldr	r2, [r2, #8]
 8004538:	3202      	adds	r2, #2
 800453a:	8812      	ldrh	r2, [r2, #0]
 800453c:	fb03 f202 	mul.w	r2, r3, r2
 8004540:	8f7b      	ldrh	r3, [r7, #58]	@ 0x3a
 8004542:	4413      	add	r3, r2
 8004544:	461a      	mov	r2, r3
 8004546:	69bb      	ldr	r3, [r7, #24]
 8004548:	4413      	add	r3, r2
 800454a:	f993 3000 	ldrsb.w	r3, [r3]
 800454e:	4619      	mov	r1, r3
 8004550:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8004552:	68ba      	ldr	r2, [r7, #8]
 8004554:	6892      	ldr	r2, [r2, #8]
 8004556:	3202      	adds	r2, #2
 8004558:	8812      	ldrh	r2, [r2, #0]
 800455a:	fb03 f202 	mul.w	r2, r3, r2
 800455e:	8f7b      	ldrh	r3, [r7, #58]	@ 0x3a
 8004560:	4413      	add	r3, r2
 8004562:	461a      	mov	r2, r3
 8004564:	697b      	ldr	r3, [r7, #20]
 8004566:	4413      	add	r3, r2
 8004568:	f993 3000 	ldrsb.w	r3, [r3]
 800456c:	fb01 f303 	mul.w	r3, r1, r3
 8004570:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8004572:	4413      	add	r3, r2
 8004574:	637b      	str	r3, [r7, #52]	@ 0x34
 8004576:	8f7b      	ldrh	r3, [r7, #58]	@ 0x3a
 8004578:	3301      	adds	r3, #1
 800457a:	877b      	strh	r3, [r7, #58]	@ 0x3a
 800457c:	68fb      	ldr	r3, [r7, #12]
 800457e:	689b      	ldr	r3, [r3, #8]
 8004580:	3302      	adds	r3, #2
 8004582:	881b      	ldrh	r3, [r3, #0]
 8004584:	8f7a      	ldrh	r2, [r7, #58]	@ 0x3a
 8004586:	429a      	cmp	r2, r3
 8004588:	d3d3      	bcc.n	8004532 <aimath_q7_default_linear32_bt+0xee>
 800458a:	f997 3023 	ldrsb.w	r3, [r7, #35]	@ 0x23
 800458e:	2b00      	cmp	r3, #0
 8004590:	d028      	beq.n	80045e4 <aimath_q7_default_linear32_bt+0x1a0>
 8004592:	2300      	movs	r3, #0
 8004594:	633b      	str	r3, [r7, #48]	@ 0x30
 8004596:	2300      	movs	r3, #0
 8004598:	877b      	strh	r3, [r7, #58]	@ 0x3a
 800459a:	e014      	b.n	80045c6 <aimath_q7_default_linear32_bt+0x182>
 800459c:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 800459e:	68ba      	ldr	r2, [r7, #8]
 80045a0:	6892      	ldr	r2, [r2, #8]
 80045a2:	3202      	adds	r2, #2
 80045a4:	8812      	ldrh	r2, [r2, #0]
 80045a6:	fb03 f202 	mul.w	r2, r3, r2
 80045aa:	8f7b      	ldrh	r3, [r7, #58]	@ 0x3a
 80045ac:	4413      	add	r3, r2
 80045ae:	461a      	mov	r2, r3
 80045b0:	697b      	ldr	r3, [r7, #20]
 80045b2:	4413      	add	r3, r2
 80045b4:	f993 3000 	ldrsb.w	r3, [r3]
 80045b8:	461a      	mov	r2, r3
 80045ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80045bc:	4413      	add	r3, r2
 80045be:	633b      	str	r3, [r7, #48]	@ 0x30
 80045c0:	8f7b      	ldrh	r3, [r7, #58]	@ 0x3a
 80045c2:	3301      	adds	r3, #1
 80045c4:	877b      	strh	r3, [r7, #58]	@ 0x3a
 80045c6:	68fb      	ldr	r3, [r7, #12]
 80045c8:	689b      	ldr	r3, [r3, #8]
 80045ca:	3302      	adds	r3, #2
 80045cc:	881b      	ldrh	r3, [r3, #0]
 80045ce:	8f7a      	ldrh	r2, [r7, #58]	@ 0x3a
 80045d0:	429a      	cmp	r2, r3
 80045d2:	d3e3      	bcc.n	800459c <aimath_q7_default_linear32_bt+0x158>
 80045d4:	f997 3023 	ldrsb.w	r3, [r7, #35]	@ 0x23
 80045d8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80045da:	fb02 f303 	mul.w	r3, r2, r3
 80045de:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80045e0:	1ad3      	subs	r3, r2, r3
 80045e2:	637b      	str	r3, [r7, #52]	@ 0x34
 80045e4:	f997 3022 	ldrsb.w	r3, [r7, #34]	@ 0x22
 80045e8:	2b00      	cmp	r3, #0
 80045ea:	d028      	beq.n	800463e <aimath_q7_default_linear32_bt+0x1fa>
 80045ec:	2300      	movs	r3, #0
 80045ee:	633b      	str	r3, [r7, #48]	@ 0x30
 80045f0:	2300      	movs	r3, #0
 80045f2:	877b      	strh	r3, [r7, #58]	@ 0x3a
 80045f4:	e014      	b.n	8004620 <aimath_q7_default_linear32_bt+0x1dc>
 80045f6:	8ffb      	ldrh	r3, [r7, #62]	@ 0x3e
 80045f8:	68fa      	ldr	r2, [r7, #12]
 80045fa:	6892      	ldr	r2, [r2, #8]
 80045fc:	3202      	adds	r2, #2
 80045fe:	8812      	ldrh	r2, [r2, #0]
 8004600:	fb03 f202 	mul.w	r2, r3, r2
 8004604:	8f7b      	ldrh	r3, [r7, #58]	@ 0x3a
 8004606:	4413      	add	r3, r2
 8004608:	461a      	mov	r2, r3
 800460a:	69bb      	ldr	r3, [r7, #24]
 800460c:	4413      	add	r3, r2
 800460e:	f993 3000 	ldrsb.w	r3, [r3]
 8004612:	461a      	mov	r2, r3
 8004614:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004616:	4413      	add	r3, r2
 8004618:	633b      	str	r3, [r7, #48]	@ 0x30
 800461a:	8f7b      	ldrh	r3, [r7, #58]	@ 0x3a
 800461c:	3301      	adds	r3, #1
 800461e:	877b      	strh	r3, [r7, #58]	@ 0x3a
 8004620:	68fb      	ldr	r3, [r7, #12]
 8004622:	689b      	ldr	r3, [r3, #8]
 8004624:	3302      	adds	r3, #2
 8004626:	881b      	ldrh	r3, [r3, #0]
 8004628:	8f7a      	ldrh	r2, [r7, #58]	@ 0x3a
 800462a:	429a      	cmp	r2, r3
 800462c:	d3e3      	bcc.n	80045f6 <aimath_q7_default_linear32_bt+0x1b2>
 800462e:	f997 3022 	ldrsb.w	r3, [r7, #34]	@ 0x22
 8004632:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004634:	fb02 f303 	mul.w	r3, r2, r3
 8004638:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800463a:	1ad3      	subs	r3, r2, r3
 800463c:	637b      	str	r3, [r7, #52]	@ 0x34
 800463e:	f997 3023 	ldrsb.w	r3, [r7, #35]	@ 0x23
 8004642:	2b00      	cmp	r3, #0
 8004644:	d013      	beq.n	800466e <aimath_q7_default_linear32_bt+0x22a>
 8004646:	f997 3022 	ldrsb.w	r3, [r7, #34]	@ 0x22
 800464a:	2b00      	cmp	r3, #0
 800464c:	d00f      	beq.n	800466e <aimath_q7_default_linear32_bt+0x22a>
 800464e:	68fb      	ldr	r3, [r7, #12]
 8004650:	689b      	ldr	r3, [r3, #8]
 8004652:	3302      	adds	r3, #2
 8004654:	881b      	ldrh	r3, [r3, #0]
 8004656:	461a      	mov	r2, r3
 8004658:	f997 3023 	ldrsb.w	r3, [r7, #35]	@ 0x23
 800465c:	fb02 f303 	mul.w	r3, r2, r3
 8004660:	f997 2022 	ldrsb.w	r2, [r7, #34]	@ 0x22
 8004664:	fb02 f303 	mul.w	r3, r2, r3
 8004668:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800466a:	4413      	add	r3, r2
 800466c:	637b      	str	r3, [r7, #52]	@ 0x34
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	2b00      	cmp	r3, #0
 8004672:	d007      	beq.n	8004684 <aimath_q7_default_linear32_bt+0x240>
 8004674:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8004676:	009b      	lsls	r3, r3, #2
 8004678:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800467a:	4413      	add	r3, r2
 800467c:	681b      	ldr	r3, [r3, #0]
 800467e:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8004680:	4413      	add	r3, r2
 8004682:	637b      	str	r3, [r7, #52]	@ 0x34
 8004684:	8bfb      	ldrh	r3, [r7, #30]
 8004686:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8004688:	fa42 f303 	asr.w	r3, r2, r3
 800468c:	b2da      	uxtb	r2, r3
 800468e:	f897 3021 	ldrb.w	r3, [r7, #33]	@ 0x21
 8004692:	4413      	add	r3, r2
 8004694:	b2d9      	uxtb	r1, r3
 8004696:	8ffb      	ldrh	r3, [r7, #62]	@ 0x3e
 8004698:	68ba      	ldr	r2, [r7, #8]
 800469a:	6892      	ldr	r2, [r2, #8]
 800469c:	8812      	ldrh	r2, [r2, #0]
 800469e:	fb03 f202 	mul.w	r2, r3, r2
 80046a2:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 80046a4:	4413      	add	r3, r2
 80046a6:	461a      	mov	r2, r3
 80046a8:	693b      	ldr	r3, [r7, #16]
 80046aa:	4413      	add	r3, r2
 80046ac:	b24a      	sxtb	r2, r1
 80046ae:	701a      	strb	r2, [r3, #0]
 80046b0:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 80046b2:	3301      	adds	r3, #1
 80046b4:	87bb      	strh	r3, [r7, #60]	@ 0x3c
 80046b6:	68bb      	ldr	r3, [r7, #8]
 80046b8:	689b      	ldr	r3, [r3, #8]
 80046ba:	881b      	ldrh	r3, [r3, #0]
 80046bc:	8fba      	ldrh	r2, [r7, #60]	@ 0x3c
 80046be:	429a      	cmp	r2, r3
 80046c0:	f4ff af32 	bcc.w	8004528 <aimath_q7_default_linear32_bt+0xe4>
 80046c4:	8ffb      	ldrh	r3, [r7, #62]	@ 0x3e
 80046c6:	3301      	adds	r3, #1
 80046c8:	87fb      	strh	r3, [r7, #62]	@ 0x3e
 80046ca:	68fb      	ldr	r3, [r7, #12]
 80046cc:	689b      	ldr	r3, [r3, #8]
 80046ce:	881b      	ldrh	r3, [r3, #0]
 80046d0:	8ffa      	ldrh	r2, [r7, #62]	@ 0x3e
 80046d2:	429a      	cmp	r2, r3
 80046d4:	f4ff af25 	bcc.w	8004522 <aimath_q7_default_linear32_bt+0xde>
 80046d8:	bf00      	nop
 80046da:	3740      	adds	r7, #64	@ 0x40
 80046dc:	46bd      	mov	sp, r7
 80046de:	bd80      	pop	{r7, pc}
 80046e0:	20000544 	.word	0x20000544
 80046e4:	0800c834 	.word	0x0800c834
 80046e8:	0800c878 	.word	0x0800c878
 80046ec:	0800c8bc 	.word	0x0800c8bc

080046f0 <aimath_q7_default_multiply>:
 80046f0:	b580      	push	{r7, lr}
 80046f2:	b08a      	sub	sp, #40	@ 0x28
 80046f4:	af00      	add	r7, sp, #0
 80046f6:	60f8      	str	r0, [r7, #12]
 80046f8:	60b9      	str	r1, [r7, #8]
 80046fa:	607a      	str	r2, [r7, #4]
 80046fc:	68fb      	ldr	r3, [r7, #12]
 80046fe:	68db      	ldr	r3, [r3, #12]
 8004700:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8004704:	623b      	str	r3, [r7, #32]
 8004706:	68bb      	ldr	r3, [r7, #8]
 8004708:	68db      	ldr	r3, [r3, #12]
 800470a:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800470e:	61fb      	str	r3, [r7, #28]
 8004710:	687b      	ldr	r3, [r7, #4]
 8004712:	68db      	ldr	r3, [r3, #12]
 8004714:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8004718:	61bb      	str	r3, [r7, #24]
 800471a:	68fb      	ldr	r3, [r7, #12]
 800471c:	68db      	ldr	r3, [r3, #12]
 800471e:	881a      	ldrh	r2, [r3, #0]
 8004720:	68bb      	ldr	r3, [r7, #8]
 8004722:	68db      	ldr	r3, [r3, #12]
 8004724:	881b      	ldrh	r3, [r3, #0]
 8004726:	4413      	add	r3, r2
 8004728:	b29a      	uxth	r2, r3
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	68db      	ldr	r3, [r3, #12]
 800472e:	881b      	ldrh	r3, [r3, #0]
 8004730:	1ad3      	subs	r3, r2, r3
 8004732:	82fb      	strh	r3, [r7, #22]
 8004734:	6a3b      	ldr	r3, [r7, #32]
 8004736:	2b00      	cmp	r3, #0
 8004738:	d050      	beq.n	80047dc <aimath_q7_default_multiply+0xec>
 800473a:	69fb      	ldr	r3, [r7, #28]
 800473c:	2b00      	cmp	r3, #0
 800473e:	d04d      	beq.n	80047dc <aimath_q7_default_multiply+0xec>
 8004740:	2300      	movs	r3, #0
 8004742:	627b      	str	r3, [r7, #36]	@ 0x24
 8004744:	e042      	b.n	80047cc <aimath_q7_default_multiply+0xdc>
 8004746:	68fb      	ldr	r3, [r7, #12]
 8004748:	691a      	ldr	r2, [r3, #16]
 800474a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800474c:	4413      	add	r3, r2
 800474e:	f993 3000 	ldrsb.w	r3, [r3]
 8004752:	4619      	mov	r1, r3
 8004754:	68bb      	ldr	r3, [r7, #8]
 8004756:	691a      	ldr	r2, [r3, #16]
 8004758:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800475a:	4413      	add	r3, r2
 800475c:	f993 3000 	ldrsb.w	r3, [r3]
 8004760:	fb01 f303 	mul.w	r3, r1, r3
 8004764:	613b      	str	r3, [r7, #16]
 8004766:	68bb      	ldr	r3, [r7, #8]
 8004768:	691a      	ldr	r2, [r3, #16]
 800476a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800476c:	4413      	add	r3, r2
 800476e:	f993 3000 	ldrsb.w	r3, [r3]
 8004772:	461a      	mov	r2, r3
 8004774:	6a3b      	ldr	r3, [r7, #32]
 8004776:	fb02 f303 	mul.w	r3, r2, r3
 800477a:	693a      	ldr	r2, [r7, #16]
 800477c:	1ad3      	subs	r3, r2, r3
 800477e:	613b      	str	r3, [r7, #16]
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	691a      	ldr	r2, [r3, #16]
 8004784:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004786:	4413      	add	r3, r2
 8004788:	f993 3000 	ldrsb.w	r3, [r3]
 800478c:	461a      	mov	r2, r3
 800478e:	69fb      	ldr	r3, [r7, #28]
 8004790:	fb02 f303 	mul.w	r3, r2, r3
 8004794:	693a      	ldr	r2, [r7, #16]
 8004796:	1ad3      	subs	r3, r2, r3
 8004798:	613b      	str	r3, [r7, #16]
 800479a:	6a3b      	ldr	r3, [r7, #32]
 800479c:	69fa      	ldr	r2, [r7, #28]
 800479e:	fb02 f303 	mul.w	r3, r2, r3
 80047a2:	693a      	ldr	r2, [r7, #16]
 80047a4:	4413      	add	r3, r2
 80047a6:	613b      	str	r3, [r7, #16]
 80047a8:	8afb      	ldrh	r3, [r7, #22]
 80047aa:	693a      	ldr	r2, [r7, #16]
 80047ac:	fa42 f303 	asr.w	r3, r2, r3
 80047b0:	b2da      	uxtb	r2, r3
 80047b2:	69bb      	ldr	r3, [r7, #24]
 80047b4:	b2db      	uxtb	r3, r3
 80047b6:	4413      	add	r3, r2
 80047b8:	b2d9      	uxtb	r1, r3
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	691a      	ldr	r2, [r3, #16]
 80047be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80047c0:	4413      	add	r3, r2
 80047c2:	b24a      	sxtb	r2, r1
 80047c4:	701a      	strb	r2, [r3, #0]
 80047c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80047c8:	3301      	adds	r3, #1
 80047ca:	627b      	str	r3, [r7, #36]	@ 0x24
 80047cc:	68f8      	ldr	r0, [r7, #12]
 80047ce:	f7ff f821 	bl	8003814 <aimath_tensor_elements>
 80047d2:	4602      	mov	r2, r0
 80047d4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80047d6:	4293      	cmp	r3, r2
 80047d8:	d3b5      	bcc.n	8004746 <aimath_q7_default_multiply+0x56>
 80047da:	e0a5      	b.n	8004928 <aimath_q7_default_multiply+0x238>
 80047dc:	6a3b      	ldr	r3, [r7, #32]
 80047de:	2b00      	cmp	r3, #0
 80047e0:	d039      	beq.n	8004856 <aimath_q7_default_multiply+0x166>
 80047e2:	2300      	movs	r3, #0
 80047e4:	627b      	str	r3, [r7, #36]	@ 0x24
 80047e6:	e02e      	b.n	8004846 <aimath_q7_default_multiply+0x156>
 80047e8:	68fb      	ldr	r3, [r7, #12]
 80047ea:	691a      	ldr	r2, [r3, #16]
 80047ec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80047ee:	4413      	add	r3, r2
 80047f0:	f993 3000 	ldrsb.w	r3, [r3]
 80047f4:	4619      	mov	r1, r3
 80047f6:	68bb      	ldr	r3, [r7, #8]
 80047f8:	691a      	ldr	r2, [r3, #16]
 80047fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80047fc:	4413      	add	r3, r2
 80047fe:	f993 3000 	ldrsb.w	r3, [r3]
 8004802:	fb01 f303 	mul.w	r3, r1, r3
 8004806:	613b      	str	r3, [r7, #16]
 8004808:	68bb      	ldr	r3, [r7, #8]
 800480a:	691a      	ldr	r2, [r3, #16]
 800480c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800480e:	4413      	add	r3, r2
 8004810:	f993 3000 	ldrsb.w	r3, [r3]
 8004814:	461a      	mov	r2, r3
 8004816:	6a3b      	ldr	r3, [r7, #32]
 8004818:	fb02 f303 	mul.w	r3, r2, r3
 800481c:	693a      	ldr	r2, [r7, #16]
 800481e:	1ad3      	subs	r3, r2, r3
 8004820:	613b      	str	r3, [r7, #16]
 8004822:	8afb      	ldrh	r3, [r7, #22]
 8004824:	693a      	ldr	r2, [r7, #16]
 8004826:	fa42 f303 	asr.w	r3, r2, r3
 800482a:	b2da      	uxtb	r2, r3
 800482c:	69bb      	ldr	r3, [r7, #24]
 800482e:	b2db      	uxtb	r3, r3
 8004830:	4413      	add	r3, r2
 8004832:	b2d9      	uxtb	r1, r3
 8004834:	687b      	ldr	r3, [r7, #4]
 8004836:	691a      	ldr	r2, [r3, #16]
 8004838:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800483a:	4413      	add	r3, r2
 800483c:	b24a      	sxtb	r2, r1
 800483e:	701a      	strb	r2, [r3, #0]
 8004840:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004842:	3301      	adds	r3, #1
 8004844:	627b      	str	r3, [r7, #36]	@ 0x24
 8004846:	68f8      	ldr	r0, [r7, #12]
 8004848:	f7fe ffe4 	bl	8003814 <aimath_tensor_elements>
 800484c:	4602      	mov	r2, r0
 800484e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004850:	4293      	cmp	r3, r2
 8004852:	d3c9      	bcc.n	80047e8 <aimath_q7_default_multiply+0xf8>
 8004854:	e069      	b.n	800492a <aimath_q7_default_multiply+0x23a>
 8004856:	69fb      	ldr	r3, [r7, #28]
 8004858:	2b00      	cmp	r3, #0
 800485a:	d039      	beq.n	80048d0 <aimath_q7_default_multiply+0x1e0>
 800485c:	2300      	movs	r3, #0
 800485e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004860:	e02e      	b.n	80048c0 <aimath_q7_default_multiply+0x1d0>
 8004862:	68fb      	ldr	r3, [r7, #12]
 8004864:	691a      	ldr	r2, [r3, #16]
 8004866:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004868:	4413      	add	r3, r2
 800486a:	f993 3000 	ldrsb.w	r3, [r3]
 800486e:	4619      	mov	r1, r3
 8004870:	68bb      	ldr	r3, [r7, #8]
 8004872:	691a      	ldr	r2, [r3, #16]
 8004874:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004876:	4413      	add	r3, r2
 8004878:	f993 3000 	ldrsb.w	r3, [r3]
 800487c:	fb01 f303 	mul.w	r3, r1, r3
 8004880:	613b      	str	r3, [r7, #16]
 8004882:	68fb      	ldr	r3, [r7, #12]
 8004884:	691a      	ldr	r2, [r3, #16]
 8004886:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004888:	4413      	add	r3, r2
 800488a:	f993 3000 	ldrsb.w	r3, [r3]
 800488e:	461a      	mov	r2, r3
 8004890:	69fb      	ldr	r3, [r7, #28]
 8004892:	fb02 f303 	mul.w	r3, r2, r3
 8004896:	693a      	ldr	r2, [r7, #16]
 8004898:	1ad3      	subs	r3, r2, r3
 800489a:	613b      	str	r3, [r7, #16]
 800489c:	8afb      	ldrh	r3, [r7, #22]
 800489e:	693a      	ldr	r2, [r7, #16]
 80048a0:	fa42 f303 	asr.w	r3, r2, r3
 80048a4:	b2da      	uxtb	r2, r3
 80048a6:	69bb      	ldr	r3, [r7, #24]
 80048a8:	b2db      	uxtb	r3, r3
 80048aa:	4413      	add	r3, r2
 80048ac:	b2d9      	uxtb	r1, r3
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	691a      	ldr	r2, [r3, #16]
 80048b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048b4:	4413      	add	r3, r2
 80048b6:	b24a      	sxtb	r2, r1
 80048b8:	701a      	strb	r2, [r3, #0]
 80048ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048bc:	3301      	adds	r3, #1
 80048be:	627b      	str	r3, [r7, #36]	@ 0x24
 80048c0:	68f8      	ldr	r0, [r7, #12]
 80048c2:	f7fe ffa7 	bl	8003814 <aimath_tensor_elements>
 80048c6:	4602      	mov	r2, r0
 80048c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048ca:	4293      	cmp	r3, r2
 80048cc:	d3c9      	bcc.n	8004862 <aimath_q7_default_multiply+0x172>
 80048ce:	e02c      	b.n	800492a <aimath_q7_default_multiply+0x23a>
 80048d0:	2300      	movs	r3, #0
 80048d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80048d4:	e021      	b.n	800491a <aimath_q7_default_multiply+0x22a>
 80048d6:	68fb      	ldr	r3, [r7, #12]
 80048d8:	691a      	ldr	r2, [r3, #16]
 80048da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048dc:	4413      	add	r3, r2
 80048de:	f993 3000 	ldrsb.w	r3, [r3]
 80048e2:	4619      	mov	r1, r3
 80048e4:	68bb      	ldr	r3, [r7, #8]
 80048e6:	691a      	ldr	r2, [r3, #16]
 80048e8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048ea:	4413      	add	r3, r2
 80048ec:	f993 3000 	ldrsb.w	r3, [r3]
 80048f0:	fb01 f303 	mul.w	r3, r1, r3
 80048f4:	613b      	str	r3, [r7, #16]
 80048f6:	8afb      	ldrh	r3, [r7, #22]
 80048f8:	693a      	ldr	r2, [r7, #16]
 80048fa:	fa42 f303 	asr.w	r3, r2, r3
 80048fe:	b2da      	uxtb	r2, r3
 8004900:	69bb      	ldr	r3, [r7, #24]
 8004902:	b2db      	uxtb	r3, r3
 8004904:	4413      	add	r3, r2
 8004906:	b2d9      	uxtb	r1, r3
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	691a      	ldr	r2, [r3, #16]
 800490c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800490e:	4413      	add	r3, r2
 8004910:	b24a      	sxtb	r2, r1
 8004912:	701a      	strb	r2, [r3, #0]
 8004914:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004916:	3301      	adds	r3, #1
 8004918:	627b      	str	r3, [r7, #36]	@ 0x24
 800491a:	68f8      	ldr	r0, [r7, #12]
 800491c:	f7fe ff7a 	bl	8003814 <aimath_tensor_elements>
 8004920:	4602      	mov	r2, r0
 8004922:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004924:	4293      	cmp	r3, r2
 8004926:	d3d6      	bcc.n	80048d6 <aimath_q7_default_multiply+0x1e6>
 8004928:	bf00      	nop
 800492a:	3728      	adds	r7, #40	@ 0x28
 800492c:	46bd      	mov	sp, r7
 800492e:	bd80      	pop	{r7, pc}

08004930 <aimath_q7_default_relu>:
 8004930:	b580      	push	{r7, lr}
 8004932:	b084      	sub	sp, #16
 8004934:	af00      	add	r7, sp, #0
 8004936:	6078      	str	r0, [r7, #4]
 8004938:	6039      	str	r1, [r7, #0]
 800493a:	687b      	ldr	r3, [r7, #4]
 800493c:	68db      	ldr	r3, [r3, #12]
 800493e:	881b      	ldrh	r3, [r3, #0]
 8004940:	817b      	strh	r3, [r7, #10]
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	68db      	ldr	r3, [r3, #12]
 8004946:	789b      	ldrb	r3, [r3, #2]
 8004948:	727b      	strb	r3, [r7, #9]
 800494a:	2300      	movs	r3, #0
 800494c:	60fb      	str	r3, [r7, #12]
 800494e:	e013      	b.n	8004978 <aimath_q7_default_relu+0x48>
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	691a      	ldr	r2, [r3, #16]
 8004954:	68fb      	ldr	r3, [r7, #12]
 8004956:	4413      	add	r3, r2
 8004958:	f993 2000 	ldrsb.w	r2, [r3]
 800495c:	683b      	ldr	r3, [r7, #0]
 800495e:	6919      	ldr	r1, [r3, #16]
 8004960:	68fb      	ldr	r3, [r7, #12]
 8004962:	440b      	add	r3, r1
 8004964:	f997 1009 	ldrsb.w	r1, [r7, #9]
 8004968:	428a      	cmp	r2, r1
 800496a:	bfb8      	it	lt
 800496c:	460a      	movlt	r2, r1
 800496e:	b252      	sxtb	r2, r2
 8004970:	701a      	strb	r2, [r3, #0]
 8004972:	68fb      	ldr	r3, [r7, #12]
 8004974:	3301      	adds	r3, #1
 8004976:	60fb      	str	r3, [r7, #12]
 8004978:	6878      	ldr	r0, [r7, #4]
 800497a:	f7fe ff4b 	bl	8003814 <aimath_tensor_elements>
 800497e:	4602      	mov	r2, r0
 8004980:	68fb      	ldr	r3, [r7, #12]
 8004982:	4293      	cmp	r3, r2
 8004984:	d3e4      	bcc.n	8004950 <aimath_q7_default_relu+0x20>
 8004986:	683b      	ldr	r3, [r7, #0]
 8004988:	68db      	ldr	r3, [r3, #12]
 800498a:	897a      	ldrh	r2, [r7, #10]
 800498c:	801a      	strh	r2, [r3, #0]
 800498e:	683b      	ldr	r3, [r7, #0]
 8004990:	68db      	ldr	r3, [r3, #12]
 8004992:	7a7a      	ldrb	r2, [r7, #9]
 8004994:	709a      	strb	r2, [r3, #2]
 8004996:	bf00      	nop
 8004998:	3710      	adds	r7, #16
 800499a:	46bd      	mov	sp, r7
 800499c:	bd80      	pop	{r7, pc}

0800499e <aimath_q7_default_d_relu>:
 800499e:	b580      	push	{r7, lr}
 80049a0:	b084      	sub	sp, #16
 80049a2:	af00      	add	r7, sp, #0
 80049a4:	6078      	str	r0, [r7, #4]
 80049a6:	6039      	str	r1, [r7, #0]
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	68db      	ldr	r3, [r3, #12]
 80049ac:	789b      	ldrb	r3, [r3, #2]
 80049ae:	72fb      	strb	r3, [r7, #11]
 80049b0:	2300      	movs	r3, #0
 80049b2:	60fb      	str	r3, [r7, #12]
 80049b4:	e015      	b.n	80049e2 <aimath_q7_default_d_relu+0x44>
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	691a      	ldr	r2, [r3, #16]
 80049ba:	68fb      	ldr	r3, [r7, #12]
 80049bc:	4413      	add	r3, r2
 80049be:	f993 3000 	ldrsb.w	r3, [r3]
 80049c2:	f997 200b 	ldrsb.w	r2, [r7, #11]
 80049c6:	429a      	cmp	r2, r3
 80049c8:	bfd4      	ite	le
 80049ca:	2301      	movle	r3, #1
 80049cc:	2300      	movgt	r3, #0
 80049ce:	b2d9      	uxtb	r1, r3
 80049d0:	683b      	ldr	r3, [r7, #0]
 80049d2:	691a      	ldr	r2, [r3, #16]
 80049d4:	68fb      	ldr	r3, [r7, #12]
 80049d6:	4413      	add	r3, r2
 80049d8:	b24a      	sxtb	r2, r1
 80049da:	701a      	strb	r2, [r3, #0]
 80049dc:	68fb      	ldr	r3, [r7, #12]
 80049de:	3301      	adds	r3, #1
 80049e0:	60fb      	str	r3, [r7, #12]
 80049e2:	6878      	ldr	r0, [r7, #4]
 80049e4:	f7fe ff16 	bl	8003814 <aimath_tensor_elements>
 80049e8:	4602      	mov	r2, r0
 80049ea:	68fb      	ldr	r3, [r7, #12]
 80049ec:	4293      	cmp	r3, r2
 80049ee:	d3e2      	bcc.n	80049b6 <aimath_q7_default_d_relu+0x18>
 80049f0:	683b      	ldr	r3, [r7, #0]
 80049f2:	68db      	ldr	r3, [r3, #12]
 80049f4:	2200      	movs	r2, #0
 80049f6:	801a      	strh	r2, [r3, #0]
 80049f8:	683b      	ldr	r3, [r7, #0]
 80049fa:	68db      	ldr	r3, [r3, #12]
 80049fc:	2200      	movs	r2, #0
 80049fe:	709a      	strb	r2, [r3, #2]
 8004a00:	bf00      	nop
 8004a02:	3710      	adds	r7, #16
 8004a04:	46bd      	mov	sp, r7
 8004a06:	bd80      	pop	{r7, pc}

08004a08 <aimath_q7_default_softmax>:
 8004a08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004a0c:	b08f      	sub	sp, #60	@ 0x3c
 8004a0e:	af00      	add	r7, sp, #0
 8004a10:	6078      	str	r0, [r7, #4]
 8004a12:	6039      	str	r1, [r7, #0]
 8004a14:	466b      	mov	r3, sp
 8004a16:	461e      	mov	r6, r3
 8004a18:	4aac      	ldr	r2, [pc, #688]	@ (8004ccc <aimath_q7_default_softmax+0x2c4>)
 8004a1a:	f107 0308 	add.w	r3, r7, #8
 8004a1e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8004a22:	e883 0003 	stmia.w	r3, {r0, r1}
 8004a26:	2304      	movs	r3, #4
 8004a28:	843b      	strh	r3, [r7, #32]
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	68db      	ldr	r3, [r3, #12]
 8004a2e:	881b      	ldrh	r3, [r3, #0]
 8004a30:	83fb      	strh	r3, [r7, #30]
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	68db      	ldr	r3, [r3, #12]
 8004a36:	789b      	ldrb	r3, [r3, #2]
 8004a38:	777b      	strb	r3, [r7, #29]
 8004a3a:	2300      	movs	r3, #0
 8004a3c:	627b      	str	r3, [r7, #36]	@ 0x24
 8004a3e:	6878      	ldr	r0, [r7, #4]
 8004a40:	f7fe fee8 	bl	8003814 <aimath_tensor_elements>
 8004a44:	4601      	mov	r1, r0
 8004a46:	460b      	mov	r3, r1
 8004a48:	3b01      	subs	r3, #1
 8004a4a:	61bb      	str	r3, [r7, #24]
 8004a4c:	2300      	movs	r3, #0
 8004a4e:	4688      	mov	r8, r1
 8004a50:	4699      	mov	r9, r3
 8004a52:	f04f 0200 	mov.w	r2, #0
 8004a56:	f04f 0300 	mov.w	r3, #0
 8004a5a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004a5e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004a62:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004a66:	2300      	movs	r3, #0
 8004a68:	460c      	mov	r4, r1
 8004a6a:	461d      	mov	r5, r3
 8004a6c:	f04f 0200 	mov.w	r2, #0
 8004a70:	f04f 0300 	mov.w	r3, #0
 8004a74:	00eb      	lsls	r3, r5, #3
 8004a76:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004a7a:	00e2      	lsls	r2, r4, #3
 8004a7c:	1dcb      	adds	r3, r1, #7
 8004a7e:	08db      	lsrs	r3, r3, #3
 8004a80:	00db      	lsls	r3, r3, #3
 8004a82:	ebad 0d03 	sub.w	sp, sp, r3
 8004a86:	466b      	mov	r3, sp
 8004a88:	3300      	adds	r3, #0
 8004a8a:	617b      	str	r3, [r7, #20]
 8004a8c:	2301      	movs	r3, #1
 8004a8e:	847b      	strh	r3, [r7, #34]	@ 0x22
 8004a90:	687b      	ldr	r3, [r7, #4]
 8004a92:	791b      	ldrb	r3, [r3, #4]
 8004a94:	3b01      	subs	r3, #1
 8004a96:	637b      	str	r3, [r7, #52]	@ 0x34
 8004a98:	e00c      	b.n	8004ab4 <aimath_q7_default_softmax+0xac>
 8004a9a:	687b      	ldr	r3, [r7, #4]
 8004a9c:	689a      	ldr	r2, [r3, #8]
 8004a9e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004aa0:	005b      	lsls	r3, r3, #1
 8004aa2:	4413      	add	r3, r2
 8004aa4:	881b      	ldrh	r3, [r3, #0]
 8004aa6:	8c7a      	ldrh	r2, [r7, #34]	@ 0x22
 8004aa8:	fb12 f303 	smulbb	r3, r2, r3
 8004aac:	847b      	strh	r3, [r7, #34]	@ 0x22
 8004aae:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004ab0:	3b01      	subs	r3, #1
 8004ab2:	637b      	str	r3, [r7, #52]	@ 0x34
 8004ab4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	dcef      	bgt.n	8004a9a <aimath_q7_default_softmax+0x92>
 8004aba:	8bfa      	ldrh	r2, [r7, #30]
 8004abc:	8c3b      	ldrh	r3, [r7, #32]
 8004abe:	429a      	cmp	r2, r3
 8004ac0:	d928      	bls.n	8004b14 <aimath_q7_default_softmax+0x10c>
 8004ac2:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8004ac6:	4619      	mov	r1, r3
 8004ac8:	8bfa      	ldrh	r2, [r7, #30]
 8004aca:	8c3b      	ldrh	r3, [r7, #32]
 8004acc:	1ad3      	subs	r3, r2, r3
 8004ace:	fa01 f303 	lsl.w	r3, r1, r3
 8004ad2:	b21b      	sxth	r3, r3
 8004ad4:	813b      	strh	r3, [r7, #8]
 8004ad6:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8004ada:	4619      	mov	r1, r3
 8004adc:	8bfa      	ldrh	r2, [r7, #30]
 8004ade:	8c3b      	ldrh	r3, [r7, #32]
 8004ae0:	1ad3      	subs	r3, r2, r3
 8004ae2:	fa01 f303 	lsl.w	r3, r1, r3
 8004ae6:	b21b      	sxth	r3, r3
 8004ae8:	817b      	strh	r3, [r7, #10]
 8004aea:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004aee:	4619      	mov	r1, r3
 8004af0:	8bfa      	ldrh	r2, [r7, #30]
 8004af2:	8c3b      	ldrh	r3, [r7, #32]
 8004af4:	1ad3      	subs	r3, r2, r3
 8004af6:	fa01 f303 	lsl.w	r3, r1, r3
 8004afa:	b21b      	sxth	r3, r3
 8004afc:	81bb      	strh	r3, [r7, #12]
 8004afe:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004b02:	4619      	mov	r1, r3
 8004b04:	8bfa      	ldrh	r2, [r7, #30]
 8004b06:	8c3b      	ldrh	r3, [r7, #32]
 8004b08:	1ad3      	subs	r3, r2, r3
 8004b0a:	fa01 f303 	lsl.w	r3, r1, r3
 8004b0e:	b21b      	sxth	r3, r3
 8004b10:	81fb      	strh	r3, [r7, #14]
 8004b12:	e027      	b.n	8004b64 <aimath_q7_default_softmax+0x15c>
 8004b14:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8004b18:	4619      	mov	r1, r3
 8004b1a:	8c3a      	ldrh	r2, [r7, #32]
 8004b1c:	8bfb      	ldrh	r3, [r7, #30]
 8004b1e:	1ad3      	subs	r3, r2, r3
 8004b20:	fa41 f303 	asr.w	r3, r1, r3
 8004b24:	b21b      	sxth	r3, r3
 8004b26:	813b      	strh	r3, [r7, #8]
 8004b28:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8004b2c:	4619      	mov	r1, r3
 8004b2e:	8c3a      	ldrh	r2, [r7, #32]
 8004b30:	8bfb      	ldrh	r3, [r7, #30]
 8004b32:	1ad3      	subs	r3, r2, r3
 8004b34:	fa41 f303 	asr.w	r3, r1, r3
 8004b38:	b21b      	sxth	r3, r3
 8004b3a:	817b      	strh	r3, [r7, #10]
 8004b3c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004b40:	4619      	mov	r1, r3
 8004b42:	8c3a      	ldrh	r2, [r7, #32]
 8004b44:	8bfb      	ldrh	r3, [r7, #30]
 8004b46:	1ad3      	subs	r3, r2, r3
 8004b48:	fa41 f303 	asr.w	r3, r1, r3
 8004b4c:	b21b      	sxth	r3, r3
 8004b4e:	81bb      	strh	r3, [r7, #12]
 8004b50:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004b54:	4619      	mov	r1, r3
 8004b56:	8c3a      	ldrh	r2, [r7, #32]
 8004b58:	8bfb      	ldrh	r3, [r7, #30]
 8004b5a:	1ad3      	subs	r3, r2, r3
 8004b5c:	fa41 f303 	asr.w	r3, r1, r3
 8004b60:	b21b      	sxth	r3, r3
 8004b62:	81fb      	strh	r3, [r7, #14]
 8004b64:	2300      	movs	r3, #0
 8004b66:	637b      	str	r3, [r7, #52]	@ 0x34
 8004b68:	e0d8      	b.n	8004d1c <aimath_q7_default_softmax+0x314>
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	691b      	ldr	r3, [r3, #16]
 8004b6e:	8c7a      	ldrh	r2, [r7, #34]	@ 0x22
 8004b70:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8004b72:	fb01 f202 	mul.w	r2, r1, r2
 8004b76:	4413      	add	r3, r2
 8004b78:	781b      	ldrb	r3, [r3, #0]
 8004b7a:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8004b7e:	2301      	movs	r3, #1
 8004b80:	633b      	str	r3, [r7, #48]	@ 0x30
 8004b82:	e01d      	b.n	8004bc0 <aimath_q7_default_softmax+0x1b8>
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	691b      	ldr	r3, [r3, #16]
 8004b88:	8c7a      	ldrh	r2, [r7, #34]	@ 0x22
 8004b8a:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8004b8c:	fb02 f101 	mul.w	r1, r2, r1
 8004b90:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004b92:	440a      	add	r2, r1
 8004b94:	4413      	add	r3, r2
 8004b96:	f993 3000 	ldrsb.w	r3, [r3]
 8004b9a:	f997 202f 	ldrsb.w	r2, [r7, #47]	@ 0x2f
 8004b9e:	429a      	cmp	r2, r3
 8004ba0:	da0b      	bge.n	8004bba <aimath_q7_default_softmax+0x1b2>
 8004ba2:	687b      	ldr	r3, [r7, #4]
 8004ba4:	691b      	ldr	r3, [r3, #16]
 8004ba6:	8c7a      	ldrh	r2, [r7, #34]	@ 0x22
 8004ba8:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8004baa:	fb02 f101 	mul.w	r1, r2, r1
 8004bae:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004bb0:	440a      	add	r2, r1
 8004bb2:	4413      	add	r3, r2
 8004bb4:	781b      	ldrb	r3, [r3, #0]
 8004bb6:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8004bba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004bbc:	3301      	adds	r3, #1
 8004bbe:	633b      	str	r3, [r7, #48]	@ 0x30
 8004bc0:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8004bc2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004bc4:	429a      	cmp	r2, r3
 8004bc6:	dbdd      	blt.n	8004b84 <aimath_q7_default_softmax+0x17c>
 8004bc8:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8004bcc:	777b      	strb	r3, [r7, #29]
 8004bce:	2300      	movs	r3, #0
 8004bd0:	627b      	str	r3, [r7, #36]	@ 0x24
 8004bd2:	2300      	movs	r3, #0
 8004bd4:	633b      	str	r3, [r7, #48]	@ 0x30
 8004bd6:	e071      	b.n	8004cbc <aimath_q7_default_softmax+0x2b4>
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	691b      	ldr	r3, [r3, #16]
 8004bdc:	8c7a      	ldrh	r2, [r7, #34]	@ 0x22
 8004bde:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8004be0:	fb02 f101 	mul.w	r1, r2, r1
 8004be4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004be6:	440a      	add	r2, r1
 8004be8:	4413      	add	r3, r2
 8004bea:	f993 3000 	ldrsb.w	r3, [r3]
 8004bee:	461a      	mov	r2, r3
 8004bf0:	f997 301d 	ldrsb.w	r3, [r7, #29]
 8004bf4:	b21b      	sxth	r3, r3
 8004bf6:	1ad3      	subs	r3, r2, r3
 8004bf8:	827b      	strh	r3, [r7, #18]
 8004bfa:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8004bfe:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8004c02:	429a      	cmp	r2, r3
 8004c04:	dd0c      	ble.n	8004c20 <aimath_q7_default_softmax+0x218>
 8004c06:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8004c0a:	4613      	mov	r3, r2
 8004c0c:	009b      	lsls	r3, r3, #2
 8004c0e:	4413      	add	r3, r2
 8004c10:	015b      	lsls	r3, r3, #5
 8004c12:	441a      	add	r2, r3
 8004c14:	8bfb      	ldrh	r3, [r7, #30]
 8004c16:	fa42 f303 	asr.w	r3, r2, r3
 8004c1a:	337f      	adds	r3, #127	@ 0x7f
 8004c1c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004c1e:	e03b      	b.n	8004c98 <aimath_q7_default_softmax+0x290>
 8004c20:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8004c24:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8004c28:	429a      	cmp	r2, r3
 8004c2a:	dd0c      	ble.n	8004c46 <aimath_q7_default_softmax+0x23e>
 8004c2c:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8004c30:	4613      	mov	r3, r2
 8004c32:	011b      	lsls	r3, r3, #4
 8004c34:	1a9b      	subs	r3, r3, r2
 8004c36:	009b      	lsls	r3, r3, #2
 8004c38:	1a9a      	subs	r2, r3, r2
 8004c3a:	8bfb      	ldrh	r3, [r7, #30]
 8004c3c:	fa42 f303 	asr.w	r3, r2, r3
 8004c40:	331a      	adds	r3, #26
 8004c42:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004c44:	e028      	b.n	8004c98 <aimath_q7_default_softmax+0x290>
 8004c46:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004c4a:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8004c4e:	429a      	cmp	r2, r3
 8004c50:	dd0c      	ble.n	8004c6c <aimath_q7_default_softmax+0x264>
 8004c52:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8004c56:	4613      	mov	r3, r2
 8004c58:	005b      	lsls	r3, r3, #1
 8004c5a:	4413      	add	r3, r2
 8004c5c:	00db      	lsls	r3, r3, #3
 8004c5e:	1a9a      	subs	r2, r3, r2
 8004c60:	8bfb      	ldrh	r3, [r7, #30]
 8004c62:	fa42 f303 	asr.w	r3, r2, r3
 8004c66:	3b2e      	subs	r3, #46	@ 0x2e
 8004c68:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004c6a:	e015      	b.n	8004c98 <aimath_q7_default_softmax+0x290>
 8004c6c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004c70:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8004c74:	429a      	cmp	r2, r3
 8004c76:	dd0c      	ble.n	8004c92 <aimath_q7_default_softmax+0x28a>
 8004c78:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8004c7c:	4613      	mov	r3, r2
 8004c7e:	005b      	lsls	r3, r3, #1
 8004c80:	4413      	add	r3, r2
 8004c82:	005b      	lsls	r3, r3, #1
 8004c84:	461a      	mov	r2, r3
 8004c86:	8bfb      	ldrh	r3, [r7, #30]
 8004c88:	fa42 f303 	asr.w	r3, r2, r3
 8004c8c:	3b60      	subs	r3, #96	@ 0x60
 8004c8e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004c90:	e002      	b.n	8004c98 <aimath_q7_default_softmax+0x290>
 8004c92:	f06f 037f 	mvn.w	r3, #127	@ 0x7f
 8004c96:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004c98:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004c9a:	3380      	adds	r3, #128	@ 0x80
 8004c9c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004c9e:	4413      	add	r3, r2
 8004ca0:	627b      	str	r3, [r7, #36]	@ 0x24
 8004ca2:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8004ca4:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8004ca6:	fb03 f202 	mul.w	r2, r3, r2
 8004caa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004cac:	4413      	add	r3, r2
 8004cae:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8004cb0:	b251      	sxtb	r1, r2
 8004cb2:	697a      	ldr	r2, [r7, #20]
 8004cb4:	54d1      	strb	r1, [r2, r3]
 8004cb6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004cb8:	3301      	adds	r3, #1
 8004cba:	633b      	str	r3, [r7, #48]	@ 0x30
 8004cbc:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8004cbe:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004cc0:	429a      	cmp	r2, r3
 8004cc2:	db89      	blt.n	8004bd8 <aimath_q7_default_softmax+0x1d0>
 8004cc4:	2300      	movs	r3, #0
 8004cc6:	633b      	str	r3, [r7, #48]	@ 0x30
 8004cc8:	e021      	b.n	8004d0e <aimath_q7_default_softmax+0x306>
 8004cca:	bf00      	nop
 8004ccc:	0800bf8c 	.word	0x0800bf8c
 8004cd0:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8004cd2:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8004cd4:	fb03 f202 	mul.w	r2, r3, r2
 8004cd8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004cda:	4413      	add	r3, r2
 8004cdc:	697a      	ldr	r2, [r7, #20]
 8004cde:	56d3      	ldrsb	r3, [r2, r3]
 8004ce0:	3380      	adds	r3, #128	@ 0x80
 8004ce2:	021a      	lsls	r2, r3, #8
 8004ce4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ce6:	3301      	adds	r3, #1
 8004ce8:	fb92 f3f3 	sdiv	r3, r2, r3
 8004cec:	3b80      	subs	r3, #128	@ 0x80
 8004cee:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004cf0:	683b      	ldr	r3, [r7, #0]
 8004cf2:	691b      	ldr	r3, [r3, #16]
 8004cf4:	8c7a      	ldrh	r2, [r7, #34]	@ 0x22
 8004cf6:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8004cf8:	fb02 f101 	mul.w	r1, r2, r1
 8004cfc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004cfe:	440a      	add	r2, r1
 8004d00:	4413      	add	r3, r2
 8004d02:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8004d04:	b252      	sxtb	r2, r2
 8004d06:	701a      	strb	r2, [r3, #0]
 8004d08:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004d0a:	3301      	adds	r3, #1
 8004d0c:	633b      	str	r3, [r7, #48]	@ 0x30
 8004d0e:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8004d10:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004d12:	429a      	cmp	r2, r3
 8004d14:	dbdc      	blt.n	8004cd0 <aimath_q7_default_softmax+0x2c8>
 8004d16:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004d18:	3301      	adds	r3, #1
 8004d1a:	637b      	str	r3, [r7, #52]	@ 0x34
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	689b      	ldr	r3, [r3, #8]
 8004d20:	881b      	ldrh	r3, [r3, #0]
 8004d22:	461a      	mov	r2, r3
 8004d24:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004d26:	4293      	cmp	r3, r2
 8004d28:	f6ff af1f 	blt.w	8004b6a <aimath_q7_default_softmax+0x162>
 8004d2c:	683b      	ldr	r3, [r7, #0]
 8004d2e:	68db      	ldr	r3, [r3, #12]
 8004d30:	2208      	movs	r2, #8
 8004d32:	801a      	strh	r2, [r3, #0]
 8004d34:	683b      	ldr	r3, [r7, #0]
 8004d36:	68db      	ldr	r3, [r3, #12]
 8004d38:	2280      	movs	r2, #128	@ 0x80
 8004d3a:	709a      	strb	r2, [r3, #2]
 8004d3c:	bf00      	nop
 8004d3e:	46b5      	mov	sp, r6
 8004d40:	373c      	adds	r7, #60	@ 0x3c
 8004d42:	46bd      	mov	sp, r7
 8004d44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08004d48 <HAL_Init>:
 8004d48:	b580      	push	{r7, lr}
 8004d4a:	af00      	add	r7, sp, #0
 8004d4c:	4b0e      	ldr	r3, [pc, #56]	@ (8004d88 <HAL_Init+0x40>)
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	4a0d      	ldr	r2, [pc, #52]	@ (8004d88 <HAL_Init+0x40>)
 8004d52:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004d56:	6013      	str	r3, [r2, #0]
 8004d58:	4b0b      	ldr	r3, [pc, #44]	@ (8004d88 <HAL_Init+0x40>)
 8004d5a:	681b      	ldr	r3, [r3, #0]
 8004d5c:	4a0a      	ldr	r2, [pc, #40]	@ (8004d88 <HAL_Init+0x40>)
 8004d5e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8004d62:	6013      	str	r3, [r2, #0]
 8004d64:	4b08      	ldr	r3, [pc, #32]	@ (8004d88 <HAL_Init+0x40>)
 8004d66:	681b      	ldr	r3, [r3, #0]
 8004d68:	4a07      	ldr	r2, [pc, #28]	@ (8004d88 <HAL_Init+0x40>)
 8004d6a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004d6e:	6013      	str	r3, [r2, #0]
 8004d70:	2003      	movs	r0, #3
 8004d72:	f000 f94f 	bl	8005014 <HAL_NVIC_SetPriorityGrouping>
 8004d76:	2000      	movs	r0, #0
 8004d78:	f000 f808 	bl	8004d8c <HAL_InitTick>
 8004d7c:	f7fd fb30 	bl	80023e0 <HAL_MspInit>
 8004d80:	2300      	movs	r3, #0
 8004d82:	4618      	mov	r0, r3
 8004d84:	bd80      	pop	{r7, pc}
 8004d86:	bf00      	nop
 8004d88:	40023c00 	.word	0x40023c00

08004d8c <HAL_InitTick>:
 8004d8c:	b580      	push	{r7, lr}
 8004d8e:	b082      	sub	sp, #8
 8004d90:	af00      	add	r7, sp, #0
 8004d92:	6078      	str	r0, [r7, #4]
 8004d94:	4b12      	ldr	r3, [pc, #72]	@ (8004de0 <HAL_InitTick+0x54>)
 8004d96:	681a      	ldr	r2, [r3, #0]
 8004d98:	4b12      	ldr	r3, [pc, #72]	@ (8004de4 <HAL_InitTick+0x58>)
 8004d9a:	781b      	ldrb	r3, [r3, #0]
 8004d9c:	4619      	mov	r1, r3
 8004d9e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8004da2:	fbb3 f3f1 	udiv	r3, r3, r1
 8004da6:	fbb2 f3f3 	udiv	r3, r2, r3
 8004daa:	4618      	mov	r0, r3
 8004dac:	f000 f967 	bl	800507e <HAL_SYSTICK_Config>
 8004db0:	4603      	mov	r3, r0
 8004db2:	2b00      	cmp	r3, #0
 8004db4:	d001      	beq.n	8004dba <HAL_InitTick+0x2e>
 8004db6:	2301      	movs	r3, #1
 8004db8:	e00e      	b.n	8004dd8 <HAL_InitTick+0x4c>
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	2b0f      	cmp	r3, #15
 8004dbe:	d80a      	bhi.n	8004dd6 <HAL_InitTick+0x4a>
 8004dc0:	2200      	movs	r2, #0
 8004dc2:	6879      	ldr	r1, [r7, #4]
 8004dc4:	f04f 30ff 	mov.w	r0, #4294967295
 8004dc8:	f000 f92f 	bl	800502a <HAL_NVIC_SetPriority>
 8004dcc:	4a06      	ldr	r2, [pc, #24]	@ (8004de8 <HAL_InitTick+0x5c>)
 8004dce:	687b      	ldr	r3, [r7, #4]
 8004dd0:	6013      	str	r3, [r2, #0]
 8004dd2:	2300      	movs	r3, #0
 8004dd4:	e000      	b.n	8004dd8 <HAL_InitTick+0x4c>
 8004dd6:	2301      	movs	r3, #1
 8004dd8:	4618      	mov	r0, r3
 8004dda:	3708      	adds	r7, #8
 8004ddc:	46bd      	mov	sp, r7
 8004dde:	bd80      	pop	{r7, pc}
 8004de0:	20000540 	.word	0x20000540
 8004de4:	20000578 	.word	0x20000578
 8004de8:	20000574 	.word	0x20000574

08004dec <HAL_IncTick>:
 8004dec:	b480      	push	{r7}
 8004dee:	af00      	add	r7, sp, #0
 8004df0:	4b06      	ldr	r3, [pc, #24]	@ (8004e0c <HAL_IncTick+0x20>)
 8004df2:	781b      	ldrb	r3, [r3, #0]
 8004df4:	461a      	mov	r2, r3
 8004df6:	4b06      	ldr	r3, [pc, #24]	@ (8004e10 <HAL_IncTick+0x24>)
 8004df8:	681b      	ldr	r3, [r3, #0]
 8004dfa:	4413      	add	r3, r2
 8004dfc:	4a04      	ldr	r2, [pc, #16]	@ (8004e10 <HAL_IncTick+0x24>)
 8004dfe:	6013      	str	r3, [r2, #0]
 8004e00:	bf00      	nop
 8004e02:	46bd      	mov	sp, r7
 8004e04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e08:	4770      	bx	lr
 8004e0a:	bf00      	nop
 8004e0c:	20000578 	.word	0x20000578
 8004e10:	200009c8 	.word	0x200009c8

08004e14 <HAL_GetTick>:
 8004e14:	b480      	push	{r7}
 8004e16:	af00      	add	r7, sp, #0
 8004e18:	4b03      	ldr	r3, [pc, #12]	@ (8004e28 <HAL_GetTick+0x14>)
 8004e1a:	681b      	ldr	r3, [r3, #0]
 8004e1c:	4618      	mov	r0, r3
 8004e1e:	46bd      	mov	sp, r7
 8004e20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e24:	4770      	bx	lr
 8004e26:	bf00      	nop
 8004e28:	200009c8 	.word	0x200009c8

08004e2c <HAL_Delay>:
 8004e2c:	b580      	push	{r7, lr}
 8004e2e:	b084      	sub	sp, #16
 8004e30:	af00      	add	r7, sp, #0
 8004e32:	6078      	str	r0, [r7, #4]
 8004e34:	f7ff ffee 	bl	8004e14 <HAL_GetTick>
 8004e38:	60b8      	str	r0, [r7, #8]
 8004e3a:	687b      	ldr	r3, [r7, #4]
 8004e3c:	60fb      	str	r3, [r7, #12]
 8004e3e:	68fb      	ldr	r3, [r7, #12]
 8004e40:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e44:	d005      	beq.n	8004e52 <HAL_Delay+0x26>
 8004e46:	4b0a      	ldr	r3, [pc, #40]	@ (8004e70 <HAL_Delay+0x44>)
 8004e48:	781b      	ldrb	r3, [r3, #0]
 8004e4a:	461a      	mov	r2, r3
 8004e4c:	68fb      	ldr	r3, [r7, #12]
 8004e4e:	4413      	add	r3, r2
 8004e50:	60fb      	str	r3, [r7, #12]
 8004e52:	bf00      	nop
 8004e54:	f7ff ffde 	bl	8004e14 <HAL_GetTick>
 8004e58:	4602      	mov	r2, r0
 8004e5a:	68bb      	ldr	r3, [r7, #8]
 8004e5c:	1ad3      	subs	r3, r2, r3
 8004e5e:	68fa      	ldr	r2, [r7, #12]
 8004e60:	429a      	cmp	r2, r3
 8004e62:	d8f7      	bhi.n	8004e54 <HAL_Delay+0x28>
 8004e64:	bf00      	nop
 8004e66:	bf00      	nop
 8004e68:	3710      	adds	r7, #16
 8004e6a:	46bd      	mov	sp, r7
 8004e6c:	bd80      	pop	{r7, pc}
 8004e6e:	bf00      	nop
 8004e70:	20000578 	.word	0x20000578

08004e74 <__NVIC_SetPriorityGrouping>:
 8004e74:	b480      	push	{r7}
 8004e76:	b085      	sub	sp, #20
 8004e78:	af00      	add	r7, sp, #0
 8004e7a:	6078      	str	r0, [r7, #4]
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	f003 0307 	and.w	r3, r3, #7
 8004e82:	60fb      	str	r3, [r7, #12]
 8004e84:	4b0c      	ldr	r3, [pc, #48]	@ (8004eb8 <__NVIC_SetPriorityGrouping+0x44>)
 8004e86:	68db      	ldr	r3, [r3, #12]
 8004e88:	60bb      	str	r3, [r7, #8]
 8004e8a:	68ba      	ldr	r2, [r7, #8]
 8004e8c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8004e90:	4013      	ands	r3, r2
 8004e92:	60bb      	str	r3, [r7, #8]
 8004e94:	68fb      	ldr	r3, [r7, #12]
 8004e96:	021a      	lsls	r2, r3, #8
 8004e98:	68bb      	ldr	r3, [r7, #8]
 8004e9a:	4313      	orrs	r3, r2
 8004e9c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004ea0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004ea4:	60bb      	str	r3, [r7, #8]
 8004ea6:	4a04      	ldr	r2, [pc, #16]	@ (8004eb8 <__NVIC_SetPriorityGrouping+0x44>)
 8004ea8:	68bb      	ldr	r3, [r7, #8]
 8004eaa:	60d3      	str	r3, [r2, #12]
 8004eac:	bf00      	nop
 8004eae:	3714      	adds	r7, #20
 8004eb0:	46bd      	mov	sp, r7
 8004eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004eb6:	4770      	bx	lr
 8004eb8:	e000ed00 	.word	0xe000ed00

08004ebc <__NVIC_GetPriorityGrouping>:
 8004ebc:	b480      	push	{r7}
 8004ebe:	af00      	add	r7, sp, #0
 8004ec0:	4b04      	ldr	r3, [pc, #16]	@ (8004ed4 <__NVIC_GetPriorityGrouping+0x18>)
 8004ec2:	68db      	ldr	r3, [r3, #12]
 8004ec4:	0a1b      	lsrs	r3, r3, #8
 8004ec6:	f003 0307 	and.w	r3, r3, #7
 8004eca:	4618      	mov	r0, r3
 8004ecc:	46bd      	mov	sp, r7
 8004ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ed2:	4770      	bx	lr
 8004ed4:	e000ed00 	.word	0xe000ed00

08004ed8 <__NVIC_EnableIRQ>:
 8004ed8:	b480      	push	{r7}
 8004eda:	b083      	sub	sp, #12
 8004edc:	af00      	add	r7, sp, #0
 8004ede:	4603      	mov	r3, r0
 8004ee0:	71fb      	strb	r3, [r7, #7]
 8004ee2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004ee6:	2b00      	cmp	r3, #0
 8004ee8:	db0b      	blt.n	8004f02 <__NVIC_EnableIRQ+0x2a>
 8004eea:	79fb      	ldrb	r3, [r7, #7]
 8004eec:	f003 021f 	and.w	r2, r3, #31
 8004ef0:	4907      	ldr	r1, [pc, #28]	@ (8004f10 <__NVIC_EnableIRQ+0x38>)
 8004ef2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004ef6:	095b      	lsrs	r3, r3, #5
 8004ef8:	2001      	movs	r0, #1
 8004efa:	fa00 f202 	lsl.w	r2, r0, r2
 8004efe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004f02:	bf00      	nop
 8004f04:	370c      	adds	r7, #12
 8004f06:	46bd      	mov	sp, r7
 8004f08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f0c:	4770      	bx	lr
 8004f0e:	bf00      	nop
 8004f10:	e000e100 	.word	0xe000e100

08004f14 <__NVIC_SetPriority>:
 8004f14:	b480      	push	{r7}
 8004f16:	b083      	sub	sp, #12
 8004f18:	af00      	add	r7, sp, #0
 8004f1a:	4603      	mov	r3, r0
 8004f1c:	6039      	str	r1, [r7, #0]
 8004f1e:	71fb      	strb	r3, [r7, #7]
 8004f20:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004f24:	2b00      	cmp	r3, #0
 8004f26:	db0a      	blt.n	8004f3e <__NVIC_SetPriority+0x2a>
 8004f28:	683b      	ldr	r3, [r7, #0]
 8004f2a:	b2da      	uxtb	r2, r3
 8004f2c:	490c      	ldr	r1, [pc, #48]	@ (8004f60 <__NVIC_SetPriority+0x4c>)
 8004f2e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004f32:	0112      	lsls	r2, r2, #4
 8004f34:	b2d2      	uxtb	r2, r2
 8004f36:	440b      	add	r3, r1
 8004f38:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8004f3c:	e00a      	b.n	8004f54 <__NVIC_SetPriority+0x40>
 8004f3e:	683b      	ldr	r3, [r7, #0]
 8004f40:	b2da      	uxtb	r2, r3
 8004f42:	4908      	ldr	r1, [pc, #32]	@ (8004f64 <__NVIC_SetPriority+0x50>)
 8004f44:	79fb      	ldrb	r3, [r7, #7]
 8004f46:	f003 030f 	and.w	r3, r3, #15
 8004f4a:	3b04      	subs	r3, #4
 8004f4c:	0112      	lsls	r2, r2, #4
 8004f4e:	b2d2      	uxtb	r2, r2
 8004f50:	440b      	add	r3, r1
 8004f52:	761a      	strb	r2, [r3, #24]
 8004f54:	bf00      	nop
 8004f56:	370c      	adds	r7, #12
 8004f58:	46bd      	mov	sp, r7
 8004f5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f5e:	4770      	bx	lr
 8004f60:	e000e100 	.word	0xe000e100
 8004f64:	e000ed00 	.word	0xe000ed00

08004f68 <NVIC_EncodePriority>:
 8004f68:	b480      	push	{r7}
 8004f6a:	b089      	sub	sp, #36	@ 0x24
 8004f6c:	af00      	add	r7, sp, #0
 8004f6e:	60f8      	str	r0, [r7, #12]
 8004f70:	60b9      	str	r1, [r7, #8]
 8004f72:	607a      	str	r2, [r7, #4]
 8004f74:	68fb      	ldr	r3, [r7, #12]
 8004f76:	f003 0307 	and.w	r3, r3, #7
 8004f7a:	61fb      	str	r3, [r7, #28]
 8004f7c:	69fb      	ldr	r3, [r7, #28]
 8004f7e:	f1c3 0307 	rsb	r3, r3, #7
 8004f82:	2b04      	cmp	r3, #4
 8004f84:	bf28      	it	cs
 8004f86:	2304      	movcs	r3, #4
 8004f88:	61bb      	str	r3, [r7, #24]
 8004f8a:	69fb      	ldr	r3, [r7, #28]
 8004f8c:	3304      	adds	r3, #4
 8004f8e:	2b06      	cmp	r3, #6
 8004f90:	d902      	bls.n	8004f98 <NVIC_EncodePriority+0x30>
 8004f92:	69fb      	ldr	r3, [r7, #28]
 8004f94:	3b03      	subs	r3, #3
 8004f96:	e000      	b.n	8004f9a <NVIC_EncodePriority+0x32>
 8004f98:	2300      	movs	r3, #0
 8004f9a:	617b      	str	r3, [r7, #20]
 8004f9c:	f04f 32ff 	mov.w	r2, #4294967295
 8004fa0:	69bb      	ldr	r3, [r7, #24]
 8004fa2:	fa02 f303 	lsl.w	r3, r2, r3
 8004fa6:	43da      	mvns	r2, r3
 8004fa8:	68bb      	ldr	r3, [r7, #8]
 8004faa:	401a      	ands	r2, r3
 8004fac:	697b      	ldr	r3, [r7, #20]
 8004fae:	409a      	lsls	r2, r3
 8004fb0:	f04f 31ff 	mov.w	r1, #4294967295
 8004fb4:	697b      	ldr	r3, [r7, #20]
 8004fb6:	fa01 f303 	lsl.w	r3, r1, r3
 8004fba:	43d9      	mvns	r1, r3
 8004fbc:	687b      	ldr	r3, [r7, #4]
 8004fbe:	400b      	ands	r3, r1
 8004fc0:	4313      	orrs	r3, r2
 8004fc2:	4618      	mov	r0, r3
 8004fc4:	3724      	adds	r7, #36	@ 0x24
 8004fc6:	46bd      	mov	sp, r7
 8004fc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fcc:	4770      	bx	lr
	...

08004fd0 <SysTick_Config>:
 8004fd0:	b580      	push	{r7, lr}
 8004fd2:	b082      	sub	sp, #8
 8004fd4:	af00      	add	r7, sp, #0
 8004fd6:	6078      	str	r0, [r7, #4]
 8004fd8:	687b      	ldr	r3, [r7, #4]
 8004fda:	3b01      	subs	r3, #1
 8004fdc:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8004fe0:	d301      	bcc.n	8004fe6 <SysTick_Config+0x16>
 8004fe2:	2301      	movs	r3, #1
 8004fe4:	e00f      	b.n	8005006 <SysTick_Config+0x36>
 8004fe6:	4a0a      	ldr	r2, [pc, #40]	@ (8005010 <SysTick_Config+0x40>)
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	3b01      	subs	r3, #1
 8004fec:	6053      	str	r3, [r2, #4]
 8004fee:	210f      	movs	r1, #15
 8004ff0:	f04f 30ff 	mov.w	r0, #4294967295
 8004ff4:	f7ff ff8e 	bl	8004f14 <__NVIC_SetPriority>
 8004ff8:	4b05      	ldr	r3, [pc, #20]	@ (8005010 <SysTick_Config+0x40>)
 8004ffa:	2200      	movs	r2, #0
 8004ffc:	609a      	str	r2, [r3, #8]
 8004ffe:	4b04      	ldr	r3, [pc, #16]	@ (8005010 <SysTick_Config+0x40>)
 8005000:	2207      	movs	r2, #7
 8005002:	601a      	str	r2, [r3, #0]
 8005004:	2300      	movs	r3, #0
 8005006:	4618      	mov	r0, r3
 8005008:	3708      	adds	r7, #8
 800500a:	46bd      	mov	sp, r7
 800500c:	bd80      	pop	{r7, pc}
 800500e:	bf00      	nop
 8005010:	e000e010 	.word	0xe000e010

08005014 <HAL_NVIC_SetPriorityGrouping>:
 8005014:	b580      	push	{r7, lr}
 8005016:	b082      	sub	sp, #8
 8005018:	af00      	add	r7, sp, #0
 800501a:	6078      	str	r0, [r7, #4]
 800501c:	6878      	ldr	r0, [r7, #4]
 800501e:	f7ff ff29 	bl	8004e74 <__NVIC_SetPriorityGrouping>
 8005022:	bf00      	nop
 8005024:	3708      	adds	r7, #8
 8005026:	46bd      	mov	sp, r7
 8005028:	bd80      	pop	{r7, pc}

0800502a <HAL_NVIC_SetPriority>:
 800502a:	b580      	push	{r7, lr}
 800502c:	b086      	sub	sp, #24
 800502e:	af00      	add	r7, sp, #0
 8005030:	4603      	mov	r3, r0
 8005032:	60b9      	str	r1, [r7, #8]
 8005034:	607a      	str	r2, [r7, #4]
 8005036:	73fb      	strb	r3, [r7, #15]
 8005038:	2300      	movs	r3, #0
 800503a:	617b      	str	r3, [r7, #20]
 800503c:	f7ff ff3e 	bl	8004ebc <__NVIC_GetPriorityGrouping>
 8005040:	6178      	str	r0, [r7, #20]
 8005042:	687a      	ldr	r2, [r7, #4]
 8005044:	68b9      	ldr	r1, [r7, #8]
 8005046:	6978      	ldr	r0, [r7, #20]
 8005048:	f7ff ff8e 	bl	8004f68 <NVIC_EncodePriority>
 800504c:	4602      	mov	r2, r0
 800504e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8005052:	4611      	mov	r1, r2
 8005054:	4618      	mov	r0, r3
 8005056:	f7ff ff5d 	bl	8004f14 <__NVIC_SetPriority>
 800505a:	bf00      	nop
 800505c:	3718      	adds	r7, #24
 800505e:	46bd      	mov	sp, r7
 8005060:	bd80      	pop	{r7, pc}

08005062 <HAL_NVIC_EnableIRQ>:
 8005062:	b580      	push	{r7, lr}
 8005064:	b082      	sub	sp, #8
 8005066:	af00      	add	r7, sp, #0
 8005068:	4603      	mov	r3, r0
 800506a:	71fb      	strb	r3, [r7, #7]
 800506c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005070:	4618      	mov	r0, r3
 8005072:	f7ff ff31 	bl	8004ed8 <__NVIC_EnableIRQ>
 8005076:	bf00      	nop
 8005078:	3708      	adds	r7, #8
 800507a:	46bd      	mov	sp, r7
 800507c:	bd80      	pop	{r7, pc}

0800507e <HAL_SYSTICK_Config>:
 800507e:	b580      	push	{r7, lr}
 8005080:	b082      	sub	sp, #8
 8005082:	af00      	add	r7, sp, #0
 8005084:	6078      	str	r0, [r7, #4]
 8005086:	6878      	ldr	r0, [r7, #4]
 8005088:	f7ff ffa2 	bl	8004fd0 <SysTick_Config>
 800508c:	4603      	mov	r3, r0
 800508e:	4618      	mov	r0, r3
 8005090:	3708      	adds	r7, #8
 8005092:	46bd      	mov	sp, r7
 8005094:	bd80      	pop	{r7, pc}

08005096 <HAL_DMA_Abort>:
 8005096:	b580      	push	{r7, lr}
 8005098:	b084      	sub	sp, #16
 800509a:	af00      	add	r7, sp, #0
 800509c:	6078      	str	r0, [r7, #4]
 800509e:	687b      	ldr	r3, [r7, #4]
 80050a0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80050a2:	60fb      	str	r3, [r7, #12]
 80050a4:	f7ff feb6 	bl	8004e14 <HAL_GetTick>
 80050a8:	60b8      	str	r0, [r7, #8]
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80050b0:	b2db      	uxtb	r3, r3
 80050b2:	2b02      	cmp	r3, #2
 80050b4:	d008      	beq.n	80050c8 <HAL_DMA_Abort+0x32>
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	2280      	movs	r2, #128	@ 0x80
 80050ba:	655a      	str	r2, [r3, #84]	@ 0x54
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	2200      	movs	r2, #0
 80050c0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80050c4:	2301      	movs	r3, #1
 80050c6:	e052      	b.n	800516e <HAL_DMA_Abort+0xd8>
 80050c8:	687b      	ldr	r3, [r7, #4]
 80050ca:	681b      	ldr	r3, [r3, #0]
 80050cc:	681a      	ldr	r2, [r3, #0]
 80050ce:	687b      	ldr	r3, [r7, #4]
 80050d0:	681b      	ldr	r3, [r3, #0]
 80050d2:	f022 0216 	bic.w	r2, r2, #22
 80050d6:	601a      	str	r2, [r3, #0]
 80050d8:	687b      	ldr	r3, [r7, #4]
 80050da:	681b      	ldr	r3, [r3, #0]
 80050dc:	695a      	ldr	r2, [r3, #20]
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	681b      	ldr	r3, [r3, #0]
 80050e2:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80050e6:	615a      	str	r2, [r3, #20]
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80050ec:	2b00      	cmp	r3, #0
 80050ee:	d103      	bne.n	80050f8 <HAL_DMA_Abort+0x62>
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80050f4:	2b00      	cmp	r3, #0
 80050f6:	d007      	beq.n	8005108 <HAL_DMA_Abort+0x72>
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	681b      	ldr	r3, [r3, #0]
 80050fc:	681a      	ldr	r2, [r3, #0]
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	681b      	ldr	r3, [r3, #0]
 8005102:	f022 0208 	bic.w	r2, r2, #8
 8005106:	601a      	str	r2, [r3, #0]
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	681b      	ldr	r3, [r3, #0]
 800510c:	681a      	ldr	r2, [r3, #0]
 800510e:	687b      	ldr	r3, [r7, #4]
 8005110:	681b      	ldr	r3, [r3, #0]
 8005112:	f022 0201 	bic.w	r2, r2, #1
 8005116:	601a      	str	r2, [r3, #0]
 8005118:	e013      	b.n	8005142 <HAL_DMA_Abort+0xac>
 800511a:	f7ff fe7b 	bl	8004e14 <HAL_GetTick>
 800511e:	4602      	mov	r2, r0
 8005120:	68bb      	ldr	r3, [r7, #8]
 8005122:	1ad3      	subs	r3, r2, r3
 8005124:	2b05      	cmp	r3, #5
 8005126:	d90c      	bls.n	8005142 <HAL_DMA_Abort+0xac>
 8005128:	687b      	ldr	r3, [r7, #4]
 800512a:	2220      	movs	r2, #32
 800512c:	655a      	str	r2, [r3, #84]	@ 0x54
 800512e:	687b      	ldr	r3, [r7, #4]
 8005130:	2203      	movs	r2, #3
 8005132:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	2200      	movs	r2, #0
 800513a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800513e:	2303      	movs	r3, #3
 8005140:	e015      	b.n	800516e <HAL_DMA_Abort+0xd8>
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	681b      	ldr	r3, [r3, #0]
 8005146:	681b      	ldr	r3, [r3, #0]
 8005148:	f003 0301 	and.w	r3, r3, #1
 800514c:	2b00      	cmp	r3, #0
 800514e:	d1e4      	bne.n	800511a <HAL_DMA_Abort+0x84>
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8005154:	223f      	movs	r2, #63	@ 0x3f
 8005156:	409a      	lsls	r2, r3
 8005158:	68fb      	ldr	r3, [r7, #12]
 800515a:	609a      	str	r2, [r3, #8]
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	2201      	movs	r2, #1
 8005160:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	2200      	movs	r2, #0
 8005168:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800516c:	2300      	movs	r3, #0
 800516e:	4618      	mov	r0, r3
 8005170:	3710      	adds	r7, #16
 8005172:	46bd      	mov	sp, r7
 8005174:	bd80      	pop	{r7, pc}

08005176 <HAL_DMA_Abort_IT>:
 8005176:	b480      	push	{r7}
 8005178:	b083      	sub	sp, #12
 800517a:	af00      	add	r7, sp, #0
 800517c:	6078      	str	r0, [r7, #4]
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8005184:	b2db      	uxtb	r3, r3
 8005186:	2b02      	cmp	r3, #2
 8005188:	d004      	beq.n	8005194 <HAL_DMA_Abort_IT+0x1e>
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	2280      	movs	r2, #128	@ 0x80
 800518e:	655a      	str	r2, [r3, #84]	@ 0x54
 8005190:	2301      	movs	r3, #1
 8005192:	e00c      	b.n	80051ae <HAL_DMA_Abort_IT+0x38>
 8005194:	687b      	ldr	r3, [r7, #4]
 8005196:	2205      	movs	r2, #5
 8005198:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	681b      	ldr	r3, [r3, #0]
 80051a0:	681a      	ldr	r2, [r3, #0]
 80051a2:	687b      	ldr	r3, [r7, #4]
 80051a4:	681b      	ldr	r3, [r3, #0]
 80051a6:	f022 0201 	bic.w	r2, r2, #1
 80051aa:	601a      	str	r2, [r3, #0]
 80051ac:	2300      	movs	r3, #0
 80051ae:	4618      	mov	r0, r3
 80051b0:	370c      	adds	r7, #12
 80051b2:	46bd      	mov	sp, r7
 80051b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051b8:	4770      	bx	lr
	...

080051bc <HAL_GPIO_Init>:
 80051bc:	b480      	push	{r7}
 80051be:	b089      	sub	sp, #36	@ 0x24
 80051c0:	af00      	add	r7, sp, #0
 80051c2:	6078      	str	r0, [r7, #4]
 80051c4:	6039      	str	r1, [r7, #0]
 80051c6:	2300      	movs	r3, #0
 80051c8:	617b      	str	r3, [r7, #20]
 80051ca:	2300      	movs	r3, #0
 80051cc:	613b      	str	r3, [r7, #16]
 80051ce:	2300      	movs	r3, #0
 80051d0:	61bb      	str	r3, [r7, #24]
 80051d2:	2300      	movs	r3, #0
 80051d4:	61fb      	str	r3, [r7, #28]
 80051d6:	e159      	b.n	800548c <HAL_GPIO_Init+0x2d0>
 80051d8:	2201      	movs	r2, #1
 80051da:	69fb      	ldr	r3, [r7, #28]
 80051dc:	fa02 f303 	lsl.w	r3, r2, r3
 80051e0:	617b      	str	r3, [r7, #20]
 80051e2:	683b      	ldr	r3, [r7, #0]
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	697a      	ldr	r2, [r7, #20]
 80051e8:	4013      	ands	r3, r2
 80051ea:	613b      	str	r3, [r7, #16]
 80051ec:	693a      	ldr	r2, [r7, #16]
 80051ee:	697b      	ldr	r3, [r7, #20]
 80051f0:	429a      	cmp	r2, r3
 80051f2:	f040 8148 	bne.w	8005486 <HAL_GPIO_Init+0x2ca>
 80051f6:	683b      	ldr	r3, [r7, #0]
 80051f8:	685b      	ldr	r3, [r3, #4]
 80051fa:	f003 0303 	and.w	r3, r3, #3
 80051fe:	2b01      	cmp	r3, #1
 8005200:	d005      	beq.n	800520e <HAL_GPIO_Init+0x52>
 8005202:	683b      	ldr	r3, [r7, #0]
 8005204:	685b      	ldr	r3, [r3, #4]
 8005206:	f003 0303 	and.w	r3, r3, #3
 800520a:	2b02      	cmp	r3, #2
 800520c:	d130      	bne.n	8005270 <HAL_GPIO_Init+0xb4>
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	689b      	ldr	r3, [r3, #8]
 8005212:	61bb      	str	r3, [r7, #24]
 8005214:	69fb      	ldr	r3, [r7, #28]
 8005216:	005b      	lsls	r3, r3, #1
 8005218:	2203      	movs	r2, #3
 800521a:	fa02 f303 	lsl.w	r3, r2, r3
 800521e:	43db      	mvns	r3, r3
 8005220:	69ba      	ldr	r2, [r7, #24]
 8005222:	4013      	ands	r3, r2
 8005224:	61bb      	str	r3, [r7, #24]
 8005226:	683b      	ldr	r3, [r7, #0]
 8005228:	68da      	ldr	r2, [r3, #12]
 800522a:	69fb      	ldr	r3, [r7, #28]
 800522c:	005b      	lsls	r3, r3, #1
 800522e:	fa02 f303 	lsl.w	r3, r2, r3
 8005232:	69ba      	ldr	r2, [r7, #24]
 8005234:	4313      	orrs	r3, r2
 8005236:	61bb      	str	r3, [r7, #24]
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	69ba      	ldr	r2, [r7, #24]
 800523c:	609a      	str	r2, [r3, #8]
 800523e:	687b      	ldr	r3, [r7, #4]
 8005240:	685b      	ldr	r3, [r3, #4]
 8005242:	61bb      	str	r3, [r7, #24]
 8005244:	2201      	movs	r2, #1
 8005246:	69fb      	ldr	r3, [r7, #28]
 8005248:	fa02 f303 	lsl.w	r3, r2, r3
 800524c:	43db      	mvns	r3, r3
 800524e:	69ba      	ldr	r2, [r7, #24]
 8005250:	4013      	ands	r3, r2
 8005252:	61bb      	str	r3, [r7, #24]
 8005254:	683b      	ldr	r3, [r7, #0]
 8005256:	685b      	ldr	r3, [r3, #4]
 8005258:	091b      	lsrs	r3, r3, #4
 800525a:	f003 0201 	and.w	r2, r3, #1
 800525e:	69fb      	ldr	r3, [r7, #28]
 8005260:	fa02 f303 	lsl.w	r3, r2, r3
 8005264:	69ba      	ldr	r2, [r7, #24]
 8005266:	4313      	orrs	r3, r2
 8005268:	61bb      	str	r3, [r7, #24]
 800526a:	687b      	ldr	r3, [r7, #4]
 800526c:	69ba      	ldr	r2, [r7, #24]
 800526e:	605a      	str	r2, [r3, #4]
 8005270:	683b      	ldr	r3, [r7, #0]
 8005272:	685b      	ldr	r3, [r3, #4]
 8005274:	f003 0303 	and.w	r3, r3, #3
 8005278:	2b03      	cmp	r3, #3
 800527a:	d017      	beq.n	80052ac <HAL_GPIO_Init+0xf0>
 800527c:	687b      	ldr	r3, [r7, #4]
 800527e:	68db      	ldr	r3, [r3, #12]
 8005280:	61bb      	str	r3, [r7, #24]
 8005282:	69fb      	ldr	r3, [r7, #28]
 8005284:	005b      	lsls	r3, r3, #1
 8005286:	2203      	movs	r2, #3
 8005288:	fa02 f303 	lsl.w	r3, r2, r3
 800528c:	43db      	mvns	r3, r3
 800528e:	69ba      	ldr	r2, [r7, #24]
 8005290:	4013      	ands	r3, r2
 8005292:	61bb      	str	r3, [r7, #24]
 8005294:	683b      	ldr	r3, [r7, #0]
 8005296:	689a      	ldr	r2, [r3, #8]
 8005298:	69fb      	ldr	r3, [r7, #28]
 800529a:	005b      	lsls	r3, r3, #1
 800529c:	fa02 f303 	lsl.w	r3, r2, r3
 80052a0:	69ba      	ldr	r2, [r7, #24]
 80052a2:	4313      	orrs	r3, r2
 80052a4:	61bb      	str	r3, [r7, #24]
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	69ba      	ldr	r2, [r7, #24]
 80052aa:	60da      	str	r2, [r3, #12]
 80052ac:	683b      	ldr	r3, [r7, #0]
 80052ae:	685b      	ldr	r3, [r3, #4]
 80052b0:	f003 0303 	and.w	r3, r3, #3
 80052b4:	2b02      	cmp	r3, #2
 80052b6:	d123      	bne.n	8005300 <HAL_GPIO_Init+0x144>
 80052b8:	69fb      	ldr	r3, [r7, #28]
 80052ba:	08da      	lsrs	r2, r3, #3
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	3208      	adds	r2, #8
 80052c0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80052c4:	61bb      	str	r3, [r7, #24]
 80052c6:	69fb      	ldr	r3, [r7, #28]
 80052c8:	f003 0307 	and.w	r3, r3, #7
 80052cc:	009b      	lsls	r3, r3, #2
 80052ce:	220f      	movs	r2, #15
 80052d0:	fa02 f303 	lsl.w	r3, r2, r3
 80052d4:	43db      	mvns	r3, r3
 80052d6:	69ba      	ldr	r2, [r7, #24]
 80052d8:	4013      	ands	r3, r2
 80052da:	61bb      	str	r3, [r7, #24]
 80052dc:	683b      	ldr	r3, [r7, #0]
 80052de:	691a      	ldr	r2, [r3, #16]
 80052e0:	69fb      	ldr	r3, [r7, #28]
 80052e2:	f003 0307 	and.w	r3, r3, #7
 80052e6:	009b      	lsls	r3, r3, #2
 80052e8:	fa02 f303 	lsl.w	r3, r2, r3
 80052ec:	69ba      	ldr	r2, [r7, #24]
 80052ee:	4313      	orrs	r3, r2
 80052f0:	61bb      	str	r3, [r7, #24]
 80052f2:	69fb      	ldr	r3, [r7, #28]
 80052f4:	08da      	lsrs	r2, r3, #3
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	3208      	adds	r2, #8
 80052fa:	69b9      	ldr	r1, [r7, #24]
 80052fc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8005300:	687b      	ldr	r3, [r7, #4]
 8005302:	681b      	ldr	r3, [r3, #0]
 8005304:	61bb      	str	r3, [r7, #24]
 8005306:	69fb      	ldr	r3, [r7, #28]
 8005308:	005b      	lsls	r3, r3, #1
 800530a:	2203      	movs	r2, #3
 800530c:	fa02 f303 	lsl.w	r3, r2, r3
 8005310:	43db      	mvns	r3, r3
 8005312:	69ba      	ldr	r2, [r7, #24]
 8005314:	4013      	ands	r3, r2
 8005316:	61bb      	str	r3, [r7, #24]
 8005318:	683b      	ldr	r3, [r7, #0]
 800531a:	685b      	ldr	r3, [r3, #4]
 800531c:	f003 0203 	and.w	r2, r3, #3
 8005320:	69fb      	ldr	r3, [r7, #28]
 8005322:	005b      	lsls	r3, r3, #1
 8005324:	fa02 f303 	lsl.w	r3, r2, r3
 8005328:	69ba      	ldr	r2, [r7, #24]
 800532a:	4313      	orrs	r3, r2
 800532c:	61bb      	str	r3, [r7, #24]
 800532e:	687b      	ldr	r3, [r7, #4]
 8005330:	69ba      	ldr	r2, [r7, #24]
 8005332:	601a      	str	r2, [r3, #0]
 8005334:	683b      	ldr	r3, [r7, #0]
 8005336:	685b      	ldr	r3, [r3, #4]
 8005338:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800533c:	2b00      	cmp	r3, #0
 800533e:	f000 80a2 	beq.w	8005486 <HAL_GPIO_Init+0x2ca>
 8005342:	2300      	movs	r3, #0
 8005344:	60fb      	str	r3, [r7, #12]
 8005346:	4b57      	ldr	r3, [pc, #348]	@ (80054a4 <HAL_GPIO_Init+0x2e8>)
 8005348:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800534a:	4a56      	ldr	r2, [pc, #344]	@ (80054a4 <HAL_GPIO_Init+0x2e8>)
 800534c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005350:	6453      	str	r3, [r2, #68]	@ 0x44
 8005352:	4b54      	ldr	r3, [pc, #336]	@ (80054a4 <HAL_GPIO_Init+0x2e8>)
 8005354:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005356:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800535a:	60fb      	str	r3, [r7, #12]
 800535c:	68fb      	ldr	r3, [r7, #12]
 800535e:	4a52      	ldr	r2, [pc, #328]	@ (80054a8 <HAL_GPIO_Init+0x2ec>)
 8005360:	69fb      	ldr	r3, [r7, #28]
 8005362:	089b      	lsrs	r3, r3, #2
 8005364:	3302      	adds	r3, #2
 8005366:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800536a:	61bb      	str	r3, [r7, #24]
 800536c:	69fb      	ldr	r3, [r7, #28]
 800536e:	f003 0303 	and.w	r3, r3, #3
 8005372:	009b      	lsls	r3, r3, #2
 8005374:	220f      	movs	r2, #15
 8005376:	fa02 f303 	lsl.w	r3, r2, r3
 800537a:	43db      	mvns	r3, r3
 800537c:	69ba      	ldr	r2, [r7, #24]
 800537e:	4013      	ands	r3, r2
 8005380:	61bb      	str	r3, [r7, #24]
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	4a49      	ldr	r2, [pc, #292]	@ (80054ac <HAL_GPIO_Init+0x2f0>)
 8005386:	4293      	cmp	r3, r2
 8005388:	d019      	beq.n	80053be <HAL_GPIO_Init+0x202>
 800538a:	687b      	ldr	r3, [r7, #4]
 800538c:	4a48      	ldr	r2, [pc, #288]	@ (80054b0 <HAL_GPIO_Init+0x2f4>)
 800538e:	4293      	cmp	r3, r2
 8005390:	d013      	beq.n	80053ba <HAL_GPIO_Init+0x1fe>
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	4a47      	ldr	r2, [pc, #284]	@ (80054b4 <HAL_GPIO_Init+0x2f8>)
 8005396:	4293      	cmp	r3, r2
 8005398:	d00d      	beq.n	80053b6 <HAL_GPIO_Init+0x1fa>
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	4a46      	ldr	r2, [pc, #280]	@ (80054b8 <HAL_GPIO_Init+0x2fc>)
 800539e:	4293      	cmp	r3, r2
 80053a0:	d007      	beq.n	80053b2 <HAL_GPIO_Init+0x1f6>
 80053a2:	687b      	ldr	r3, [r7, #4]
 80053a4:	4a45      	ldr	r2, [pc, #276]	@ (80054bc <HAL_GPIO_Init+0x300>)
 80053a6:	4293      	cmp	r3, r2
 80053a8:	d101      	bne.n	80053ae <HAL_GPIO_Init+0x1f2>
 80053aa:	2304      	movs	r3, #4
 80053ac:	e008      	b.n	80053c0 <HAL_GPIO_Init+0x204>
 80053ae:	2307      	movs	r3, #7
 80053b0:	e006      	b.n	80053c0 <HAL_GPIO_Init+0x204>
 80053b2:	2303      	movs	r3, #3
 80053b4:	e004      	b.n	80053c0 <HAL_GPIO_Init+0x204>
 80053b6:	2302      	movs	r3, #2
 80053b8:	e002      	b.n	80053c0 <HAL_GPIO_Init+0x204>
 80053ba:	2301      	movs	r3, #1
 80053bc:	e000      	b.n	80053c0 <HAL_GPIO_Init+0x204>
 80053be:	2300      	movs	r3, #0
 80053c0:	69fa      	ldr	r2, [r7, #28]
 80053c2:	f002 0203 	and.w	r2, r2, #3
 80053c6:	0092      	lsls	r2, r2, #2
 80053c8:	4093      	lsls	r3, r2
 80053ca:	69ba      	ldr	r2, [r7, #24]
 80053cc:	4313      	orrs	r3, r2
 80053ce:	61bb      	str	r3, [r7, #24]
 80053d0:	4935      	ldr	r1, [pc, #212]	@ (80054a8 <HAL_GPIO_Init+0x2ec>)
 80053d2:	69fb      	ldr	r3, [r7, #28]
 80053d4:	089b      	lsrs	r3, r3, #2
 80053d6:	3302      	adds	r3, #2
 80053d8:	69ba      	ldr	r2, [r7, #24]
 80053da:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80053de:	4b38      	ldr	r3, [pc, #224]	@ (80054c0 <HAL_GPIO_Init+0x304>)
 80053e0:	689b      	ldr	r3, [r3, #8]
 80053e2:	61bb      	str	r3, [r7, #24]
 80053e4:	693b      	ldr	r3, [r7, #16]
 80053e6:	43db      	mvns	r3, r3
 80053e8:	69ba      	ldr	r2, [r7, #24]
 80053ea:	4013      	ands	r3, r2
 80053ec:	61bb      	str	r3, [r7, #24]
 80053ee:	683b      	ldr	r3, [r7, #0]
 80053f0:	685b      	ldr	r3, [r3, #4]
 80053f2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	d003      	beq.n	8005402 <HAL_GPIO_Init+0x246>
 80053fa:	69ba      	ldr	r2, [r7, #24]
 80053fc:	693b      	ldr	r3, [r7, #16]
 80053fe:	4313      	orrs	r3, r2
 8005400:	61bb      	str	r3, [r7, #24]
 8005402:	4a2f      	ldr	r2, [pc, #188]	@ (80054c0 <HAL_GPIO_Init+0x304>)
 8005404:	69bb      	ldr	r3, [r7, #24]
 8005406:	6093      	str	r3, [r2, #8]
 8005408:	4b2d      	ldr	r3, [pc, #180]	@ (80054c0 <HAL_GPIO_Init+0x304>)
 800540a:	68db      	ldr	r3, [r3, #12]
 800540c:	61bb      	str	r3, [r7, #24]
 800540e:	693b      	ldr	r3, [r7, #16]
 8005410:	43db      	mvns	r3, r3
 8005412:	69ba      	ldr	r2, [r7, #24]
 8005414:	4013      	ands	r3, r2
 8005416:	61bb      	str	r3, [r7, #24]
 8005418:	683b      	ldr	r3, [r7, #0]
 800541a:	685b      	ldr	r3, [r3, #4]
 800541c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8005420:	2b00      	cmp	r3, #0
 8005422:	d003      	beq.n	800542c <HAL_GPIO_Init+0x270>
 8005424:	69ba      	ldr	r2, [r7, #24]
 8005426:	693b      	ldr	r3, [r7, #16]
 8005428:	4313      	orrs	r3, r2
 800542a:	61bb      	str	r3, [r7, #24]
 800542c:	4a24      	ldr	r2, [pc, #144]	@ (80054c0 <HAL_GPIO_Init+0x304>)
 800542e:	69bb      	ldr	r3, [r7, #24]
 8005430:	60d3      	str	r3, [r2, #12]
 8005432:	4b23      	ldr	r3, [pc, #140]	@ (80054c0 <HAL_GPIO_Init+0x304>)
 8005434:	685b      	ldr	r3, [r3, #4]
 8005436:	61bb      	str	r3, [r7, #24]
 8005438:	693b      	ldr	r3, [r7, #16]
 800543a:	43db      	mvns	r3, r3
 800543c:	69ba      	ldr	r2, [r7, #24]
 800543e:	4013      	ands	r3, r2
 8005440:	61bb      	str	r3, [r7, #24]
 8005442:	683b      	ldr	r3, [r7, #0]
 8005444:	685b      	ldr	r3, [r3, #4]
 8005446:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800544a:	2b00      	cmp	r3, #0
 800544c:	d003      	beq.n	8005456 <HAL_GPIO_Init+0x29a>
 800544e:	69ba      	ldr	r2, [r7, #24]
 8005450:	693b      	ldr	r3, [r7, #16]
 8005452:	4313      	orrs	r3, r2
 8005454:	61bb      	str	r3, [r7, #24]
 8005456:	4a1a      	ldr	r2, [pc, #104]	@ (80054c0 <HAL_GPIO_Init+0x304>)
 8005458:	69bb      	ldr	r3, [r7, #24]
 800545a:	6053      	str	r3, [r2, #4]
 800545c:	4b18      	ldr	r3, [pc, #96]	@ (80054c0 <HAL_GPIO_Init+0x304>)
 800545e:	681b      	ldr	r3, [r3, #0]
 8005460:	61bb      	str	r3, [r7, #24]
 8005462:	693b      	ldr	r3, [r7, #16]
 8005464:	43db      	mvns	r3, r3
 8005466:	69ba      	ldr	r2, [r7, #24]
 8005468:	4013      	ands	r3, r2
 800546a:	61bb      	str	r3, [r7, #24]
 800546c:	683b      	ldr	r3, [r7, #0]
 800546e:	685b      	ldr	r3, [r3, #4]
 8005470:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005474:	2b00      	cmp	r3, #0
 8005476:	d003      	beq.n	8005480 <HAL_GPIO_Init+0x2c4>
 8005478:	69ba      	ldr	r2, [r7, #24]
 800547a:	693b      	ldr	r3, [r7, #16]
 800547c:	4313      	orrs	r3, r2
 800547e:	61bb      	str	r3, [r7, #24]
 8005480:	4a0f      	ldr	r2, [pc, #60]	@ (80054c0 <HAL_GPIO_Init+0x304>)
 8005482:	69bb      	ldr	r3, [r7, #24]
 8005484:	6013      	str	r3, [r2, #0]
 8005486:	69fb      	ldr	r3, [r7, #28]
 8005488:	3301      	adds	r3, #1
 800548a:	61fb      	str	r3, [r7, #28]
 800548c:	69fb      	ldr	r3, [r7, #28]
 800548e:	2b0f      	cmp	r3, #15
 8005490:	f67f aea2 	bls.w	80051d8 <HAL_GPIO_Init+0x1c>
 8005494:	bf00      	nop
 8005496:	bf00      	nop
 8005498:	3724      	adds	r7, #36	@ 0x24
 800549a:	46bd      	mov	sp, r7
 800549c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054a0:	4770      	bx	lr
 80054a2:	bf00      	nop
 80054a4:	40023800 	.word	0x40023800
 80054a8:	40013800 	.word	0x40013800
 80054ac:	40020000 	.word	0x40020000
 80054b0:	40020400 	.word	0x40020400
 80054b4:	40020800 	.word	0x40020800
 80054b8:	40020c00 	.word	0x40020c00
 80054bc:	40021000 	.word	0x40021000
 80054c0:	40013c00 	.word	0x40013c00

080054c4 <HAL_GPIO_WritePin>:
 80054c4:	b480      	push	{r7}
 80054c6:	b083      	sub	sp, #12
 80054c8:	af00      	add	r7, sp, #0
 80054ca:	6078      	str	r0, [r7, #4]
 80054cc:	460b      	mov	r3, r1
 80054ce:	807b      	strh	r3, [r7, #2]
 80054d0:	4613      	mov	r3, r2
 80054d2:	707b      	strb	r3, [r7, #1]
 80054d4:	787b      	ldrb	r3, [r7, #1]
 80054d6:	2b00      	cmp	r3, #0
 80054d8:	d003      	beq.n	80054e2 <HAL_GPIO_WritePin+0x1e>
 80054da:	887a      	ldrh	r2, [r7, #2]
 80054dc:	687b      	ldr	r3, [r7, #4]
 80054de:	619a      	str	r2, [r3, #24]
 80054e0:	e003      	b.n	80054ea <HAL_GPIO_WritePin+0x26>
 80054e2:	887b      	ldrh	r3, [r7, #2]
 80054e4:	041a      	lsls	r2, r3, #16
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	619a      	str	r2, [r3, #24]
 80054ea:	bf00      	nop
 80054ec:	370c      	adds	r7, #12
 80054ee:	46bd      	mov	sp, r7
 80054f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054f4:	4770      	bx	lr
	...

080054f8 <HAL_RCC_OscConfig>:
 80054f8:	b580      	push	{r7, lr}
 80054fa:	b086      	sub	sp, #24
 80054fc:	af00      	add	r7, sp, #0
 80054fe:	6078      	str	r0, [r7, #4]
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	2b00      	cmp	r3, #0
 8005504:	d101      	bne.n	800550a <HAL_RCC_OscConfig+0x12>
 8005506:	2301      	movs	r3, #1
 8005508:	e267      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 800550a:	687b      	ldr	r3, [r7, #4]
 800550c:	681b      	ldr	r3, [r3, #0]
 800550e:	f003 0301 	and.w	r3, r3, #1
 8005512:	2b00      	cmp	r3, #0
 8005514:	d075      	beq.n	8005602 <HAL_RCC_OscConfig+0x10a>
 8005516:	4b88      	ldr	r3, [pc, #544]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005518:	689b      	ldr	r3, [r3, #8]
 800551a:	f003 030c 	and.w	r3, r3, #12
 800551e:	2b04      	cmp	r3, #4
 8005520:	d00c      	beq.n	800553c <HAL_RCC_OscConfig+0x44>
 8005522:	4b85      	ldr	r3, [pc, #532]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005524:	689b      	ldr	r3, [r3, #8]
 8005526:	f003 030c 	and.w	r3, r3, #12
 800552a:	2b08      	cmp	r3, #8
 800552c:	d112      	bne.n	8005554 <HAL_RCC_OscConfig+0x5c>
 800552e:	4b82      	ldr	r3, [pc, #520]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005530:	685b      	ldr	r3, [r3, #4]
 8005532:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005536:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800553a:	d10b      	bne.n	8005554 <HAL_RCC_OscConfig+0x5c>
 800553c:	4b7e      	ldr	r3, [pc, #504]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005544:	2b00      	cmp	r3, #0
 8005546:	d05b      	beq.n	8005600 <HAL_RCC_OscConfig+0x108>
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	685b      	ldr	r3, [r3, #4]
 800554c:	2b00      	cmp	r3, #0
 800554e:	d157      	bne.n	8005600 <HAL_RCC_OscConfig+0x108>
 8005550:	2301      	movs	r3, #1
 8005552:	e242      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	685b      	ldr	r3, [r3, #4]
 8005558:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800555c:	d106      	bne.n	800556c <HAL_RCC_OscConfig+0x74>
 800555e:	4b76      	ldr	r3, [pc, #472]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005560:	681b      	ldr	r3, [r3, #0]
 8005562:	4a75      	ldr	r2, [pc, #468]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005564:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005568:	6013      	str	r3, [r2, #0]
 800556a:	e01d      	b.n	80055a8 <HAL_RCC_OscConfig+0xb0>
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	685b      	ldr	r3, [r3, #4]
 8005570:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005574:	d10c      	bne.n	8005590 <HAL_RCC_OscConfig+0x98>
 8005576:	4b70      	ldr	r3, [pc, #448]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005578:	681b      	ldr	r3, [r3, #0]
 800557a:	4a6f      	ldr	r2, [pc, #444]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 800557c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005580:	6013      	str	r3, [r2, #0]
 8005582:	4b6d      	ldr	r3, [pc, #436]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005584:	681b      	ldr	r3, [r3, #0]
 8005586:	4a6c      	ldr	r2, [pc, #432]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005588:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800558c:	6013      	str	r3, [r2, #0]
 800558e:	e00b      	b.n	80055a8 <HAL_RCC_OscConfig+0xb0>
 8005590:	4b69      	ldr	r3, [pc, #420]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005592:	681b      	ldr	r3, [r3, #0]
 8005594:	4a68      	ldr	r2, [pc, #416]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005596:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800559a:	6013      	str	r3, [r2, #0]
 800559c:	4b66      	ldr	r3, [pc, #408]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 800559e:	681b      	ldr	r3, [r3, #0]
 80055a0:	4a65      	ldr	r2, [pc, #404]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 80055a2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80055a6:	6013      	str	r3, [r2, #0]
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	685b      	ldr	r3, [r3, #4]
 80055ac:	2b00      	cmp	r3, #0
 80055ae:	d013      	beq.n	80055d8 <HAL_RCC_OscConfig+0xe0>
 80055b0:	f7ff fc30 	bl	8004e14 <HAL_GetTick>
 80055b4:	6138      	str	r0, [r7, #16]
 80055b6:	e008      	b.n	80055ca <HAL_RCC_OscConfig+0xd2>
 80055b8:	f7ff fc2c 	bl	8004e14 <HAL_GetTick>
 80055bc:	4602      	mov	r2, r0
 80055be:	693b      	ldr	r3, [r7, #16]
 80055c0:	1ad3      	subs	r3, r2, r3
 80055c2:	2b64      	cmp	r3, #100	@ 0x64
 80055c4:	d901      	bls.n	80055ca <HAL_RCC_OscConfig+0xd2>
 80055c6:	2303      	movs	r3, #3
 80055c8:	e207      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 80055ca:	4b5b      	ldr	r3, [pc, #364]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80055d2:	2b00      	cmp	r3, #0
 80055d4:	d0f0      	beq.n	80055b8 <HAL_RCC_OscConfig+0xc0>
 80055d6:	e014      	b.n	8005602 <HAL_RCC_OscConfig+0x10a>
 80055d8:	f7ff fc1c 	bl	8004e14 <HAL_GetTick>
 80055dc:	6138      	str	r0, [r7, #16]
 80055de:	e008      	b.n	80055f2 <HAL_RCC_OscConfig+0xfa>
 80055e0:	f7ff fc18 	bl	8004e14 <HAL_GetTick>
 80055e4:	4602      	mov	r2, r0
 80055e6:	693b      	ldr	r3, [r7, #16]
 80055e8:	1ad3      	subs	r3, r2, r3
 80055ea:	2b64      	cmp	r3, #100	@ 0x64
 80055ec:	d901      	bls.n	80055f2 <HAL_RCC_OscConfig+0xfa>
 80055ee:	2303      	movs	r3, #3
 80055f0:	e1f3      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 80055f2:	4b51      	ldr	r3, [pc, #324]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 80055f4:	681b      	ldr	r3, [r3, #0]
 80055f6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80055fa:	2b00      	cmp	r3, #0
 80055fc:	d1f0      	bne.n	80055e0 <HAL_RCC_OscConfig+0xe8>
 80055fe:	e000      	b.n	8005602 <HAL_RCC_OscConfig+0x10a>
 8005600:	bf00      	nop
 8005602:	687b      	ldr	r3, [r7, #4]
 8005604:	681b      	ldr	r3, [r3, #0]
 8005606:	f003 0302 	and.w	r3, r3, #2
 800560a:	2b00      	cmp	r3, #0
 800560c:	d063      	beq.n	80056d6 <HAL_RCC_OscConfig+0x1de>
 800560e:	4b4a      	ldr	r3, [pc, #296]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005610:	689b      	ldr	r3, [r3, #8]
 8005612:	f003 030c 	and.w	r3, r3, #12
 8005616:	2b00      	cmp	r3, #0
 8005618:	d00b      	beq.n	8005632 <HAL_RCC_OscConfig+0x13a>
 800561a:	4b47      	ldr	r3, [pc, #284]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 800561c:	689b      	ldr	r3, [r3, #8]
 800561e:	f003 030c 	and.w	r3, r3, #12
 8005622:	2b08      	cmp	r3, #8
 8005624:	d11c      	bne.n	8005660 <HAL_RCC_OscConfig+0x168>
 8005626:	4b44      	ldr	r3, [pc, #272]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005628:	685b      	ldr	r3, [r3, #4]
 800562a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800562e:	2b00      	cmp	r3, #0
 8005630:	d116      	bne.n	8005660 <HAL_RCC_OscConfig+0x168>
 8005632:	4b41      	ldr	r3, [pc, #260]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005634:	681b      	ldr	r3, [r3, #0]
 8005636:	f003 0302 	and.w	r3, r3, #2
 800563a:	2b00      	cmp	r3, #0
 800563c:	d005      	beq.n	800564a <HAL_RCC_OscConfig+0x152>
 800563e:	687b      	ldr	r3, [r7, #4]
 8005640:	68db      	ldr	r3, [r3, #12]
 8005642:	2b01      	cmp	r3, #1
 8005644:	d001      	beq.n	800564a <HAL_RCC_OscConfig+0x152>
 8005646:	2301      	movs	r3, #1
 8005648:	e1c7      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 800564a:	4b3b      	ldr	r3, [pc, #236]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 800564c:	681b      	ldr	r3, [r3, #0]
 800564e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005652:	687b      	ldr	r3, [r7, #4]
 8005654:	691b      	ldr	r3, [r3, #16]
 8005656:	00db      	lsls	r3, r3, #3
 8005658:	4937      	ldr	r1, [pc, #220]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 800565a:	4313      	orrs	r3, r2
 800565c:	600b      	str	r3, [r1, #0]
 800565e:	e03a      	b.n	80056d6 <HAL_RCC_OscConfig+0x1de>
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	68db      	ldr	r3, [r3, #12]
 8005664:	2b00      	cmp	r3, #0
 8005666:	d020      	beq.n	80056aa <HAL_RCC_OscConfig+0x1b2>
 8005668:	4b34      	ldr	r3, [pc, #208]	@ (800573c <HAL_RCC_OscConfig+0x244>)
 800566a:	2201      	movs	r2, #1
 800566c:	601a      	str	r2, [r3, #0]
 800566e:	f7ff fbd1 	bl	8004e14 <HAL_GetTick>
 8005672:	6138      	str	r0, [r7, #16]
 8005674:	e008      	b.n	8005688 <HAL_RCC_OscConfig+0x190>
 8005676:	f7ff fbcd 	bl	8004e14 <HAL_GetTick>
 800567a:	4602      	mov	r2, r0
 800567c:	693b      	ldr	r3, [r7, #16]
 800567e:	1ad3      	subs	r3, r2, r3
 8005680:	2b02      	cmp	r3, #2
 8005682:	d901      	bls.n	8005688 <HAL_RCC_OscConfig+0x190>
 8005684:	2303      	movs	r3, #3
 8005686:	e1a8      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 8005688:	4b2b      	ldr	r3, [pc, #172]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 800568a:	681b      	ldr	r3, [r3, #0]
 800568c:	f003 0302 	and.w	r3, r3, #2
 8005690:	2b00      	cmp	r3, #0
 8005692:	d0f0      	beq.n	8005676 <HAL_RCC_OscConfig+0x17e>
 8005694:	4b28      	ldr	r3, [pc, #160]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 8005696:	681b      	ldr	r3, [r3, #0]
 8005698:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	691b      	ldr	r3, [r3, #16]
 80056a0:	00db      	lsls	r3, r3, #3
 80056a2:	4925      	ldr	r1, [pc, #148]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 80056a4:	4313      	orrs	r3, r2
 80056a6:	600b      	str	r3, [r1, #0]
 80056a8:	e015      	b.n	80056d6 <HAL_RCC_OscConfig+0x1de>
 80056aa:	4b24      	ldr	r3, [pc, #144]	@ (800573c <HAL_RCC_OscConfig+0x244>)
 80056ac:	2200      	movs	r2, #0
 80056ae:	601a      	str	r2, [r3, #0]
 80056b0:	f7ff fbb0 	bl	8004e14 <HAL_GetTick>
 80056b4:	6138      	str	r0, [r7, #16]
 80056b6:	e008      	b.n	80056ca <HAL_RCC_OscConfig+0x1d2>
 80056b8:	f7ff fbac 	bl	8004e14 <HAL_GetTick>
 80056bc:	4602      	mov	r2, r0
 80056be:	693b      	ldr	r3, [r7, #16]
 80056c0:	1ad3      	subs	r3, r2, r3
 80056c2:	2b02      	cmp	r3, #2
 80056c4:	d901      	bls.n	80056ca <HAL_RCC_OscConfig+0x1d2>
 80056c6:	2303      	movs	r3, #3
 80056c8:	e187      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 80056ca:	4b1b      	ldr	r3, [pc, #108]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 80056cc:	681b      	ldr	r3, [r3, #0]
 80056ce:	f003 0302 	and.w	r3, r3, #2
 80056d2:	2b00      	cmp	r3, #0
 80056d4:	d1f0      	bne.n	80056b8 <HAL_RCC_OscConfig+0x1c0>
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	681b      	ldr	r3, [r3, #0]
 80056da:	f003 0308 	and.w	r3, r3, #8
 80056de:	2b00      	cmp	r3, #0
 80056e0:	d036      	beq.n	8005750 <HAL_RCC_OscConfig+0x258>
 80056e2:	687b      	ldr	r3, [r7, #4]
 80056e4:	695b      	ldr	r3, [r3, #20]
 80056e6:	2b00      	cmp	r3, #0
 80056e8:	d016      	beq.n	8005718 <HAL_RCC_OscConfig+0x220>
 80056ea:	4b15      	ldr	r3, [pc, #84]	@ (8005740 <HAL_RCC_OscConfig+0x248>)
 80056ec:	2201      	movs	r2, #1
 80056ee:	601a      	str	r2, [r3, #0]
 80056f0:	f7ff fb90 	bl	8004e14 <HAL_GetTick>
 80056f4:	6138      	str	r0, [r7, #16]
 80056f6:	e008      	b.n	800570a <HAL_RCC_OscConfig+0x212>
 80056f8:	f7ff fb8c 	bl	8004e14 <HAL_GetTick>
 80056fc:	4602      	mov	r2, r0
 80056fe:	693b      	ldr	r3, [r7, #16]
 8005700:	1ad3      	subs	r3, r2, r3
 8005702:	2b02      	cmp	r3, #2
 8005704:	d901      	bls.n	800570a <HAL_RCC_OscConfig+0x212>
 8005706:	2303      	movs	r3, #3
 8005708:	e167      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 800570a:	4b0b      	ldr	r3, [pc, #44]	@ (8005738 <HAL_RCC_OscConfig+0x240>)
 800570c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800570e:	f003 0302 	and.w	r3, r3, #2
 8005712:	2b00      	cmp	r3, #0
 8005714:	d0f0      	beq.n	80056f8 <HAL_RCC_OscConfig+0x200>
 8005716:	e01b      	b.n	8005750 <HAL_RCC_OscConfig+0x258>
 8005718:	4b09      	ldr	r3, [pc, #36]	@ (8005740 <HAL_RCC_OscConfig+0x248>)
 800571a:	2200      	movs	r2, #0
 800571c:	601a      	str	r2, [r3, #0]
 800571e:	f7ff fb79 	bl	8004e14 <HAL_GetTick>
 8005722:	6138      	str	r0, [r7, #16]
 8005724:	e00e      	b.n	8005744 <HAL_RCC_OscConfig+0x24c>
 8005726:	f7ff fb75 	bl	8004e14 <HAL_GetTick>
 800572a:	4602      	mov	r2, r0
 800572c:	693b      	ldr	r3, [r7, #16]
 800572e:	1ad3      	subs	r3, r2, r3
 8005730:	2b02      	cmp	r3, #2
 8005732:	d907      	bls.n	8005744 <HAL_RCC_OscConfig+0x24c>
 8005734:	2303      	movs	r3, #3
 8005736:	e150      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 8005738:	40023800 	.word	0x40023800
 800573c:	42470000 	.word	0x42470000
 8005740:	42470e80 	.word	0x42470e80
 8005744:	4b88      	ldr	r3, [pc, #544]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005746:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005748:	f003 0302 	and.w	r3, r3, #2
 800574c:	2b00      	cmp	r3, #0
 800574e:	d1ea      	bne.n	8005726 <HAL_RCC_OscConfig+0x22e>
 8005750:	687b      	ldr	r3, [r7, #4]
 8005752:	681b      	ldr	r3, [r3, #0]
 8005754:	f003 0304 	and.w	r3, r3, #4
 8005758:	2b00      	cmp	r3, #0
 800575a:	f000 8097 	beq.w	800588c <HAL_RCC_OscConfig+0x394>
 800575e:	2300      	movs	r3, #0
 8005760:	75fb      	strb	r3, [r7, #23]
 8005762:	4b81      	ldr	r3, [pc, #516]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005764:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005766:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800576a:	2b00      	cmp	r3, #0
 800576c:	d10f      	bne.n	800578e <HAL_RCC_OscConfig+0x296>
 800576e:	2300      	movs	r3, #0
 8005770:	60bb      	str	r3, [r7, #8]
 8005772:	4b7d      	ldr	r3, [pc, #500]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005774:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005776:	4a7c      	ldr	r2, [pc, #496]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005778:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800577c:	6413      	str	r3, [r2, #64]	@ 0x40
 800577e:	4b7a      	ldr	r3, [pc, #488]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005780:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005782:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005786:	60bb      	str	r3, [r7, #8]
 8005788:	68bb      	ldr	r3, [r7, #8]
 800578a:	2301      	movs	r3, #1
 800578c:	75fb      	strb	r3, [r7, #23]
 800578e:	4b77      	ldr	r3, [pc, #476]	@ (800596c <HAL_RCC_OscConfig+0x474>)
 8005790:	681b      	ldr	r3, [r3, #0]
 8005792:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005796:	2b00      	cmp	r3, #0
 8005798:	d118      	bne.n	80057cc <HAL_RCC_OscConfig+0x2d4>
 800579a:	4b74      	ldr	r3, [pc, #464]	@ (800596c <HAL_RCC_OscConfig+0x474>)
 800579c:	681b      	ldr	r3, [r3, #0]
 800579e:	4a73      	ldr	r2, [pc, #460]	@ (800596c <HAL_RCC_OscConfig+0x474>)
 80057a0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80057a4:	6013      	str	r3, [r2, #0]
 80057a6:	f7ff fb35 	bl	8004e14 <HAL_GetTick>
 80057aa:	6138      	str	r0, [r7, #16]
 80057ac:	e008      	b.n	80057c0 <HAL_RCC_OscConfig+0x2c8>
 80057ae:	f7ff fb31 	bl	8004e14 <HAL_GetTick>
 80057b2:	4602      	mov	r2, r0
 80057b4:	693b      	ldr	r3, [r7, #16]
 80057b6:	1ad3      	subs	r3, r2, r3
 80057b8:	2b02      	cmp	r3, #2
 80057ba:	d901      	bls.n	80057c0 <HAL_RCC_OscConfig+0x2c8>
 80057bc:	2303      	movs	r3, #3
 80057be:	e10c      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 80057c0:	4b6a      	ldr	r3, [pc, #424]	@ (800596c <HAL_RCC_OscConfig+0x474>)
 80057c2:	681b      	ldr	r3, [r3, #0]
 80057c4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80057c8:	2b00      	cmp	r3, #0
 80057ca:	d0f0      	beq.n	80057ae <HAL_RCC_OscConfig+0x2b6>
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	689b      	ldr	r3, [r3, #8]
 80057d0:	2b01      	cmp	r3, #1
 80057d2:	d106      	bne.n	80057e2 <HAL_RCC_OscConfig+0x2ea>
 80057d4:	4b64      	ldr	r3, [pc, #400]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 80057d6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80057d8:	4a63      	ldr	r2, [pc, #396]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 80057da:	f043 0301 	orr.w	r3, r3, #1
 80057de:	6713      	str	r3, [r2, #112]	@ 0x70
 80057e0:	e01c      	b.n	800581c <HAL_RCC_OscConfig+0x324>
 80057e2:	687b      	ldr	r3, [r7, #4]
 80057e4:	689b      	ldr	r3, [r3, #8]
 80057e6:	2b05      	cmp	r3, #5
 80057e8:	d10c      	bne.n	8005804 <HAL_RCC_OscConfig+0x30c>
 80057ea:	4b5f      	ldr	r3, [pc, #380]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 80057ec:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80057ee:	4a5e      	ldr	r2, [pc, #376]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 80057f0:	f043 0304 	orr.w	r3, r3, #4
 80057f4:	6713      	str	r3, [r2, #112]	@ 0x70
 80057f6:	4b5c      	ldr	r3, [pc, #368]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 80057f8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80057fa:	4a5b      	ldr	r2, [pc, #364]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 80057fc:	f043 0301 	orr.w	r3, r3, #1
 8005800:	6713      	str	r3, [r2, #112]	@ 0x70
 8005802:	e00b      	b.n	800581c <HAL_RCC_OscConfig+0x324>
 8005804:	4b58      	ldr	r3, [pc, #352]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005806:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005808:	4a57      	ldr	r2, [pc, #348]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 800580a:	f023 0301 	bic.w	r3, r3, #1
 800580e:	6713      	str	r3, [r2, #112]	@ 0x70
 8005810:	4b55      	ldr	r3, [pc, #340]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005812:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005814:	4a54      	ldr	r2, [pc, #336]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005816:	f023 0304 	bic.w	r3, r3, #4
 800581a:	6713      	str	r3, [r2, #112]	@ 0x70
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	689b      	ldr	r3, [r3, #8]
 8005820:	2b00      	cmp	r3, #0
 8005822:	d015      	beq.n	8005850 <HAL_RCC_OscConfig+0x358>
 8005824:	f7ff faf6 	bl	8004e14 <HAL_GetTick>
 8005828:	6138      	str	r0, [r7, #16]
 800582a:	e00a      	b.n	8005842 <HAL_RCC_OscConfig+0x34a>
 800582c:	f7ff faf2 	bl	8004e14 <HAL_GetTick>
 8005830:	4602      	mov	r2, r0
 8005832:	693b      	ldr	r3, [r7, #16]
 8005834:	1ad3      	subs	r3, r2, r3
 8005836:	f241 3288 	movw	r2, #5000	@ 0x1388
 800583a:	4293      	cmp	r3, r2
 800583c:	d901      	bls.n	8005842 <HAL_RCC_OscConfig+0x34a>
 800583e:	2303      	movs	r3, #3
 8005840:	e0cb      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 8005842:	4b49      	ldr	r3, [pc, #292]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005844:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005846:	f003 0302 	and.w	r3, r3, #2
 800584a:	2b00      	cmp	r3, #0
 800584c:	d0ee      	beq.n	800582c <HAL_RCC_OscConfig+0x334>
 800584e:	e014      	b.n	800587a <HAL_RCC_OscConfig+0x382>
 8005850:	f7ff fae0 	bl	8004e14 <HAL_GetTick>
 8005854:	6138      	str	r0, [r7, #16]
 8005856:	e00a      	b.n	800586e <HAL_RCC_OscConfig+0x376>
 8005858:	f7ff fadc 	bl	8004e14 <HAL_GetTick>
 800585c:	4602      	mov	r2, r0
 800585e:	693b      	ldr	r3, [r7, #16]
 8005860:	1ad3      	subs	r3, r2, r3
 8005862:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005866:	4293      	cmp	r3, r2
 8005868:	d901      	bls.n	800586e <HAL_RCC_OscConfig+0x376>
 800586a:	2303      	movs	r3, #3
 800586c:	e0b5      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 800586e:	4b3e      	ldr	r3, [pc, #248]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005870:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005872:	f003 0302 	and.w	r3, r3, #2
 8005876:	2b00      	cmp	r3, #0
 8005878:	d1ee      	bne.n	8005858 <HAL_RCC_OscConfig+0x360>
 800587a:	7dfb      	ldrb	r3, [r7, #23]
 800587c:	2b01      	cmp	r3, #1
 800587e:	d105      	bne.n	800588c <HAL_RCC_OscConfig+0x394>
 8005880:	4b39      	ldr	r3, [pc, #228]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005882:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005884:	4a38      	ldr	r2, [pc, #224]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005886:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800588a:	6413      	str	r3, [r2, #64]	@ 0x40
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	699b      	ldr	r3, [r3, #24]
 8005890:	2b00      	cmp	r3, #0
 8005892:	f000 80a1 	beq.w	80059d8 <HAL_RCC_OscConfig+0x4e0>
 8005896:	4b34      	ldr	r3, [pc, #208]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005898:	689b      	ldr	r3, [r3, #8]
 800589a:	f003 030c 	and.w	r3, r3, #12
 800589e:	2b08      	cmp	r3, #8
 80058a0:	d05c      	beq.n	800595c <HAL_RCC_OscConfig+0x464>
 80058a2:	687b      	ldr	r3, [r7, #4]
 80058a4:	699b      	ldr	r3, [r3, #24]
 80058a6:	2b02      	cmp	r3, #2
 80058a8:	d141      	bne.n	800592e <HAL_RCC_OscConfig+0x436>
 80058aa:	4b31      	ldr	r3, [pc, #196]	@ (8005970 <HAL_RCC_OscConfig+0x478>)
 80058ac:	2200      	movs	r2, #0
 80058ae:	601a      	str	r2, [r3, #0]
 80058b0:	f7ff fab0 	bl	8004e14 <HAL_GetTick>
 80058b4:	6138      	str	r0, [r7, #16]
 80058b6:	e008      	b.n	80058ca <HAL_RCC_OscConfig+0x3d2>
 80058b8:	f7ff faac 	bl	8004e14 <HAL_GetTick>
 80058bc:	4602      	mov	r2, r0
 80058be:	693b      	ldr	r3, [r7, #16]
 80058c0:	1ad3      	subs	r3, r2, r3
 80058c2:	2b02      	cmp	r3, #2
 80058c4:	d901      	bls.n	80058ca <HAL_RCC_OscConfig+0x3d2>
 80058c6:	2303      	movs	r3, #3
 80058c8:	e087      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 80058ca:	4b27      	ldr	r3, [pc, #156]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 80058cc:	681b      	ldr	r3, [r3, #0]
 80058ce:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80058d2:	2b00      	cmp	r3, #0
 80058d4:	d1f0      	bne.n	80058b8 <HAL_RCC_OscConfig+0x3c0>
 80058d6:	687b      	ldr	r3, [r7, #4]
 80058d8:	69da      	ldr	r2, [r3, #28]
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	6a1b      	ldr	r3, [r3, #32]
 80058de:	431a      	orrs	r2, r3
 80058e0:	687b      	ldr	r3, [r7, #4]
 80058e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80058e4:	019b      	lsls	r3, r3, #6
 80058e6:	431a      	orrs	r2, r3
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80058ec:	085b      	lsrs	r3, r3, #1
 80058ee:	3b01      	subs	r3, #1
 80058f0:	041b      	lsls	r3, r3, #16
 80058f2:	431a      	orrs	r2, r3
 80058f4:	687b      	ldr	r3, [r7, #4]
 80058f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80058f8:	061b      	lsls	r3, r3, #24
 80058fa:	491b      	ldr	r1, [pc, #108]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 80058fc:	4313      	orrs	r3, r2
 80058fe:	604b      	str	r3, [r1, #4]
 8005900:	4b1b      	ldr	r3, [pc, #108]	@ (8005970 <HAL_RCC_OscConfig+0x478>)
 8005902:	2201      	movs	r2, #1
 8005904:	601a      	str	r2, [r3, #0]
 8005906:	f7ff fa85 	bl	8004e14 <HAL_GetTick>
 800590a:	6138      	str	r0, [r7, #16]
 800590c:	e008      	b.n	8005920 <HAL_RCC_OscConfig+0x428>
 800590e:	f7ff fa81 	bl	8004e14 <HAL_GetTick>
 8005912:	4602      	mov	r2, r0
 8005914:	693b      	ldr	r3, [r7, #16]
 8005916:	1ad3      	subs	r3, r2, r3
 8005918:	2b02      	cmp	r3, #2
 800591a:	d901      	bls.n	8005920 <HAL_RCC_OscConfig+0x428>
 800591c:	2303      	movs	r3, #3
 800591e:	e05c      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 8005920:	4b11      	ldr	r3, [pc, #68]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005922:	681b      	ldr	r3, [r3, #0]
 8005924:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005928:	2b00      	cmp	r3, #0
 800592a:	d0f0      	beq.n	800590e <HAL_RCC_OscConfig+0x416>
 800592c:	e054      	b.n	80059d8 <HAL_RCC_OscConfig+0x4e0>
 800592e:	4b10      	ldr	r3, [pc, #64]	@ (8005970 <HAL_RCC_OscConfig+0x478>)
 8005930:	2200      	movs	r2, #0
 8005932:	601a      	str	r2, [r3, #0]
 8005934:	f7ff fa6e 	bl	8004e14 <HAL_GetTick>
 8005938:	6138      	str	r0, [r7, #16]
 800593a:	e008      	b.n	800594e <HAL_RCC_OscConfig+0x456>
 800593c:	f7ff fa6a 	bl	8004e14 <HAL_GetTick>
 8005940:	4602      	mov	r2, r0
 8005942:	693b      	ldr	r3, [r7, #16]
 8005944:	1ad3      	subs	r3, r2, r3
 8005946:	2b02      	cmp	r3, #2
 8005948:	d901      	bls.n	800594e <HAL_RCC_OscConfig+0x456>
 800594a:	2303      	movs	r3, #3
 800594c:	e045      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 800594e:	4b06      	ldr	r3, [pc, #24]	@ (8005968 <HAL_RCC_OscConfig+0x470>)
 8005950:	681b      	ldr	r3, [r3, #0]
 8005952:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005956:	2b00      	cmp	r3, #0
 8005958:	d1f0      	bne.n	800593c <HAL_RCC_OscConfig+0x444>
 800595a:	e03d      	b.n	80059d8 <HAL_RCC_OscConfig+0x4e0>
 800595c:	687b      	ldr	r3, [r7, #4]
 800595e:	699b      	ldr	r3, [r3, #24]
 8005960:	2b01      	cmp	r3, #1
 8005962:	d107      	bne.n	8005974 <HAL_RCC_OscConfig+0x47c>
 8005964:	2301      	movs	r3, #1
 8005966:	e038      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 8005968:	40023800 	.word	0x40023800
 800596c:	40007000 	.word	0x40007000
 8005970:	42470060 	.word	0x42470060
 8005974:	4b1b      	ldr	r3, [pc, #108]	@ (80059e4 <HAL_RCC_OscConfig+0x4ec>)
 8005976:	685b      	ldr	r3, [r3, #4]
 8005978:	60fb      	str	r3, [r7, #12]
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	699b      	ldr	r3, [r3, #24]
 800597e:	2b01      	cmp	r3, #1
 8005980:	d028      	beq.n	80059d4 <HAL_RCC_OscConfig+0x4dc>
 8005982:	68fb      	ldr	r3, [r7, #12]
 8005984:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8005988:	687b      	ldr	r3, [r7, #4]
 800598a:	69db      	ldr	r3, [r3, #28]
 800598c:	429a      	cmp	r2, r3
 800598e:	d121      	bne.n	80059d4 <HAL_RCC_OscConfig+0x4dc>
 8005990:	68fb      	ldr	r3, [r7, #12]
 8005992:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8005996:	687b      	ldr	r3, [r7, #4]
 8005998:	6a1b      	ldr	r3, [r3, #32]
 800599a:	429a      	cmp	r2, r3
 800599c:	d11a      	bne.n	80059d4 <HAL_RCC_OscConfig+0x4dc>
 800599e:	68fa      	ldr	r2, [r7, #12]
 80059a0:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80059a4:	4013      	ands	r3, r2
 80059a6:	687a      	ldr	r2, [r7, #4]
 80059a8:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80059aa:	0192      	lsls	r2, r2, #6
 80059ac:	4293      	cmp	r3, r2
 80059ae:	d111      	bne.n	80059d4 <HAL_RCC_OscConfig+0x4dc>
 80059b0:	68fb      	ldr	r3, [r7, #12]
 80059b2:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80059b6:	687b      	ldr	r3, [r7, #4]
 80059b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80059ba:	085b      	lsrs	r3, r3, #1
 80059bc:	3b01      	subs	r3, #1
 80059be:	041b      	lsls	r3, r3, #16
 80059c0:	429a      	cmp	r2, r3
 80059c2:	d107      	bne.n	80059d4 <HAL_RCC_OscConfig+0x4dc>
 80059c4:	68fb      	ldr	r3, [r7, #12]
 80059c6:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80059ca:	687b      	ldr	r3, [r7, #4]
 80059cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80059ce:	061b      	lsls	r3, r3, #24
 80059d0:	429a      	cmp	r2, r3
 80059d2:	d001      	beq.n	80059d8 <HAL_RCC_OscConfig+0x4e0>
 80059d4:	2301      	movs	r3, #1
 80059d6:	e000      	b.n	80059da <HAL_RCC_OscConfig+0x4e2>
 80059d8:	2300      	movs	r3, #0
 80059da:	4618      	mov	r0, r3
 80059dc:	3718      	adds	r7, #24
 80059de:	46bd      	mov	sp, r7
 80059e0:	bd80      	pop	{r7, pc}
 80059e2:	bf00      	nop
 80059e4:	40023800 	.word	0x40023800

080059e8 <HAL_RCC_ClockConfig>:
 80059e8:	b580      	push	{r7, lr}
 80059ea:	b084      	sub	sp, #16
 80059ec:	af00      	add	r7, sp, #0
 80059ee:	6078      	str	r0, [r7, #4]
 80059f0:	6039      	str	r1, [r7, #0]
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	2b00      	cmp	r3, #0
 80059f6:	d101      	bne.n	80059fc <HAL_RCC_ClockConfig+0x14>
 80059f8:	2301      	movs	r3, #1
 80059fa:	e0cc      	b.n	8005b96 <HAL_RCC_ClockConfig+0x1ae>
 80059fc:	4b68      	ldr	r3, [pc, #416]	@ (8005ba0 <HAL_RCC_ClockConfig+0x1b8>)
 80059fe:	681b      	ldr	r3, [r3, #0]
 8005a00:	f003 0307 	and.w	r3, r3, #7
 8005a04:	683a      	ldr	r2, [r7, #0]
 8005a06:	429a      	cmp	r2, r3
 8005a08:	d90c      	bls.n	8005a24 <HAL_RCC_ClockConfig+0x3c>
 8005a0a:	4b65      	ldr	r3, [pc, #404]	@ (8005ba0 <HAL_RCC_ClockConfig+0x1b8>)
 8005a0c:	683a      	ldr	r2, [r7, #0]
 8005a0e:	b2d2      	uxtb	r2, r2
 8005a10:	701a      	strb	r2, [r3, #0]
 8005a12:	4b63      	ldr	r3, [pc, #396]	@ (8005ba0 <HAL_RCC_ClockConfig+0x1b8>)
 8005a14:	681b      	ldr	r3, [r3, #0]
 8005a16:	f003 0307 	and.w	r3, r3, #7
 8005a1a:	683a      	ldr	r2, [r7, #0]
 8005a1c:	429a      	cmp	r2, r3
 8005a1e:	d001      	beq.n	8005a24 <HAL_RCC_ClockConfig+0x3c>
 8005a20:	2301      	movs	r3, #1
 8005a22:	e0b8      	b.n	8005b96 <HAL_RCC_ClockConfig+0x1ae>
 8005a24:	687b      	ldr	r3, [r7, #4]
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	f003 0302 	and.w	r3, r3, #2
 8005a2c:	2b00      	cmp	r3, #0
 8005a2e:	d020      	beq.n	8005a72 <HAL_RCC_ClockConfig+0x8a>
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	681b      	ldr	r3, [r3, #0]
 8005a34:	f003 0304 	and.w	r3, r3, #4
 8005a38:	2b00      	cmp	r3, #0
 8005a3a:	d005      	beq.n	8005a48 <HAL_RCC_ClockConfig+0x60>
 8005a3c:	4b59      	ldr	r3, [pc, #356]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005a3e:	689b      	ldr	r3, [r3, #8]
 8005a40:	4a58      	ldr	r2, [pc, #352]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005a42:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8005a46:	6093      	str	r3, [r2, #8]
 8005a48:	687b      	ldr	r3, [r7, #4]
 8005a4a:	681b      	ldr	r3, [r3, #0]
 8005a4c:	f003 0308 	and.w	r3, r3, #8
 8005a50:	2b00      	cmp	r3, #0
 8005a52:	d005      	beq.n	8005a60 <HAL_RCC_ClockConfig+0x78>
 8005a54:	4b53      	ldr	r3, [pc, #332]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005a56:	689b      	ldr	r3, [r3, #8]
 8005a58:	4a52      	ldr	r2, [pc, #328]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005a5a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8005a5e:	6093      	str	r3, [r2, #8]
 8005a60:	4b50      	ldr	r3, [pc, #320]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005a62:	689b      	ldr	r3, [r3, #8]
 8005a64:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	689b      	ldr	r3, [r3, #8]
 8005a6c:	494d      	ldr	r1, [pc, #308]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005a6e:	4313      	orrs	r3, r2
 8005a70:	608b      	str	r3, [r1, #8]
 8005a72:	687b      	ldr	r3, [r7, #4]
 8005a74:	681b      	ldr	r3, [r3, #0]
 8005a76:	f003 0301 	and.w	r3, r3, #1
 8005a7a:	2b00      	cmp	r3, #0
 8005a7c:	d044      	beq.n	8005b08 <HAL_RCC_ClockConfig+0x120>
 8005a7e:	687b      	ldr	r3, [r7, #4]
 8005a80:	685b      	ldr	r3, [r3, #4]
 8005a82:	2b01      	cmp	r3, #1
 8005a84:	d107      	bne.n	8005a96 <HAL_RCC_ClockConfig+0xae>
 8005a86:	4b47      	ldr	r3, [pc, #284]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005a88:	681b      	ldr	r3, [r3, #0]
 8005a8a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005a8e:	2b00      	cmp	r3, #0
 8005a90:	d119      	bne.n	8005ac6 <HAL_RCC_ClockConfig+0xde>
 8005a92:	2301      	movs	r3, #1
 8005a94:	e07f      	b.n	8005b96 <HAL_RCC_ClockConfig+0x1ae>
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	685b      	ldr	r3, [r3, #4]
 8005a9a:	2b02      	cmp	r3, #2
 8005a9c:	d003      	beq.n	8005aa6 <HAL_RCC_ClockConfig+0xbe>
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	685b      	ldr	r3, [r3, #4]
 8005aa2:	2b03      	cmp	r3, #3
 8005aa4:	d107      	bne.n	8005ab6 <HAL_RCC_ClockConfig+0xce>
 8005aa6:	4b3f      	ldr	r3, [pc, #252]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005aa8:	681b      	ldr	r3, [r3, #0]
 8005aaa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005aae:	2b00      	cmp	r3, #0
 8005ab0:	d109      	bne.n	8005ac6 <HAL_RCC_ClockConfig+0xde>
 8005ab2:	2301      	movs	r3, #1
 8005ab4:	e06f      	b.n	8005b96 <HAL_RCC_ClockConfig+0x1ae>
 8005ab6:	4b3b      	ldr	r3, [pc, #236]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005ab8:	681b      	ldr	r3, [r3, #0]
 8005aba:	f003 0302 	and.w	r3, r3, #2
 8005abe:	2b00      	cmp	r3, #0
 8005ac0:	d101      	bne.n	8005ac6 <HAL_RCC_ClockConfig+0xde>
 8005ac2:	2301      	movs	r3, #1
 8005ac4:	e067      	b.n	8005b96 <HAL_RCC_ClockConfig+0x1ae>
 8005ac6:	4b37      	ldr	r3, [pc, #220]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005ac8:	689b      	ldr	r3, [r3, #8]
 8005aca:	f023 0203 	bic.w	r2, r3, #3
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	685b      	ldr	r3, [r3, #4]
 8005ad2:	4934      	ldr	r1, [pc, #208]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005ad4:	4313      	orrs	r3, r2
 8005ad6:	608b      	str	r3, [r1, #8]
 8005ad8:	f7ff f99c 	bl	8004e14 <HAL_GetTick>
 8005adc:	60f8      	str	r0, [r7, #12]
 8005ade:	e00a      	b.n	8005af6 <HAL_RCC_ClockConfig+0x10e>
 8005ae0:	f7ff f998 	bl	8004e14 <HAL_GetTick>
 8005ae4:	4602      	mov	r2, r0
 8005ae6:	68fb      	ldr	r3, [r7, #12]
 8005ae8:	1ad3      	subs	r3, r2, r3
 8005aea:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005aee:	4293      	cmp	r3, r2
 8005af0:	d901      	bls.n	8005af6 <HAL_RCC_ClockConfig+0x10e>
 8005af2:	2303      	movs	r3, #3
 8005af4:	e04f      	b.n	8005b96 <HAL_RCC_ClockConfig+0x1ae>
 8005af6:	4b2b      	ldr	r3, [pc, #172]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005af8:	689b      	ldr	r3, [r3, #8]
 8005afa:	f003 020c 	and.w	r2, r3, #12
 8005afe:	687b      	ldr	r3, [r7, #4]
 8005b00:	685b      	ldr	r3, [r3, #4]
 8005b02:	009b      	lsls	r3, r3, #2
 8005b04:	429a      	cmp	r2, r3
 8005b06:	d1eb      	bne.n	8005ae0 <HAL_RCC_ClockConfig+0xf8>
 8005b08:	4b25      	ldr	r3, [pc, #148]	@ (8005ba0 <HAL_RCC_ClockConfig+0x1b8>)
 8005b0a:	681b      	ldr	r3, [r3, #0]
 8005b0c:	f003 0307 	and.w	r3, r3, #7
 8005b10:	683a      	ldr	r2, [r7, #0]
 8005b12:	429a      	cmp	r2, r3
 8005b14:	d20c      	bcs.n	8005b30 <HAL_RCC_ClockConfig+0x148>
 8005b16:	4b22      	ldr	r3, [pc, #136]	@ (8005ba0 <HAL_RCC_ClockConfig+0x1b8>)
 8005b18:	683a      	ldr	r2, [r7, #0]
 8005b1a:	b2d2      	uxtb	r2, r2
 8005b1c:	701a      	strb	r2, [r3, #0]
 8005b1e:	4b20      	ldr	r3, [pc, #128]	@ (8005ba0 <HAL_RCC_ClockConfig+0x1b8>)
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	f003 0307 	and.w	r3, r3, #7
 8005b26:	683a      	ldr	r2, [r7, #0]
 8005b28:	429a      	cmp	r2, r3
 8005b2a:	d001      	beq.n	8005b30 <HAL_RCC_ClockConfig+0x148>
 8005b2c:	2301      	movs	r3, #1
 8005b2e:	e032      	b.n	8005b96 <HAL_RCC_ClockConfig+0x1ae>
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	681b      	ldr	r3, [r3, #0]
 8005b34:	f003 0304 	and.w	r3, r3, #4
 8005b38:	2b00      	cmp	r3, #0
 8005b3a:	d008      	beq.n	8005b4e <HAL_RCC_ClockConfig+0x166>
 8005b3c:	4b19      	ldr	r3, [pc, #100]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005b3e:	689b      	ldr	r3, [r3, #8]
 8005b40:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	68db      	ldr	r3, [r3, #12]
 8005b48:	4916      	ldr	r1, [pc, #88]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005b4a:	4313      	orrs	r3, r2
 8005b4c:	608b      	str	r3, [r1, #8]
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	681b      	ldr	r3, [r3, #0]
 8005b52:	f003 0308 	and.w	r3, r3, #8
 8005b56:	2b00      	cmp	r3, #0
 8005b58:	d009      	beq.n	8005b6e <HAL_RCC_ClockConfig+0x186>
 8005b5a:	4b12      	ldr	r3, [pc, #72]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005b5c:	689b      	ldr	r3, [r3, #8]
 8005b5e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8005b62:	687b      	ldr	r3, [r7, #4]
 8005b64:	691b      	ldr	r3, [r3, #16]
 8005b66:	00db      	lsls	r3, r3, #3
 8005b68:	490e      	ldr	r1, [pc, #56]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005b6a:	4313      	orrs	r3, r2
 8005b6c:	608b      	str	r3, [r1, #8]
 8005b6e:	f000 f821 	bl	8005bb4 <HAL_RCC_GetSysClockFreq>
 8005b72:	4602      	mov	r2, r0
 8005b74:	4b0b      	ldr	r3, [pc, #44]	@ (8005ba4 <HAL_RCC_ClockConfig+0x1bc>)
 8005b76:	689b      	ldr	r3, [r3, #8]
 8005b78:	091b      	lsrs	r3, r3, #4
 8005b7a:	f003 030f 	and.w	r3, r3, #15
 8005b7e:	490a      	ldr	r1, [pc, #40]	@ (8005ba8 <HAL_RCC_ClockConfig+0x1c0>)
 8005b80:	5ccb      	ldrb	r3, [r1, r3]
 8005b82:	fa22 f303 	lsr.w	r3, r2, r3
 8005b86:	4a09      	ldr	r2, [pc, #36]	@ (8005bac <HAL_RCC_ClockConfig+0x1c4>)
 8005b88:	6013      	str	r3, [r2, #0]
 8005b8a:	4b09      	ldr	r3, [pc, #36]	@ (8005bb0 <HAL_RCC_ClockConfig+0x1c8>)
 8005b8c:	681b      	ldr	r3, [r3, #0]
 8005b8e:	4618      	mov	r0, r3
 8005b90:	f7ff f8fc 	bl	8004d8c <HAL_InitTick>
 8005b94:	2300      	movs	r3, #0
 8005b96:	4618      	mov	r0, r3
 8005b98:	3710      	adds	r7, #16
 8005b9a:	46bd      	mov	sp, r7
 8005b9c:	bd80      	pop	{r7, pc}
 8005b9e:	bf00      	nop
 8005ba0:	40023c00 	.word	0x40023c00
 8005ba4:	40023800 	.word	0x40023800
 8005ba8:	0800c6b0 	.word	0x0800c6b0
 8005bac:	20000540 	.word	0x20000540
 8005bb0:	20000574 	.word	0x20000574

08005bb4 <HAL_RCC_GetSysClockFreq>:
 8005bb4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005bb8:	b094      	sub	sp, #80	@ 0x50
 8005bba:	af00      	add	r7, sp, #0
 8005bbc:	2300      	movs	r3, #0
 8005bbe:	647b      	str	r3, [r7, #68]	@ 0x44
 8005bc0:	2300      	movs	r3, #0
 8005bc2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005bc4:	2300      	movs	r3, #0
 8005bc6:	643b      	str	r3, [r7, #64]	@ 0x40
 8005bc8:	2300      	movs	r3, #0
 8005bca:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005bcc:	4b79      	ldr	r3, [pc, #484]	@ (8005db4 <HAL_RCC_GetSysClockFreq+0x200>)
 8005bce:	689b      	ldr	r3, [r3, #8]
 8005bd0:	f003 030c 	and.w	r3, r3, #12
 8005bd4:	2b08      	cmp	r3, #8
 8005bd6:	d00d      	beq.n	8005bf4 <HAL_RCC_GetSysClockFreq+0x40>
 8005bd8:	2b08      	cmp	r3, #8
 8005bda:	f200 80e1 	bhi.w	8005da0 <HAL_RCC_GetSysClockFreq+0x1ec>
 8005bde:	2b00      	cmp	r3, #0
 8005be0:	d002      	beq.n	8005be8 <HAL_RCC_GetSysClockFreq+0x34>
 8005be2:	2b04      	cmp	r3, #4
 8005be4:	d003      	beq.n	8005bee <HAL_RCC_GetSysClockFreq+0x3a>
 8005be6:	e0db      	b.n	8005da0 <HAL_RCC_GetSysClockFreq+0x1ec>
 8005be8:	4b73      	ldr	r3, [pc, #460]	@ (8005db8 <HAL_RCC_GetSysClockFreq+0x204>)
 8005bea:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005bec:	e0db      	b.n	8005da6 <HAL_RCC_GetSysClockFreq+0x1f2>
 8005bee:	4b73      	ldr	r3, [pc, #460]	@ (8005dbc <HAL_RCC_GetSysClockFreq+0x208>)
 8005bf0:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005bf2:	e0d8      	b.n	8005da6 <HAL_RCC_GetSysClockFreq+0x1f2>
 8005bf4:	4b6f      	ldr	r3, [pc, #444]	@ (8005db4 <HAL_RCC_GetSysClockFreq+0x200>)
 8005bf6:	685b      	ldr	r3, [r3, #4]
 8005bf8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005bfc:	647b      	str	r3, [r7, #68]	@ 0x44
 8005bfe:	4b6d      	ldr	r3, [pc, #436]	@ (8005db4 <HAL_RCC_GetSysClockFreq+0x200>)
 8005c00:	685b      	ldr	r3, [r3, #4]
 8005c02:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005c06:	2b00      	cmp	r3, #0
 8005c08:	d063      	beq.n	8005cd2 <HAL_RCC_GetSysClockFreq+0x11e>
 8005c0a:	4b6a      	ldr	r3, [pc, #424]	@ (8005db4 <HAL_RCC_GetSysClockFreq+0x200>)
 8005c0c:	685b      	ldr	r3, [r3, #4]
 8005c0e:	099b      	lsrs	r3, r3, #6
 8005c10:	2200      	movs	r2, #0
 8005c12:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005c14:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8005c16:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005c18:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005c1c:	633b      	str	r3, [r7, #48]	@ 0x30
 8005c1e:	2300      	movs	r3, #0
 8005c20:	637b      	str	r3, [r7, #52]	@ 0x34
 8005c22:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8005c26:	4622      	mov	r2, r4
 8005c28:	462b      	mov	r3, r5
 8005c2a:	f04f 0000 	mov.w	r0, #0
 8005c2e:	f04f 0100 	mov.w	r1, #0
 8005c32:	0159      	lsls	r1, r3, #5
 8005c34:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005c38:	0150      	lsls	r0, r2, #5
 8005c3a:	4602      	mov	r2, r0
 8005c3c:	460b      	mov	r3, r1
 8005c3e:	4621      	mov	r1, r4
 8005c40:	1a51      	subs	r1, r2, r1
 8005c42:	6139      	str	r1, [r7, #16]
 8005c44:	4629      	mov	r1, r5
 8005c46:	eb63 0301 	sbc.w	r3, r3, r1
 8005c4a:	617b      	str	r3, [r7, #20]
 8005c4c:	f04f 0200 	mov.w	r2, #0
 8005c50:	f04f 0300 	mov.w	r3, #0
 8005c54:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8005c58:	4659      	mov	r1, fp
 8005c5a:	018b      	lsls	r3, r1, #6
 8005c5c:	4651      	mov	r1, sl
 8005c5e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005c62:	4651      	mov	r1, sl
 8005c64:	018a      	lsls	r2, r1, #6
 8005c66:	4651      	mov	r1, sl
 8005c68:	ebb2 0801 	subs.w	r8, r2, r1
 8005c6c:	4659      	mov	r1, fp
 8005c6e:	eb63 0901 	sbc.w	r9, r3, r1
 8005c72:	f04f 0200 	mov.w	r2, #0
 8005c76:	f04f 0300 	mov.w	r3, #0
 8005c7a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005c7e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005c82:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005c86:	4690      	mov	r8, r2
 8005c88:	4699      	mov	r9, r3
 8005c8a:	4623      	mov	r3, r4
 8005c8c:	eb18 0303 	adds.w	r3, r8, r3
 8005c90:	60bb      	str	r3, [r7, #8]
 8005c92:	462b      	mov	r3, r5
 8005c94:	eb49 0303 	adc.w	r3, r9, r3
 8005c98:	60fb      	str	r3, [r7, #12]
 8005c9a:	f04f 0200 	mov.w	r2, #0
 8005c9e:	f04f 0300 	mov.w	r3, #0
 8005ca2:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8005ca6:	4629      	mov	r1, r5
 8005ca8:	024b      	lsls	r3, r1, #9
 8005caa:	4621      	mov	r1, r4
 8005cac:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8005cb0:	4621      	mov	r1, r4
 8005cb2:	024a      	lsls	r2, r1, #9
 8005cb4:	4610      	mov	r0, r2
 8005cb6:	4619      	mov	r1, r3
 8005cb8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8005cba:	2200      	movs	r2, #0
 8005cbc:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005cbe:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8005cc0:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8005cc4:	f7fb f8f6 	bl	8000eb4 <__aeabi_uldivmod>
 8005cc8:	4602      	mov	r2, r0
 8005cca:	460b      	mov	r3, r1
 8005ccc:	4613      	mov	r3, r2
 8005cce:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005cd0:	e058      	b.n	8005d84 <HAL_RCC_GetSysClockFreq+0x1d0>
 8005cd2:	4b38      	ldr	r3, [pc, #224]	@ (8005db4 <HAL_RCC_GetSysClockFreq+0x200>)
 8005cd4:	685b      	ldr	r3, [r3, #4]
 8005cd6:	099b      	lsrs	r3, r3, #6
 8005cd8:	2200      	movs	r2, #0
 8005cda:	4618      	mov	r0, r3
 8005cdc:	4611      	mov	r1, r2
 8005cde:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8005ce2:	623b      	str	r3, [r7, #32]
 8005ce4:	2300      	movs	r3, #0
 8005ce6:	627b      	str	r3, [r7, #36]	@ 0x24
 8005ce8:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8005cec:	4642      	mov	r2, r8
 8005cee:	464b      	mov	r3, r9
 8005cf0:	f04f 0000 	mov.w	r0, #0
 8005cf4:	f04f 0100 	mov.w	r1, #0
 8005cf8:	0159      	lsls	r1, r3, #5
 8005cfa:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005cfe:	0150      	lsls	r0, r2, #5
 8005d00:	4602      	mov	r2, r0
 8005d02:	460b      	mov	r3, r1
 8005d04:	4641      	mov	r1, r8
 8005d06:	ebb2 0a01 	subs.w	sl, r2, r1
 8005d0a:	4649      	mov	r1, r9
 8005d0c:	eb63 0b01 	sbc.w	fp, r3, r1
 8005d10:	f04f 0200 	mov.w	r2, #0
 8005d14:	f04f 0300 	mov.w	r3, #0
 8005d18:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8005d1c:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8005d20:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8005d24:	ebb2 040a 	subs.w	r4, r2, sl
 8005d28:	eb63 050b 	sbc.w	r5, r3, fp
 8005d2c:	f04f 0200 	mov.w	r2, #0
 8005d30:	f04f 0300 	mov.w	r3, #0
 8005d34:	00eb      	lsls	r3, r5, #3
 8005d36:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005d3a:	00e2      	lsls	r2, r4, #3
 8005d3c:	4614      	mov	r4, r2
 8005d3e:	461d      	mov	r5, r3
 8005d40:	4643      	mov	r3, r8
 8005d42:	18e3      	adds	r3, r4, r3
 8005d44:	603b      	str	r3, [r7, #0]
 8005d46:	464b      	mov	r3, r9
 8005d48:	eb45 0303 	adc.w	r3, r5, r3
 8005d4c:	607b      	str	r3, [r7, #4]
 8005d4e:	f04f 0200 	mov.w	r2, #0
 8005d52:	f04f 0300 	mov.w	r3, #0
 8005d56:	e9d7 4500 	ldrd	r4, r5, [r7]
 8005d5a:	4629      	mov	r1, r5
 8005d5c:	028b      	lsls	r3, r1, #10
 8005d5e:	4621      	mov	r1, r4
 8005d60:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005d64:	4621      	mov	r1, r4
 8005d66:	028a      	lsls	r2, r1, #10
 8005d68:	4610      	mov	r0, r2
 8005d6a:	4619      	mov	r1, r3
 8005d6c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8005d6e:	2200      	movs	r2, #0
 8005d70:	61bb      	str	r3, [r7, #24]
 8005d72:	61fa      	str	r2, [r7, #28]
 8005d74:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005d78:	f7fb f89c 	bl	8000eb4 <__aeabi_uldivmod>
 8005d7c:	4602      	mov	r2, r0
 8005d7e:	460b      	mov	r3, r1
 8005d80:	4613      	mov	r3, r2
 8005d82:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005d84:	4b0b      	ldr	r3, [pc, #44]	@ (8005db4 <HAL_RCC_GetSysClockFreq+0x200>)
 8005d86:	685b      	ldr	r3, [r3, #4]
 8005d88:	0c1b      	lsrs	r3, r3, #16
 8005d8a:	f003 0303 	and.w	r3, r3, #3
 8005d8e:	3301      	adds	r3, #1
 8005d90:	005b      	lsls	r3, r3, #1
 8005d92:	643b      	str	r3, [r7, #64]	@ 0x40
 8005d94:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8005d96:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8005d98:	fbb2 f3f3 	udiv	r3, r2, r3
 8005d9c:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005d9e:	e002      	b.n	8005da6 <HAL_RCC_GetSysClockFreq+0x1f2>
 8005da0:	4b05      	ldr	r3, [pc, #20]	@ (8005db8 <HAL_RCC_GetSysClockFreq+0x204>)
 8005da2:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005da4:	bf00      	nop
 8005da6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8005da8:	4618      	mov	r0, r3
 8005daa:	3750      	adds	r7, #80	@ 0x50
 8005dac:	46bd      	mov	sp, r7
 8005dae:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005db2:	bf00      	nop
 8005db4:	40023800 	.word	0x40023800
 8005db8:	00f42400 	.word	0x00f42400
 8005dbc:	007a1200 	.word	0x007a1200

08005dc0 <HAL_RCC_GetHCLKFreq>:
 8005dc0:	b480      	push	{r7}
 8005dc2:	af00      	add	r7, sp, #0
 8005dc4:	4b03      	ldr	r3, [pc, #12]	@ (8005dd4 <HAL_RCC_GetHCLKFreq+0x14>)
 8005dc6:	681b      	ldr	r3, [r3, #0]
 8005dc8:	4618      	mov	r0, r3
 8005dca:	46bd      	mov	sp, r7
 8005dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dd0:	4770      	bx	lr
 8005dd2:	bf00      	nop
 8005dd4:	20000540 	.word	0x20000540

08005dd8 <HAL_RCC_GetPCLK1Freq>:
 8005dd8:	b580      	push	{r7, lr}
 8005dda:	af00      	add	r7, sp, #0
 8005ddc:	f7ff fff0 	bl	8005dc0 <HAL_RCC_GetHCLKFreq>
 8005de0:	4602      	mov	r2, r0
 8005de2:	4b05      	ldr	r3, [pc, #20]	@ (8005df8 <HAL_RCC_GetPCLK1Freq+0x20>)
 8005de4:	689b      	ldr	r3, [r3, #8]
 8005de6:	0a9b      	lsrs	r3, r3, #10
 8005de8:	f003 0307 	and.w	r3, r3, #7
 8005dec:	4903      	ldr	r1, [pc, #12]	@ (8005dfc <HAL_RCC_GetPCLK1Freq+0x24>)
 8005dee:	5ccb      	ldrb	r3, [r1, r3]
 8005df0:	fa22 f303 	lsr.w	r3, r2, r3
 8005df4:	4618      	mov	r0, r3
 8005df6:	bd80      	pop	{r7, pc}
 8005df8:	40023800 	.word	0x40023800
 8005dfc:	0800c6c0 	.word	0x0800c6c0

08005e00 <HAL_RCC_GetPCLK2Freq>:
 8005e00:	b580      	push	{r7, lr}
 8005e02:	af00      	add	r7, sp, #0
 8005e04:	f7ff ffdc 	bl	8005dc0 <HAL_RCC_GetHCLKFreq>
 8005e08:	4602      	mov	r2, r0
 8005e0a:	4b05      	ldr	r3, [pc, #20]	@ (8005e20 <HAL_RCC_GetPCLK2Freq+0x20>)
 8005e0c:	689b      	ldr	r3, [r3, #8]
 8005e0e:	0b5b      	lsrs	r3, r3, #13
 8005e10:	f003 0307 	and.w	r3, r3, #7
 8005e14:	4903      	ldr	r1, [pc, #12]	@ (8005e24 <HAL_RCC_GetPCLK2Freq+0x24>)
 8005e16:	5ccb      	ldrb	r3, [r1, r3]
 8005e18:	fa22 f303 	lsr.w	r3, r2, r3
 8005e1c:	4618      	mov	r0, r3
 8005e1e:	bd80      	pop	{r7, pc}
 8005e20:	40023800 	.word	0x40023800
 8005e24:	0800c6c0 	.word	0x0800c6c0

08005e28 <HAL_SPI_Init>:
 8005e28:	b580      	push	{r7, lr}
 8005e2a:	b082      	sub	sp, #8
 8005e2c:	af00      	add	r7, sp, #0
 8005e2e:	6078      	str	r0, [r7, #4]
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	2b00      	cmp	r3, #0
 8005e34:	d101      	bne.n	8005e3a <HAL_SPI_Init+0x12>
 8005e36:	2301      	movs	r3, #1
 8005e38:	e07b      	b.n	8005f32 <HAL_SPI_Init+0x10a>
 8005e3a:	687b      	ldr	r3, [r7, #4]
 8005e3c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e3e:	2b00      	cmp	r3, #0
 8005e40:	d108      	bne.n	8005e54 <HAL_SPI_Init+0x2c>
 8005e42:	687b      	ldr	r3, [r7, #4]
 8005e44:	685b      	ldr	r3, [r3, #4]
 8005e46:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005e4a:	d009      	beq.n	8005e60 <HAL_SPI_Init+0x38>
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	2200      	movs	r2, #0
 8005e50:	61da      	str	r2, [r3, #28]
 8005e52:	e005      	b.n	8005e60 <HAL_SPI_Init+0x38>
 8005e54:	687b      	ldr	r3, [r7, #4]
 8005e56:	2200      	movs	r2, #0
 8005e58:	611a      	str	r2, [r3, #16]
 8005e5a:	687b      	ldr	r3, [r7, #4]
 8005e5c:	2200      	movs	r2, #0
 8005e5e:	615a      	str	r2, [r3, #20]
 8005e60:	687b      	ldr	r3, [r7, #4]
 8005e62:	2200      	movs	r2, #0
 8005e64:	629a      	str	r2, [r3, #40]	@ 0x28
 8005e66:	687b      	ldr	r3, [r7, #4]
 8005e68:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005e6c:	b2db      	uxtb	r3, r3
 8005e6e:	2b00      	cmp	r3, #0
 8005e70:	d106      	bne.n	8005e80 <HAL_SPI_Init+0x58>
 8005e72:	687b      	ldr	r3, [r7, #4]
 8005e74:	2200      	movs	r2, #0
 8005e76:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005e7a:	6878      	ldr	r0, [r7, #4]
 8005e7c:	f7fc fa48 	bl	8002310 <HAL_SPI_MspInit>
 8005e80:	687b      	ldr	r3, [r7, #4]
 8005e82:	2202      	movs	r2, #2
 8005e84:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005e88:	687b      	ldr	r3, [r7, #4]
 8005e8a:	681b      	ldr	r3, [r3, #0]
 8005e8c:	681a      	ldr	r2, [r3, #0]
 8005e8e:	687b      	ldr	r3, [r7, #4]
 8005e90:	681b      	ldr	r3, [r3, #0]
 8005e92:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005e96:	601a      	str	r2, [r3, #0]
 8005e98:	687b      	ldr	r3, [r7, #4]
 8005e9a:	685b      	ldr	r3, [r3, #4]
 8005e9c:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8005ea0:	687b      	ldr	r3, [r7, #4]
 8005ea2:	689b      	ldr	r3, [r3, #8]
 8005ea4:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8005ea8:	431a      	orrs	r2, r3
 8005eaa:	687b      	ldr	r3, [r7, #4]
 8005eac:	68db      	ldr	r3, [r3, #12]
 8005eae:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8005eb2:	431a      	orrs	r2, r3
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	691b      	ldr	r3, [r3, #16]
 8005eb8:	f003 0302 	and.w	r3, r3, #2
 8005ebc:	431a      	orrs	r2, r3
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	695b      	ldr	r3, [r3, #20]
 8005ec2:	f003 0301 	and.w	r3, r3, #1
 8005ec6:	431a      	orrs	r2, r3
 8005ec8:	687b      	ldr	r3, [r7, #4]
 8005eca:	699b      	ldr	r3, [r3, #24]
 8005ecc:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005ed0:	431a      	orrs	r2, r3
 8005ed2:	687b      	ldr	r3, [r7, #4]
 8005ed4:	69db      	ldr	r3, [r3, #28]
 8005ed6:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8005eda:	431a      	orrs	r2, r3
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	6a1b      	ldr	r3, [r3, #32]
 8005ee0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005ee4:	ea42 0103 	orr.w	r1, r2, r3
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005eec:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8005ef0:	687b      	ldr	r3, [r7, #4]
 8005ef2:	681b      	ldr	r3, [r3, #0]
 8005ef4:	430a      	orrs	r2, r1
 8005ef6:	601a      	str	r2, [r3, #0]
 8005ef8:	687b      	ldr	r3, [r7, #4]
 8005efa:	699b      	ldr	r3, [r3, #24]
 8005efc:	0c1b      	lsrs	r3, r3, #16
 8005efe:	f003 0104 	and.w	r1, r3, #4
 8005f02:	687b      	ldr	r3, [r7, #4]
 8005f04:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005f06:	f003 0210 	and.w	r2, r3, #16
 8005f0a:	687b      	ldr	r3, [r7, #4]
 8005f0c:	681b      	ldr	r3, [r3, #0]
 8005f0e:	430a      	orrs	r2, r1
 8005f10:	605a      	str	r2, [r3, #4]
 8005f12:	687b      	ldr	r3, [r7, #4]
 8005f14:	681b      	ldr	r3, [r3, #0]
 8005f16:	69da      	ldr	r2, [r3, #28]
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	681b      	ldr	r3, [r3, #0]
 8005f1c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005f20:	61da      	str	r2, [r3, #28]
 8005f22:	687b      	ldr	r3, [r7, #4]
 8005f24:	2200      	movs	r2, #0
 8005f26:	655a      	str	r2, [r3, #84]	@ 0x54
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	2201      	movs	r2, #1
 8005f2c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005f30:	2300      	movs	r3, #0
 8005f32:	4618      	mov	r0, r3
 8005f34:	3708      	adds	r7, #8
 8005f36:	46bd      	mov	sp, r7
 8005f38:	bd80      	pop	{r7, pc}

08005f3a <HAL_SPI_Transmit>:
 8005f3a:	b580      	push	{r7, lr}
 8005f3c:	b088      	sub	sp, #32
 8005f3e:	af00      	add	r7, sp, #0
 8005f40:	60f8      	str	r0, [r7, #12]
 8005f42:	60b9      	str	r1, [r7, #8]
 8005f44:	603b      	str	r3, [r7, #0]
 8005f46:	4613      	mov	r3, r2
 8005f48:	80fb      	strh	r3, [r7, #6]
 8005f4a:	f7fe ff63 	bl	8004e14 <HAL_GetTick>
 8005f4e:	61f8      	str	r0, [r7, #28]
 8005f50:	88fb      	ldrh	r3, [r7, #6]
 8005f52:	837b      	strh	r3, [r7, #26]
 8005f54:	68fb      	ldr	r3, [r7, #12]
 8005f56:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005f5a:	b2db      	uxtb	r3, r3
 8005f5c:	2b01      	cmp	r3, #1
 8005f5e:	d001      	beq.n	8005f64 <HAL_SPI_Transmit+0x2a>
 8005f60:	2302      	movs	r3, #2
 8005f62:	e12a      	b.n	80061ba <HAL_SPI_Transmit+0x280>
 8005f64:	68bb      	ldr	r3, [r7, #8]
 8005f66:	2b00      	cmp	r3, #0
 8005f68:	d002      	beq.n	8005f70 <HAL_SPI_Transmit+0x36>
 8005f6a:	88fb      	ldrh	r3, [r7, #6]
 8005f6c:	2b00      	cmp	r3, #0
 8005f6e:	d101      	bne.n	8005f74 <HAL_SPI_Transmit+0x3a>
 8005f70:	2301      	movs	r3, #1
 8005f72:	e122      	b.n	80061ba <HAL_SPI_Transmit+0x280>
 8005f74:	68fb      	ldr	r3, [r7, #12]
 8005f76:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005f7a:	2b01      	cmp	r3, #1
 8005f7c:	d101      	bne.n	8005f82 <HAL_SPI_Transmit+0x48>
 8005f7e:	2302      	movs	r3, #2
 8005f80:	e11b      	b.n	80061ba <HAL_SPI_Transmit+0x280>
 8005f82:	68fb      	ldr	r3, [r7, #12]
 8005f84:	2201      	movs	r2, #1
 8005f86:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005f8a:	68fb      	ldr	r3, [r7, #12]
 8005f8c:	2203      	movs	r2, #3
 8005f8e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005f92:	68fb      	ldr	r3, [r7, #12]
 8005f94:	2200      	movs	r2, #0
 8005f96:	655a      	str	r2, [r3, #84]	@ 0x54
 8005f98:	68fb      	ldr	r3, [r7, #12]
 8005f9a:	68ba      	ldr	r2, [r7, #8]
 8005f9c:	631a      	str	r2, [r3, #48]	@ 0x30
 8005f9e:	68fb      	ldr	r3, [r7, #12]
 8005fa0:	88fa      	ldrh	r2, [r7, #6]
 8005fa2:	869a      	strh	r2, [r3, #52]	@ 0x34
 8005fa4:	68fb      	ldr	r3, [r7, #12]
 8005fa6:	88fa      	ldrh	r2, [r7, #6]
 8005fa8:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005faa:	68fb      	ldr	r3, [r7, #12]
 8005fac:	2200      	movs	r2, #0
 8005fae:	639a      	str	r2, [r3, #56]	@ 0x38
 8005fb0:	68fb      	ldr	r3, [r7, #12]
 8005fb2:	2200      	movs	r2, #0
 8005fb4:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8005fb6:	68fb      	ldr	r3, [r7, #12]
 8005fb8:	2200      	movs	r2, #0
 8005fba:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005fbc:	68fb      	ldr	r3, [r7, #12]
 8005fbe:	2200      	movs	r2, #0
 8005fc0:	645a      	str	r2, [r3, #68]	@ 0x44
 8005fc2:	68fb      	ldr	r3, [r7, #12]
 8005fc4:	2200      	movs	r2, #0
 8005fc6:	641a      	str	r2, [r3, #64]	@ 0x40
 8005fc8:	68fb      	ldr	r3, [r7, #12]
 8005fca:	689b      	ldr	r3, [r3, #8]
 8005fcc:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005fd0:	d10f      	bne.n	8005ff2 <HAL_SPI_Transmit+0xb8>
 8005fd2:	68fb      	ldr	r3, [r7, #12]
 8005fd4:	681b      	ldr	r3, [r3, #0]
 8005fd6:	681a      	ldr	r2, [r3, #0]
 8005fd8:	68fb      	ldr	r3, [r7, #12]
 8005fda:	681b      	ldr	r3, [r3, #0]
 8005fdc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005fe0:	601a      	str	r2, [r3, #0]
 8005fe2:	68fb      	ldr	r3, [r7, #12]
 8005fe4:	681b      	ldr	r3, [r3, #0]
 8005fe6:	681a      	ldr	r2, [r3, #0]
 8005fe8:	68fb      	ldr	r3, [r7, #12]
 8005fea:	681b      	ldr	r3, [r3, #0]
 8005fec:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005ff0:	601a      	str	r2, [r3, #0]
 8005ff2:	68fb      	ldr	r3, [r7, #12]
 8005ff4:	681b      	ldr	r3, [r3, #0]
 8005ff6:	681b      	ldr	r3, [r3, #0]
 8005ff8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005ffc:	2b40      	cmp	r3, #64	@ 0x40
 8005ffe:	d007      	beq.n	8006010 <HAL_SPI_Transmit+0xd6>
 8006000:	68fb      	ldr	r3, [r7, #12]
 8006002:	681b      	ldr	r3, [r3, #0]
 8006004:	681a      	ldr	r2, [r3, #0]
 8006006:	68fb      	ldr	r3, [r7, #12]
 8006008:	681b      	ldr	r3, [r3, #0]
 800600a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800600e:	601a      	str	r2, [r3, #0]
 8006010:	68fb      	ldr	r3, [r7, #12]
 8006012:	68db      	ldr	r3, [r3, #12]
 8006014:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8006018:	d152      	bne.n	80060c0 <HAL_SPI_Transmit+0x186>
 800601a:	68fb      	ldr	r3, [r7, #12]
 800601c:	685b      	ldr	r3, [r3, #4]
 800601e:	2b00      	cmp	r3, #0
 8006020:	d002      	beq.n	8006028 <HAL_SPI_Transmit+0xee>
 8006022:	8b7b      	ldrh	r3, [r7, #26]
 8006024:	2b01      	cmp	r3, #1
 8006026:	d145      	bne.n	80060b4 <HAL_SPI_Transmit+0x17a>
 8006028:	68fb      	ldr	r3, [r7, #12]
 800602a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800602c:	881a      	ldrh	r2, [r3, #0]
 800602e:	68fb      	ldr	r3, [r7, #12]
 8006030:	681b      	ldr	r3, [r3, #0]
 8006032:	60da      	str	r2, [r3, #12]
 8006034:	68fb      	ldr	r3, [r7, #12]
 8006036:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006038:	1c9a      	adds	r2, r3, #2
 800603a:	68fb      	ldr	r3, [r7, #12]
 800603c:	631a      	str	r2, [r3, #48]	@ 0x30
 800603e:	68fb      	ldr	r3, [r7, #12]
 8006040:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006042:	b29b      	uxth	r3, r3
 8006044:	3b01      	subs	r3, #1
 8006046:	b29a      	uxth	r2, r3
 8006048:	68fb      	ldr	r3, [r7, #12]
 800604a:	86da      	strh	r2, [r3, #54]	@ 0x36
 800604c:	e032      	b.n	80060b4 <HAL_SPI_Transmit+0x17a>
 800604e:	68fb      	ldr	r3, [r7, #12]
 8006050:	681b      	ldr	r3, [r3, #0]
 8006052:	689b      	ldr	r3, [r3, #8]
 8006054:	f003 0302 	and.w	r3, r3, #2
 8006058:	2b02      	cmp	r3, #2
 800605a:	d112      	bne.n	8006082 <HAL_SPI_Transmit+0x148>
 800605c:	68fb      	ldr	r3, [r7, #12]
 800605e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006060:	881a      	ldrh	r2, [r3, #0]
 8006062:	68fb      	ldr	r3, [r7, #12]
 8006064:	681b      	ldr	r3, [r3, #0]
 8006066:	60da      	str	r2, [r3, #12]
 8006068:	68fb      	ldr	r3, [r7, #12]
 800606a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800606c:	1c9a      	adds	r2, r3, #2
 800606e:	68fb      	ldr	r3, [r7, #12]
 8006070:	631a      	str	r2, [r3, #48]	@ 0x30
 8006072:	68fb      	ldr	r3, [r7, #12]
 8006074:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006076:	b29b      	uxth	r3, r3
 8006078:	3b01      	subs	r3, #1
 800607a:	b29a      	uxth	r2, r3
 800607c:	68fb      	ldr	r3, [r7, #12]
 800607e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8006080:	e018      	b.n	80060b4 <HAL_SPI_Transmit+0x17a>
 8006082:	f7fe fec7 	bl	8004e14 <HAL_GetTick>
 8006086:	4602      	mov	r2, r0
 8006088:	69fb      	ldr	r3, [r7, #28]
 800608a:	1ad3      	subs	r3, r2, r3
 800608c:	683a      	ldr	r2, [r7, #0]
 800608e:	429a      	cmp	r2, r3
 8006090:	d803      	bhi.n	800609a <HAL_SPI_Transmit+0x160>
 8006092:	683b      	ldr	r3, [r7, #0]
 8006094:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006098:	d102      	bne.n	80060a0 <HAL_SPI_Transmit+0x166>
 800609a:	683b      	ldr	r3, [r7, #0]
 800609c:	2b00      	cmp	r3, #0
 800609e:	d109      	bne.n	80060b4 <HAL_SPI_Transmit+0x17a>
 80060a0:	68fb      	ldr	r3, [r7, #12]
 80060a2:	2201      	movs	r2, #1
 80060a4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80060a8:	68fb      	ldr	r3, [r7, #12]
 80060aa:	2200      	movs	r2, #0
 80060ac:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80060b0:	2303      	movs	r3, #3
 80060b2:	e082      	b.n	80061ba <HAL_SPI_Transmit+0x280>
 80060b4:	68fb      	ldr	r3, [r7, #12]
 80060b6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80060b8:	b29b      	uxth	r3, r3
 80060ba:	2b00      	cmp	r3, #0
 80060bc:	d1c7      	bne.n	800604e <HAL_SPI_Transmit+0x114>
 80060be:	e053      	b.n	8006168 <HAL_SPI_Transmit+0x22e>
 80060c0:	68fb      	ldr	r3, [r7, #12]
 80060c2:	685b      	ldr	r3, [r3, #4]
 80060c4:	2b00      	cmp	r3, #0
 80060c6:	d002      	beq.n	80060ce <HAL_SPI_Transmit+0x194>
 80060c8:	8b7b      	ldrh	r3, [r7, #26]
 80060ca:	2b01      	cmp	r3, #1
 80060cc:	d147      	bne.n	800615e <HAL_SPI_Transmit+0x224>
 80060ce:	68fb      	ldr	r3, [r7, #12]
 80060d0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80060d2:	68fb      	ldr	r3, [r7, #12]
 80060d4:	681b      	ldr	r3, [r3, #0]
 80060d6:	330c      	adds	r3, #12
 80060d8:	7812      	ldrb	r2, [r2, #0]
 80060da:	701a      	strb	r2, [r3, #0]
 80060dc:	68fb      	ldr	r3, [r7, #12]
 80060de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80060e0:	1c5a      	adds	r2, r3, #1
 80060e2:	68fb      	ldr	r3, [r7, #12]
 80060e4:	631a      	str	r2, [r3, #48]	@ 0x30
 80060e6:	68fb      	ldr	r3, [r7, #12]
 80060e8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80060ea:	b29b      	uxth	r3, r3
 80060ec:	3b01      	subs	r3, #1
 80060ee:	b29a      	uxth	r2, r3
 80060f0:	68fb      	ldr	r3, [r7, #12]
 80060f2:	86da      	strh	r2, [r3, #54]	@ 0x36
 80060f4:	e033      	b.n	800615e <HAL_SPI_Transmit+0x224>
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	681b      	ldr	r3, [r3, #0]
 80060fa:	689b      	ldr	r3, [r3, #8]
 80060fc:	f003 0302 	and.w	r3, r3, #2
 8006100:	2b02      	cmp	r3, #2
 8006102:	d113      	bne.n	800612c <HAL_SPI_Transmit+0x1f2>
 8006104:	68fb      	ldr	r3, [r7, #12]
 8006106:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006108:	68fb      	ldr	r3, [r7, #12]
 800610a:	681b      	ldr	r3, [r3, #0]
 800610c:	330c      	adds	r3, #12
 800610e:	7812      	ldrb	r2, [r2, #0]
 8006110:	701a      	strb	r2, [r3, #0]
 8006112:	68fb      	ldr	r3, [r7, #12]
 8006114:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006116:	1c5a      	adds	r2, r3, #1
 8006118:	68fb      	ldr	r3, [r7, #12]
 800611a:	631a      	str	r2, [r3, #48]	@ 0x30
 800611c:	68fb      	ldr	r3, [r7, #12]
 800611e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006120:	b29b      	uxth	r3, r3
 8006122:	3b01      	subs	r3, #1
 8006124:	b29a      	uxth	r2, r3
 8006126:	68fb      	ldr	r3, [r7, #12]
 8006128:	86da      	strh	r2, [r3, #54]	@ 0x36
 800612a:	e018      	b.n	800615e <HAL_SPI_Transmit+0x224>
 800612c:	f7fe fe72 	bl	8004e14 <HAL_GetTick>
 8006130:	4602      	mov	r2, r0
 8006132:	69fb      	ldr	r3, [r7, #28]
 8006134:	1ad3      	subs	r3, r2, r3
 8006136:	683a      	ldr	r2, [r7, #0]
 8006138:	429a      	cmp	r2, r3
 800613a:	d803      	bhi.n	8006144 <HAL_SPI_Transmit+0x20a>
 800613c:	683b      	ldr	r3, [r7, #0]
 800613e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006142:	d102      	bne.n	800614a <HAL_SPI_Transmit+0x210>
 8006144:	683b      	ldr	r3, [r7, #0]
 8006146:	2b00      	cmp	r3, #0
 8006148:	d109      	bne.n	800615e <HAL_SPI_Transmit+0x224>
 800614a:	68fb      	ldr	r3, [r7, #12]
 800614c:	2201      	movs	r2, #1
 800614e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8006152:	68fb      	ldr	r3, [r7, #12]
 8006154:	2200      	movs	r2, #0
 8006156:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800615a:	2303      	movs	r3, #3
 800615c:	e02d      	b.n	80061ba <HAL_SPI_Transmit+0x280>
 800615e:	68fb      	ldr	r3, [r7, #12]
 8006160:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006162:	b29b      	uxth	r3, r3
 8006164:	2b00      	cmp	r3, #0
 8006166:	d1c6      	bne.n	80060f6 <HAL_SPI_Transmit+0x1bc>
 8006168:	69fa      	ldr	r2, [r7, #28]
 800616a:	6839      	ldr	r1, [r7, #0]
 800616c:	68f8      	ldr	r0, [r7, #12]
 800616e:	f000 f8b1 	bl	80062d4 <SPI_EndRxTxTransaction>
 8006172:	4603      	mov	r3, r0
 8006174:	2b00      	cmp	r3, #0
 8006176:	d002      	beq.n	800617e <HAL_SPI_Transmit+0x244>
 8006178:	68fb      	ldr	r3, [r7, #12]
 800617a:	2220      	movs	r2, #32
 800617c:	655a      	str	r2, [r3, #84]	@ 0x54
 800617e:	68fb      	ldr	r3, [r7, #12]
 8006180:	689b      	ldr	r3, [r3, #8]
 8006182:	2b00      	cmp	r3, #0
 8006184:	d10a      	bne.n	800619c <HAL_SPI_Transmit+0x262>
 8006186:	2300      	movs	r3, #0
 8006188:	617b      	str	r3, [r7, #20]
 800618a:	68fb      	ldr	r3, [r7, #12]
 800618c:	681b      	ldr	r3, [r3, #0]
 800618e:	68db      	ldr	r3, [r3, #12]
 8006190:	617b      	str	r3, [r7, #20]
 8006192:	68fb      	ldr	r3, [r7, #12]
 8006194:	681b      	ldr	r3, [r3, #0]
 8006196:	689b      	ldr	r3, [r3, #8]
 8006198:	617b      	str	r3, [r7, #20]
 800619a:	697b      	ldr	r3, [r7, #20]
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	2201      	movs	r2, #1
 80061a0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80061a4:	68fb      	ldr	r3, [r7, #12]
 80061a6:	2200      	movs	r2, #0
 80061a8:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80061ac:	68fb      	ldr	r3, [r7, #12]
 80061ae:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80061b0:	2b00      	cmp	r3, #0
 80061b2:	d001      	beq.n	80061b8 <HAL_SPI_Transmit+0x27e>
 80061b4:	2301      	movs	r3, #1
 80061b6:	e000      	b.n	80061ba <HAL_SPI_Transmit+0x280>
 80061b8:	2300      	movs	r3, #0
 80061ba:	4618      	mov	r0, r3
 80061bc:	3720      	adds	r7, #32
 80061be:	46bd      	mov	sp, r7
 80061c0:	bd80      	pop	{r7, pc}
	...

080061c4 <SPI_WaitFlagStateUntilTimeout>:
 80061c4:	b580      	push	{r7, lr}
 80061c6:	b088      	sub	sp, #32
 80061c8:	af00      	add	r7, sp, #0
 80061ca:	60f8      	str	r0, [r7, #12]
 80061cc:	60b9      	str	r1, [r7, #8]
 80061ce:	603b      	str	r3, [r7, #0]
 80061d0:	4613      	mov	r3, r2
 80061d2:	71fb      	strb	r3, [r7, #7]
 80061d4:	f7fe fe1e 	bl	8004e14 <HAL_GetTick>
 80061d8:	4602      	mov	r2, r0
 80061da:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80061dc:	1a9b      	subs	r3, r3, r2
 80061de:	683a      	ldr	r2, [r7, #0]
 80061e0:	4413      	add	r3, r2
 80061e2:	61fb      	str	r3, [r7, #28]
 80061e4:	f7fe fe16 	bl	8004e14 <HAL_GetTick>
 80061e8:	61b8      	str	r0, [r7, #24]
 80061ea:	4b39      	ldr	r3, [pc, #228]	@ (80062d0 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80061ec:	681b      	ldr	r3, [r3, #0]
 80061ee:	015b      	lsls	r3, r3, #5
 80061f0:	0d1b      	lsrs	r3, r3, #20
 80061f2:	69fa      	ldr	r2, [r7, #28]
 80061f4:	fb02 f303 	mul.w	r3, r2, r3
 80061f8:	617b      	str	r3, [r7, #20]
 80061fa:	e054      	b.n	80062a6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 80061fc:	683b      	ldr	r3, [r7, #0]
 80061fe:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006202:	d050      	beq.n	80062a6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8006204:	f7fe fe06 	bl	8004e14 <HAL_GetTick>
 8006208:	4602      	mov	r2, r0
 800620a:	69bb      	ldr	r3, [r7, #24]
 800620c:	1ad3      	subs	r3, r2, r3
 800620e:	69fa      	ldr	r2, [r7, #28]
 8006210:	429a      	cmp	r2, r3
 8006212:	d902      	bls.n	800621a <SPI_WaitFlagStateUntilTimeout+0x56>
 8006214:	69fb      	ldr	r3, [r7, #28]
 8006216:	2b00      	cmp	r3, #0
 8006218:	d13d      	bne.n	8006296 <SPI_WaitFlagStateUntilTimeout+0xd2>
 800621a:	68fb      	ldr	r3, [r7, #12]
 800621c:	681b      	ldr	r3, [r3, #0]
 800621e:	685a      	ldr	r2, [r3, #4]
 8006220:	68fb      	ldr	r3, [r7, #12]
 8006222:	681b      	ldr	r3, [r3, #0]
 8006224:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006228:	605a      	str	r2, [r3, #4]
 800622a:	68fb      	ldr	r3, [r7, #12]
 800622c:	685b      	ldr	r3, [r3, #4]
 800622e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006232:	d111      	bne.n	8006258 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006234:	68fb      	ldr	r3, [r7, #12]
 8006236:	689b      	ldr	r3, [r3, #8]
 8006238:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800623c:	d004      	beq.n	8006248 <SPI_WaitFlagStateUntilTimeout+0x84>
 800623e:	68fb      	ldr	r3, [r7, #12]
 8006240:	689b      	ldr	r3, [r3, #8]
 8006242:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006246:	d107      	bne.n	8006258 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006248:	68fb      	ldr	r3, [r7, #12]
 800624a:	681b      	ldr	r3, [r3, #0]
 800624c:	681a      	ldr	r2, [r3, #0]
 800624e:	68fb      	ldr	r3, [r7, #12]
 8006250:	681b      	ldr	r3, [r3, #0]
 8006252:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006256:	601a      	str	r2, [r3, #0]
 8006258:	68fb      	ldr	r3, [r7, #12]
 800625a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800625c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006260:	d10f      	bne.n	8006282 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8006262:	68fb      	ldr	r3, [r7, #12]
 8006264:	681b      	ldr	r3, [r3, #0]
 8006266:	681a      	ldr	r2, [r3, #0]
 8006268:	68fb      	ldr	r3, [r7, #12]
 800626a:	681b      	ldr	r3, [r3, #0]
 800626c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006270:	601a      	str	r2, [r3, #0]
 8006272:	68fb      	ldr	r3, [r7, #12]
 8006274:	681b      	ldr	r3, [r3, #0]
 8006276:	681a      	ldr	r2, [r3, #0]
 8006278:	68fb      	ldr	r3, [r7, #12]
 800627a:	681b      	ldr	r3, [r3, #0]
 800627c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006280:	601a      	str	r2, [r3, #0]
 8006282:	68fb      	ldr	r3, [r7, #12]
 8006284:	2201      	movs	r2, #1
 8006286:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800628a:	68fb      	ldr	r3, [r7, #12]
 800628c:	2200      	movs	r2, #0
 800628e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8006292:	2303      	movs	r3, #3
 8006294:	e017      	b.n	80062c6 <SPI_WaitFlagStateUntilTimeout+0x102>
 8006296:	697b      	ldr	r3, [r7, #20]
 8006298:	2b00      	cmp	r3, #0
 800629a:	d101      	bne.n	80062a0 <SPI_WaitFlagStateUntilTimeout+0xdc>
 800629c:	2300      	movs	r3, #0
 800629e:	61fb      	str	r3, [r7, #28]
 80062a0:	697b      	ldr	r3, [r7, #20]
 80062a2:	3b01      	subs	r3, #1
 80062a4:	617b      	str	r3, [r7, #20]
 80062a6:	68fb      	ldr	r3, [r7, #12]
 80062a8:	681b      	ldr	r3, [r3, #0]
 80062aa:	689a      	ldr	r2, [r3, #8]
 80062ac:	68bb      	ldr	r3, [r7, #8]
 80062ae:	4013      	ands	r3, r2
 80062b0:	68ba      	ldr	r2, [r7, #8]
 80062b2:	429a      	cmp	r2, r3
 80062b4:	bf0c      	ite	eq
 80062b6:	2301      	moveq	r3, #1
 80062b8:	2300      	movne	r3, #0
 80062ba:	b2db      	uxtb	r3, r3
 80062bc:	461a      	mov	r2, r3
 80062be:	79fb      	ldrb	r3, [r7, #7]
 80062c0:	429a      	cmp	r2, r3
 80062c2:	d19b      	bne.n	80061fc <SPI_WaitFlagStateUntilTimeout+0x38>
 80062c4:	2300      	movs	r3, #0
 80062c6:	4618      	mov	r0, r3
 80062c8:	3720      	adds	r7, #32
 80062ca:	46bd      	mov	sp, r7
 80062cc:	bd80      	pop	{r7, pc}
 80062ce:	bf00      	nop
 80062d0:	20000540 	.word	0x20000540

080062d4 <SPI_EndRxTxTransaction>:
 80062d4:	b580      	push	{r7, lr}
 80062d6:	b088      	sub	sp, #32
 80062d8:	af02      	add	r7, sp, #8
 80062da:	60f8      	str	r0, [r7, #12]
 80062dc:	60b9      	str	r1, [r7, #8]
 80062de:	607a      	str	r2, [r7, #4]
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	9300      	str	r3, [sp, #0]
 80062e4:	68bb      	ldr	r3, [r7, #8]
 80062e6:	2201      	movs	r2, #1
 80062e8:	2102      	movs	r1, #2
 80062ea:	68f8      	ldr	r0, [r7, #12]
 80062ec:	f7ff ff6a 	bl	80061c4 <SPI_WaitFlagStateUntilTimeout>
 80062f0:	4603      	mov	r3, r0
 80062f2:	2b00      	cmp	r3, #0
 80062f4:	d007      	beq.n	8006306 <SPI_EndRxTxTransaction+0x32>
 80062f6:	68fb      	ldr	r3, [r7, #12]
 80062f8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80062fa:	f043 0220 	orr.w	r2, r3, #32
 80062fe:	68fb      	ldr	r3, [r7, #12]
 8006300:	655a      	str	r2, [r3, #84]	@ 0x54
 8006302:	2303      	movs	r3, #3
 8006304:	e032      	b.n	800636c <SPI_EndRxTxTransaction+0x98>
 8006306:	4b1b      	ldr	r3, [pc, #108]	@ (8006374 <SPI_EndRxTxTransaction+0xa0>)
 8006308:	681b      	ldr	r3, [r3, #0]
 800630a:	4a1b      	ldr	r2, [pc, #108]	@ (8006378 <SPI_EndRxTxTransaction+0xa4>)
 800630c:	fba2 2303 	umull	r2, r3, r2, r3
 8006310:	0d5b      	lsrs	r3, r3, #21
 8006312:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006316:	fb02 f303 	mul.w	r3, r2, r3
 800631a:	617b      	str	r3, [r7, #20]
 800631c:	68fb      	ldr	r3, [r7, #12]
 800631e:	685b      	ldr	r3, [r3, #4]
 8006320:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006324:	d112      	bne.n	800634c <SPI_EndRxTxTransaction+0x78>
 8006326:	687b      	ldr	r3, [r7, #4]
 8006328:	9300      	str	r3, [sp, #0]
 800632a:	68bb      	ldr	r3, [r7, #8]
 800632c:	2200      	movs	r2, #0
 800632e:	2180      	movs	r1, #128	@ 0x80
 8006330:	68f8      	ldr	r0, [r7, #12]
 8006332:	f7ff ff47 	bl	80061c4 <SPI_WaitFlagStateUntilTimeout>
 8006336:	4603      	mov	r3, r0
 8006338:	2b00      	cmp	r3, #0
 800633a:	d016      	beq.n	800636a <SPI_EndRxTxTransaction+0x96>
 800633c:	68fb      	ldr	r3, [r7, #12]
 800633e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006340:	f043 0220 	orr.w	r2, r3, #32
 8006344:	68fb      	ldr	r3, [r7, #12]
 8006346:	655a      	str	r2, [r3, #84]	@ 0x54
 8006348:	2303      	movs	r3, #3
 800634a:	e00f      	b.n	800636c <SPI_EndRxTxTransaction+0x98>
 800634c:	697b      	ldr	r3, [r7, #20]
 800634e:	2b00      	cmp	r3, #0
 8006350:	d00a      	beq.n	8006368 <SPI_EndRxTxTransaction+0x94>
 8006352:	697b      	ldr	r3, [r7, #20]
 8006354:	3b01      	subs	r3, #1
 8006356:	617b      	str	r3, [r7, #20]
 8006358:	68fb      	ldr	r3, [r7, #12]
 800635a:	681b      	ldr	r3, [r3, #0]
 800635c:	689b      	ldr	r3, [r3, #8]
 800635e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006362:	2b80      	cmp	r3, #128	@ 0x80
 8006364:	d0f2      	beq.n	800634c <SPI_EndRxTxTransaction+0x78>
 8006366:	e000      	b.n	800636a <SPI_EndRxTxTransaction+0x96>
 8006368:	bf00      	nop
 800636a:	2300      	movs	r3, #0
 800636c:	4618      	mov	r0, r3
 800636e:	3718      	adds	r7, #24
 8006370:	46bd      	mov	sp, r7
 8006372:	bd80      	pop	{r7, pc}
 8006374:	20000540 	.word	0x20000540
 8006378:	165e9f81 	.word	0x165e9f81

0800637c <HAL_UART_Init>:
 800637c:	b580      	push	{r7, lr}
 800637e:	b082      	sub	sp, #8
 8006380:	af00      	add	r7, sp, #0
 8006382:	6078      	str	r0, [r7, #4]
 8006384:	687b      	ldr	r3, [r7, #4]
 8006386:	2b00      	cmp	r3, #0
 8006388:	d101      	bne.n	800638e <HAL_UART_Init+0x12>
 800638a:	2301      	movs	r3, #1
 800638c:	e042      	b.n	8006414 <HAL_UART_Init+0x98>
 800638e:	687b      	ldr	r3, [r7, #4]
 8006390:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006394:	b2db      	uxtb	r3, r3
 8006396:	2b00      	cmp	r3, #0
 8006398:	d106      	bne.n	80063a8 <HAL_UART_Init+0x2c>
 800639a:	687b      	ldr	r3, [r7, #4]
 800639c:	2200      	movs	r2, #0
 800639e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80063a2:	6878      	ldr	r0, [r7, #4]
 80063a4:	f7fc f98c 	bl	80026c0 <HAL_UART_MspInit>
 80063a8:	687b      	ldr	r3, [r7, #4]
 80063aa:	2224      	movs	r2, #36	@ 0x24
 80063ac:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80063b0:	687b      	ldr	r3, [r7, #4]
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	68da      	ldr	r2, [r3, #12]
 80063b6:	687b      	ldr	r3, [r7, #4]
 80063b8:	681b      	ldr	r3, [r3, #0]
 80063ba:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80063be:	60da      	str	r2, [r3, #12]
 80063c0:	6878      	ldr	r0, [r7, #4]
 80063c2:	f000 fdff 	bl	8006fc4 <UART_SetConfig>
 80063c6:	687b      	ldr	r3, [r7, #4]
 80063c8:	681b      	ldr	r3, [r3, #0]
 80063ca:	691a      	ldr	r2, [r3, #16]
 80063cc:	687b      	ldr	r3, [r7, #4]
 80063ce:	681b      	ldr	r3, [r3, #0]
 80063d0:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80063d4:	611a      	str	r2, [r3, #16]
 80063d6:	687b      	ldr	r3, [r7, #4]
 80063d8:	681b      	ldr	r3, [r3, #0]
 80063da:	695a      	ldr	r2, [r3, #20]
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	681b      	ldr	r3, [r3, #0]
 80063e0:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80063e4:	615a      	str	r2, [r3, #20]
 80063e6:	687b      	ldr	r3, [r7, #4]
 80063e8:	681b      	ldr	r3, [r3, #0]
 80063ea:	68da      	ldr	r2, [r3, #12]
 80063ec:	687b      	ldr	r3, [r7, #4]
 80063ee:	681b      	ldr	r3, [r3, #0]
 80063f0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80063f4:	60da      	str	r2, [r3, #12]
 80063f6:	687b      	ldr	r3, [r7, #4]
 80063f8:	2200      	movs	r2, #0
 80063fa:	645a      	str	r2, [r3, #68]	@ 0x44
 80063fc:	687b      	ldr	r3, [r7, #4]
 80063fe:	2220      	movs	r2, #32
 8006400:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006404:	687b      	ldr	r3, [r7, #4]
 8006406:	2220      	movs	r2, #32
 8006408:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800640c:	687b      	ldr	r3, [r7, #4]
 800640e:	2200      	movs	r2, #0
 8006410:	635a      	str	r2, [r3, #52]	@ 0x34
 8006412:	2300      	movs	r3, #0
 8006414:	4618      	mov	r0, r3
 8006416:	3708      	adds	r7, #8
 8006418:	46bd      	mov	sp, r7
 800641a:	bd80      	pop	{r7, pc}

0800641c <HAL_UART_Transmit>:
 800641c:	b580      	push	{r7, lr}
 800641e:	b08a      	sub	sp, #40	@ 0x28
 8006420:	af02      	add	r7, sp, #8
 8006422:	60f8      	str	r0, [r7, #12]
 8006424:	60b9      	str	r1, [r7, #8]
 8006426:	603b      	str	r3, [r7, #0]
 8006428:	4613      	mov	r3, r2
 800642a:	80fb      	strh	r3, [r7, #6]
 800642c:	2300      	movs	r3, #0
 800642e:	617b      	str	r3, [r7, #20]
 8006430:	68fb      	ldr	r3, [r7, #12]
 8006432:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006436:	b2db      	uxtb	r3, r3
 8006438:	2b20      	cmp	r3, #32
 800643a:	d175      	bne.n	8006528 <HAL_UART_Transmit+0x10c>
 800643c:	68bb      	ldr	r3, [r7, #8]
 800643e:	2b00      	cmp	r3, #0
 8006440:	d002      	beq.n	8006448 <HAL_UART_Transmit+0x2c>
 8006442:	88fb      	ldrh	r3, [r7, #6]
 8006444:	2b00      	cmp	r3, #0
 8006446:	d101      	bne.n	800644c <HAL_UART_Transmit+0x30>
 8006448:	2301      	movs	r3, #1
 800644a:	e06e      	b.n	800652a <HAL_UART_Transmit+0x10e>
 800644c:	68fb      	ldr	r3, [r7, #12]
 800644e:	2200      	movs	r2, #0
 8006450:	645a      	str	r2, [r3, #68]	@ 0x44
 8006452:	68fb      	ldr	r3, [r7, #12]
 8006454:	2221      	movs	r2, #33	@ 0x21
 8006456:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800645a:	f7fe fcdb 	bl	8004e14 <HAL_GetTick>
 800645e:	6178      	str	r0, [r7, #20]
 8006460:	68fb      	ldr	r3, [r7, #12]
 8006462:	88fa      	ldrh	r2, [r7, #6]
 8006464:	849a      	strh	r2, [r3, #36]	@ 0x24
 8006466:	68fb      	ldr	r3, [r7, #12]
 8006468:	88fa      	ldrh	r2, [r7, #6]
 800646a:	84da      	strh	r2, [r3, #38]	@ 0x26
 800646c:	68fb      	ldr	r3, [r7, #12]
 800646e:	689b      	ldr	r3, [r3, #8]
 8006470:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006474:	d108      	bne.n	8006488 <HAL_UART_Transmit+0x6c>
 8006476:	68fb      	ldr	r3, [r7, #12]
 8006478:	691b      	ldr	r3, [r3, #16]
 800647a:	2b00      	cmp	r3, #0
 800647c:	d104      	bne.n	8006488 <HAL_UART_Transmit+0x6c>
 800647e:	2300      	movs	r3, #0
 8006480:	61fb      	str	r3, [r7, #28]
 8006482:	68bb      	ldr	r3, [r7, #8]
 8006484:	61bb      	str	r3, [r7, #24]
 8006486:	e003      	b.n	8006490 <HAL_UART_Transmit+0x74>
 8006488:	68bb      	ldr	r3, [r7, #8]
 800648a:	61fb      	str	r3, [r7, #28]
 800648c:	2300      	movs	r3, #0
 800648e:	61bb      	str	r3, [r7, #24]
 8006490:	e02e      	b.n	80064f0 <HAL_UART_Transmit+0xd4>
 8006492:	683b      	ldr	r3, [r7, #0]
 8006494:	9300      	str	r3, [sp, #0]
 8006496:	697b      	ldr	r3, [r7, #20]
 8006498:	2200      	movs	r2, #0
 800649a:	2180      	movs	r1, #128	@ 0x80
 800649c:	68f8      	ldr	r0, [r7, #12]
 800649e:	f000 fb9b 	bl	8006bd8 <UART_WaitOnFlagUntilTimeout>
 80064a2:	4603      	mov	r3, r0
 80064a4:	2b00      	cmp	r3, #0
 80064a6:	d005      	beq.n	80064b4 <HAL_UART_Transmit+0x98>
 80064a8:	68fb      	ldr	r3, [r7, #12]
 80064aa:	2220      	movs	r2, #32
 80064ac:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80064b0:	2303      	movs	r3, #3
 80064b2:	e03a      	b.n	800652a <HAL_UART_Transmit+0x10e>
 80064b4:	69fb      	ldr	r3, [r7, #28]
 80064b6:	2b00      	cmp	r3, #0
 80064b8:	d10b      	bne.n	80064d2 <HAL_UART_Transmit+0xb6>
 80064ba:	69bb      	ldr	r3, [r7, #24]
 80064bc:	881b      	ldrh	r3, [r3, #0]
 80064be:	461a      	mov	r2, r3
 80064c0:	68fb      	ldr	r3, [r7, #12]
 80064c2:	681b      	ldr	r3, [r3, #0]
 80064c4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80064c8:	605a      	str	r2, [r3, #4]
 80064ca:	69bb      	ldr	r3, [r7, #24]
 80064cc:	3302      	adds	r3, #2
 80064ce:	61bb      	str	r3, [r7, #24]
 80064d0:	e007      	b.n	80064e2 <HAL_UART_Transmit+0xc6>
 80064d2:	69fb      	ldr	r3, [r7, #28]
 80064d4:	781a      	ldrb	r2, [r3, #0]
 80064d6:	68fb      	ldr	r3, [r7, #12]
 80064d8:	681b      	ldr	r3, [r3, #0]
 80064da:	605a      	str	r2, [r3, #4]
 80064dc:	69fb      	ldr	r3, [r7, #28]
 80064de:	3301      	adds	r3, #1
 80064e0:	61fb      	str	r3, [r7, #28]
 80064e2:	68fb      	ldr	r3, [r7, #12]
 80064e4:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80064e6:	b29b      	uxth	r3, r3
 80064e8:	3b01      	subs	r3, #1
 80064ea:	b29a      	uxth	r2, r3
 80064ec:	68fb      	ldr	r3, [r7, #12]
 80064ee:	84da      	strh	r2, [r3, #38]	@ 0x26
 80064f0:	68fb      	ldr	r3, [r7, #12]
 80064f2:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80064f4:	b29b      	uxth	r3, r3
 80064f6:	2b00      	cmp	r3, #0
 80064f8:	d1cb      	bne.n	8006492 <HAL_UART_Transmit+0x76>
 80064fa:	683b      	ldr	r3, [r7, #0]
 80064fc:	9300      	str	r3, [sp, #0]
 80064fe:	697b      	ldr	r3, [r7, #20]
 8006500:	2200      	movs	r2, #0
 8006502:	2140      	movs	r1, #64	@ 0x40
 8006504:	68f8      	ldr	r0, [r7, #12]
 8006506:	f000 fb67 	bl	8006bd8 <UART_WaitOnFlagUntilTimeout>
 800650a:	4603      	mov	r3, r0
 800650c:	2b00      	cmp	r3, #0
 800650e:	d005      	beq.n	800651c <HAL_UART_Transmit+0x100>
 8006510:	68fb      	ldr	r3, [r7, #12]
 8006512:	2220      	movs	r2, #32
 8006514:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006518:	2303      	movs	r3, #3
 800651a:	e006      	b.n	800652a <HAL_UART_Transmit+0x10e>
 800651c:	68fb      	ldr	r3, [r7, #12]
 800651e:	2220      	movs	r2, #32
 8006520:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006524:	2300      	movs	r3, #0
 8006526:	e000      	b.n	800652a <HAL_UART_Transmit+0x10e>
 8006528:	2302      	movs	r3, #2
 800652a:	4618      	mov	r0, r3
 800652c:	3720      	adds	r7, #32
 800652e:	46bd      	mov	sp, r7
 8006530:	bd80      	pop	{r7, pc}

08006532 <HAL_UART_Receive>:
 8006532:	b580      	push	{r7, lr}
 8006534:	b08a      	sub	sp, #40	@ 0x28
 8006536:	af02      	add	r7, sp, #8
 8006538:	60f8      	str	r0, [r7, #12]
 800653a:	60b9      	str	r1, [r7, #8]
 800653c:	603b      	str	r3, [r7, #0]
 800653e:	4613      	mov	r3, r2
 8006540:	80fb      	strh	r3, [r7, #6]
 8006542:	2300      	movs	r3, #0
 8006544:	617b      	str	r3, [r7, #20]
 8006546:	68fb      	ldr	r3, [r7, #12]
 8006548:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800654c:	b2db      	uxtb	r3, r3
 800654e:	2b20      	cmp	r3, #32
 8006550:	f040 8081 	bne.w	8006656 <HAL_UART_Receive+0x124>
 8006554:	68bb      	ldr	r3, [r7, #8]
 8006556:	2b00      	cmp	r3, #0
 8006558:	d002      	beq.n	8006560 <HAL_UART_Receive+0x2e>
 800655a:	88fb      	ldrh	r3, [r7, #6]
 800655c:	2b00      	cmp	r3, #0
 800655e:	d101      	bne.n	8006564 <HAL_UART_Receive+0x32>
 8006560:	2301      	movs	r3, #1
 8006562:	e079      	b.n	8006658 <HAL_UART_Receive+0x126>
 8006564:	68fb      	ldr	r3, [r7, #12]
 8006566:	2200      	movs	r2, #0
 8006568:	645a      	str	r2, [r3, #68]	@ 0x44
 800656a:	68fb      	ldr	r3, [r7, #12]
 800656c:	2222      	movs	r2, #34	@ 0x22
 800656e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006572:	68fb      	ldr	r3, [r7, #12]
 8006574:	2200      	movs	r2, #0
 8006576:	631a      	str	r2, [r3, #48]	@ 0x30
 8006578:	f7fe fc4c 	bl	8004e14 <HAL_GetTick>
 800657c:	6178      	str	r0, [r7, #20]
 800657e:	68fb      	ldr	r3, [r7, #12]
 8006580:	88fa      	ldrh	r2, [r7, #6]
 8006582:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8006584:	68fb      	ldr	r3, [r7, #12]
 8006586:	88fa      	ldrh	r2, [r7, #6]
 8006588:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800658a:	68fb      	ldr	r3, [r7, #12]
 800658c:	689b      	ldr	r3, [r3, #8]
 800658e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006592:	d108      	bne.n	80065a6 <HAL_UART_Receive+0x74>
 8006594:	68fb      	ldr	r3, [r7, #12]
 8006596:	691b      	ldr	r3, [r3, #16]
 8006598:	2b00      	cmp	r3, #0
 800659a:	d104      	bne.n	80065a6 <HAL_UART_Receive+0x74>
 800659c:	2300      	movs	r3, #0
 800659e:	61fb      	str	r3, [r7, #28]
 80065a0:	68bb      	ldr	r3, [r7, #8]
 80065a2:	61bb      	str	r3, [r7, #24]
 80065a4:	e003      	b.n	80065ae <HAL_UART_Receive+0x7c>
 80065a6:	68bb      	ldr	r3, [r7, #8]
 80065a8:	61fb      	str	r3, [r7, #28]
 80065aa:	2300      	movs	r3, #0
 80065ac:	61bb      	str	r3, [r7, #24]
 80065ae:	e047      	b.n	8006640 <HAL_UART_Receive+0x10e>
 80065b0:	683b      	ldr	r3, [r7, #0]
 80065b2:	9300      	str	r3, [sp, #0]
 80065b4:	697b      	ldr	r3, [r7, #20]
 80065b6:	2200      	movs	r2, #0
 80065b8:	2120      	movs	r1, #32
 80065ba:	68f8      	ldr	r0, [r7, #12]
 80065bc:	f000 fb0c 	bl	8006bd8 <UART_WaitOnFlagUntilTimeout>
 80065c0:	4603      	mov	r3, r0
 80065c2:	2b00      	cmp	r3, #0
 80065c4:	d005      	beq.n	80065d2 <HAL_UART_Receive+0xa0>
 80065c6:	68fb      	ldr	r3, [r7, #12]
 80065c8:	2220      	movs	r2, #32
 80065ca:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80065ce:	2303      	movs	r3, #3
 80065d0:	e042      	b.n	8006658 <HAL_UART_Receive+0x126>
 80065d2:	69fb      	ldr	r3, [r7, #28]
 80065d4:	2b00      	cmp	r3, #0
 80065d6:	d10c      	bne.n	80065f2 <HAL_UART_Receive+0xc0>
 80065d8:	68fb      	ldr	r3, [r7, #12]
 80065da:	681b      	ldr	r3, [r3, #0]
 80065dc:	685b      	ldr	r3, [r3, #4]
 80065de:	b29b      	uxth	r3, r3
 80065e0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80065e4:	b29a      	uxth	r2, r3
 80065e6:	69bb      	ldr	r3, [r7, #24]
 80065e8:	801a      	strh	r2, [r3, #0]
 80065ea:	69bb      	ldr	r3, [r7, #24]
 80065ec:	3302      	adds	r3, #2
 80065ee:	61bb      	str	r3, [r7, #24]
 80065f0:	e01f      	b.n	8006632 <HAL_UART_Receive+0x100>
 80065f2:	68fb      	ldr	r3, [r7, #12]
 80065f4:	689b      	ldr	r3, [r3, #8]
 80065f6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80065fa:	d007      	beq.n	800660c <HAL_UART_Receive+0xda>
 80065fc:	68fb      	ldr	r3, [r7, #12]
 80065fe:	689b      	ldr	r3, [r3, #8]
 8006600:	2b00      	cmp	r3, #0
 8006602:	d10a      	bne.n	800661a <HAL_UART_Receive+0xe8>
 8006604:	68fb      	ldr	r3, [r7, #12]
 8006606:	691b      	ldr	r3, [r3, #16]
 8006608:	2b00      	cmp	r3, #0
 800660a:	d106      	bne.n	800661a <HAL_UART_Receive+0xe8>
 800660c:	68fb      	ldr	r3, [r7, #12]
 800660e:	681b      	ldr	r3, [r3, #0]
 8006610:	685b      	ldr	r3, [r3, #4]
 8006612:	b2da      	uxtb	r2, r3
 8006614:	69fb      	ldr	r3, [r7, #28]
 8006616:	701a      	strb	r2, [r3, #0]
 8006618:	e008      	b.n	800662c <HAL_UART_Receive+0xfa>
 800661a:	68fb      	ldr	r3, [r7, #12]
 800661c:	681b      	ldr	r3, [r3, #0]
 800661e:	685b      	ldr	r3, [r3, #4]
 8006620:	b2db      	uxtb	r3, r3
 8006622:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006626:	b2da      	uxtb	r2, r3
 8006628:	69fb      	ldr	r3, [r7, #28]
 800662a:	701a      	strb	r2, [r3, #0]
 800662c:	69fb      	ldr	r3, [r7, #28]
 800662e:	3301      	adds	r3, #1
 8006630:	61fb      	str	r3, [r7, #28]
 8006632:	68fb      	ldr	r3, [r7, #12]
 8006634:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006636:	b29b      	uxth	r3, r3
 8006638:	3b01      	subs	r3, #1
 800663a:	b29a      	uxth	r2, r3
 800663c:	68fb      	ldr	r3, [r7, #12]
 800663e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006640:	68fb      	ldr	r3, [r7, #12]
 8006642:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006644:	b29b      	uxth	r3, r3
 8006646:	2b00      	cmp	r3, #0
 8006648:	d1b2      	bne.n	80065b0 <HAL_UART_Receive+0x7e>
 800664a:	68fb      	ldr	r3, [r7, #12]
 800664c:	2220      	movs	r2, #32
 800664e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006652:	2300      	movs	r3, #0
 8006654:	e000      	b.n	8006658 <HAL_UART_Receive+0x126>
 8006656:	2302      	movs	r3, #2
 8006658:	4618      	mov	r0, r3
 800665a:	3720      	adds	r7, #32
 800665c:	46bd      	mov	sp, r7
 800665e:	bd80      	pop	{r7, pc}

08006660 <HAL_UART_IRQHandler>:
 8006660:	b580      	push	{r7, lr}
 8006662:	b0ba      	sub	sp, #232	@ 0xe8
 8006664:	af00      	add	r7, sp, #0
 8006666:	6078      	str	r0, [r7, #4]
 8006668:	687b      	ldr	r3, [r7, #4]
 800666a:	681b      	ldr	r3, [r3, #0]
 800666c:	681b      	ldr	r3, [r3, #0]
 800666e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8006672:	687b      	ldr	r3, [r7, #4]
 8006674:	681b      	ldr	r3, [r3, #0]
 8006676:	68db      	ldr	r3, [r3, #12]
 8006678:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800667c:	687b      	ldr	r3, [r7, #4]
 800667e:	681b      	ldr	r3, [r3, #0]
 8006680:	695b      	ldr	r3, [r3, #20]
 8006682:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8006686:	2300      	movs	r3, #0
 8006688:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800668c:	2300      	movs	r3, #0
 800668e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8006692:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006696:	f003 030f 	and.w	r3, r3, #15
 800669a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800669e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80066a2:	2b00      	cmp	r3, #0
 80066a4:	d10f      	bne.n	80066c6 <HAL_UART_IRQHandler+0x66>
 80066a6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80066aa:	f003 0320 	and.w	r3, r3, #32
 80066ae:	2b00      	cmp	r3, #0
 80066b0:	d009      	beq.n	80066c6 <HAL_UART_IRQHandler+0x66>
 80066b2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80066b6:	f003 0320 	and.w	r3, r3, #32
 80066ba:	2b00      	cmp	r3, #0
 80066bc:	d003      	beq.n	80066c6 <HAL_UART_IRQHandler+0x66>
 80066be:	6878      	ldr	r0, [r7, #4]
 80066c0:	f000 fbc2 	bl	8006e48 <UART_Receive_IT>
 80066c4:	e25b      	b.n	8006b7e <HAL_UART_IRQHandler+0x51e>
 80066c6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80066ca:	2b00      	cmp	r3, #0
 80066cc:	f000 80de 	beq.w	800688c <HAL_UART_IRQHandler+0x22c>
 80066d0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80066d4:	f003 0301 	and.w	r3, r3, #1
 80066d8:	2b00      	cmp	r3, #0
 80066da:	d106      	bne.n	80066ea <HAL_UART_IRQHandler+0x8a>
 80066dc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80066e0:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 80066e4:	2b00      	cmp	r3, #0
 80066e6:	f000 80d1 	beq.w	800688c <HAL_UART_IRQHandler+0x22c>
 80066ea:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80066ee:	f003 0301 	and.w	r3, r3, #1
 80066f2:	2b00      	cmp	r3, #0
 80066f4:	d00b      	beq.n	800670e <HAL_UART_IRQHandler+0xae>
 80066f6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80066fa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80066fe:	2b00      	cmp	r3, #0
 8006700:	d005      	beq.n	800670e <HAL_UART_IRQHandler+0xae>
 8006702:	687b      	ldr	r3, [r7, #4]
 8006704:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006706:	f043 0201 	orr.w	r2, r3, #1
 800670a:	687b      	ldr	r3, [r7, #4]
 800670c:	645a      	str	r2, [r3, #68]	@ 0x44
 800670e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006712:	f003 0304 	and.w	r3, r3, #4
 8006716:	2b00      	cmp	r3, #0
 8006718:	d00b      	beq.n	8006732 <HAL_UART_IRQHandler+0xd2>
 800671a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800671e:	f003 0301 	and.w	r3, r3, #1
 8006722:	2b00      	cmp	r3, #0
 8006724:	d005      	beq.n	8006732 <HAL_UART_IRQHandler+0xd2>
 8006726:	687b      	ldr	r3, [r7, #4]
 8006728:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800672a:	f043 0202 	orr.w	r2, r3, #2
 800672e:	687b      	ldr	r3, [r7, #4]
 8006730:	645a      	str	r2, [r3, #68]	@ 0x44
 8006732:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006736:	f003 0302 	and.w	r3, r3, #2
 800673a:	2b00      	cmp	r3, #0
 800673c:	d00b      	beq.n	8006756 <HAL_UART_IRQHandler+0xf6>
 800673e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006742:	f003 0301 	and.w	r3, r3, #1
 8006746:	2b00      	cmp	r3, #0
 8006748:	d005      	beq.n	8006756 <HAL_UART_IRQHandler+0xf6>
 800674a:	687b      	ldr	r3, [r7, #4]
 800674c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800674e:	f043 0204 	orr.w	r2, r3, #4
 8006752:	687b      	ldr	r3, [r7, #4]
 8006754:	645a      	str	r2, [r3, #68]	@ 0x44
 8006756:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800675a:	f003 0308 	and.w	r3, r3, #8
 800675e:	2b00      	cmp	r3, #0
 8006760:	d011      	beq.n	8006786 <HAL_UART_IRQHandler+0x126>
 8006762:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006766:	f003 0320 	and.w	r3, r3, #32
 800676a:	2b00      	cmp	r3, #0
 800676c:	d105      	bne.n	800677a <HAL_UART_IRQHandler+0x11a>
 800676e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006772:	f003 0301 	and.w	r3, r3, #1
 8006776:	2b00      	cmp	r3, #0
 8006778:	d005      	beq.n	8006786 <HAL_UART_IRQHandler+0x126>
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800677e:	f043 0208 	orr.w	r2, r3, #8
 8006782:	687b      	ldr	r3, [r7, #4]
 8006784:	645a      	str	r2, [r3, #68]	@ 0x44
 8006786:	687b      	ldr	r3, [r7, #4]
 8006788:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800678a:	2b00      	cmp	r3, #0
 800678c:	f000 81f2 	beq.w	8006b74 <HAL_UART_IRQHandler+0x514>
 8006790:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006794:	f003 0320 	and.w	r3, r3, #32
 8006798:	2b00      	cmp	r3, #0
 800679a:	d008      	beq.n	80067ae <HAL_UART_IRQHandler+0x14e>
 800679c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80067a0:	f003 0320 	and.w	r3, r3, #32
 80067a4:	2b00      	cmp	r3, #0
 80067a6:	d002      	beq.n	80067ae <HAL_UART_IRQHandler+0x14e>
 80067a8:	6878      	ldr	r0, [r7, #4]
 80067aa:	f000 fb4d 	bl	8006e48 <UART_Receive_IT>
 80067ae:	687b      	ldr	r3, [r7, #4]
 80067b0:	681b      	ldr	r3, [r3, #0]
 80067b2:	695b      	ldr	r3, [r3, #20]
 80067b4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80067b8:	2b40      	cmp	r3, #64	@ 0x40
 80067ba:	bf0c      	ite	eq
 80067bc:	2301      	moveq	r3, #1
 80067be:	2300      	movne	r3, #0
 80067c0:	b2db      	uxtb	r3, r3
 80067c2:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80067c6:	687b      	ldr	r3, [r7, #4]
 80067c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80067ca:	f003 0308 	and.w	r3, r3, #8
 80067ce:	2b00      	cmp	r3, #0
 80067d0:	d103      	bne.n	80067da <HAL_UART_IRQHandler+0x17a>
 80067d2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 80067d6:	2b00      	cmp	r3, #0
 80067d8:	d04f      	beq.n	800687a <HAL_UART_IRQHandler+0x21a>
 80067da:	6878      	ldr	r0, [r7, #4]
 80067dc:	f000 fa55 	bl	8006c8a <UART_EndRxTransfer>
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	681b      	ldr	r3, [r3, #0]
 80067e4:	695b      	ldr	r3, [r3, #20]
 80067e6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80067ea:	2b40      	cmp	r3, #64	@ 0x40
 80067ec:	d141      	bne.n	8006872 <HAL_UART_IRQHandler+0x212>
 80067ee:	687b      	ldr	r3, [r7, #4]
 80067f0:	681b      	ldr	r3, [r3, #0]
 80067f2:	3314      	adds	r3, #20
 80067f4:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80067f8:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80067fc:	e853 3f00 	ldrex	r3, [r3]
 8006800:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006804:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8006808:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800680c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	681b      	ldr	r3, [r3, #0]
 8006814:	3314      	adds	r3, #20
 8006816:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 800681a:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800681e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8006822:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8006826:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800682a:	e841 2300 	strex	r3, r2, [r1]
 800682e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8006832:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8006836:	2b00      	cmp	r3, #0
 8006838:	d1d9      	bne.n	80067ee <HAL_UART_IRQHandler+0x18e>
 800683a:	687b      	ldr	r3, [r7, #4]
 800683c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800683e:	2b00      	cmp	r3, #0
 8006840:	d013      	beq.n	800686a <HAL_UART_IRQHandler+0x20a>
 8006842:	687b      	ldr	r3, [r7, #4]
 8006844:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006846:	4a7e      	ldr	r2, [pc, #504]	@ (8006a40 <HAL_UART_IRQHandler+0x3e0>)
 8006848:	651a      	str	r2, [r3, #80]	@ 0x50
 800684a:	687b      	ldr	r3, [r7, #4]
 800684c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800684e:	4618      	mov	r0, r3
 8006850:	f7fe fc91 	bl	8005176 <HAL_DMA_Abort_IT>
 8006854:	4603      	mov	r3, r0
 8006856:	2b00      	cmp	r3, #0
 8006858:	d016      	beq.n	8006888 <HAL_UART_IRQHandler+0x228>
 800685a:	687b      	ldr	r3, [r7, #4]
 800685c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800685e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006860:	687a      	ldr	r2, [r7, #4]
 8006862:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8006864:	4610      	mov	r0, r2
 8006866:	4798      	blx	r3
 8006868:	e00e      	b.n	8006888 <HAL_UART_IRQHandler+0x228>
 800686a:	6878      	ldr	r0, [r7, #4]
 800686c:	f000 f99e 	bl	8006bac <HAL_UART_ErrorCallback>
 8006870:	e00a      	b.n	8006888 <HAL_UART_IRQHandler+0x228>
 8006872:	6878      	ldr	r0, [r7, #4]
 8006874:	f000 f99a 	bl	8006bac <HAL_UART_ErrorCallback>
 8006878:	e006      	b.n	8006888 <HAL_UART_IRQHandler+0x228>
 800687a:	6878      	ldr	r0, [r7, #4]
 800687c:	f000 f996 	bl	8006bac <HAL_UART_ErrorCallback>
 8006880:	687b      	ldr	r3, [r7, #4]
 8006882:	2200      	movs	r2, #0
 8006884:	645a      	str	r2, [r3, #68]	@ 0x44
 8006886:	e175      	b.n	8006b74 <HAL_UART_IRQHandler+0x514>
 8006888:	bf00      	nop
 800688a:	e173      	b.n	8006b74 <HAL_UART_IRQHandler+0x514>
 800688c:	687b      	ldr	r3, [r7, #4]
 800688e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006890:	2b01      	cmp	r3, #1
 8006892:	f040 814f 	bne.w	8006b34 <HAL_UART_IRQHandler+0x4d4>
 8006896:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800689a:	f003 0310 	and.w	r3, r3, #16
 800689e:	2b00      	cmp	r3, #0
 80068a0:	f000 8148 	beq.w	8006b34 <HAL_UART_IRQHandler+0x4d4>
 80068a4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80068a8:	f003 0310 	and.w	r3, r3, #16
 80068ac:	2b00      	cmp	r3, #0
 80068ae:	f000 8141 	beq.w	8006b34 <HAL_UART_IRQHandler+0x4d4>
 80068b2:	2300      	movs	r3, #0
 80068b4:	60bb      	str	r3, [r7, #8]
 80068b6:	687b      	ldr	r3, [r7, #4]
 80068b8:	681b      	ldr	r3, [r3, #0]
 80068ba:	681b      	ldr	r3, [r3, #0]
 80068bc:	60bb      	str	r3, [r7, #8]
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	681b      	ldr	r3, [r3, #0]
 80068c2:	685b      	ldr	r3, [r3, #4]
 80068c4:	60bb      	str	r3, [r7, #8]
 80068c6:	68bb      	ldr	r3, [r7, #8]
 80068c8:	687b      	ldr	r3, [r7, #4]
 80068ca:	681b      	ldr	r3, [r3, #0]
 80068cc:	695b      	ldr	r3, [r3, #20]
 80068ce:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80068d2:	2b40      	cmp	r3, #64	@ 0x40
 80068d4:	f040 80b6 	bne.w	8006a44 <HAL_UART_IRQHandler+0x3e4>
 80068d8:	687b      	ldr	r3, [r7, #4]
 80068da:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80068dc:	681b      	ldr	r3, [r3, #0]
 80068de:	685b      	ldr	r3, [r3, #4]
 80068e0:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 80068e4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 80068e8:	2b00      	cmp	r3, #0
 80068ea:	f000 8145 	beq.w	8006b78 <HAL_UART_IRQHandler+0x518>
 80068ee:	687b      	ldr	r3, [r7, #4]
 80068f0:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80068f2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80068f6:	429a      	cmp	r2, r3
 80068f8:	f080 813e 	bcs.w	8006b78 <HAL_UART_IRQHandler+0x518>
 80068fc:	687b      	ldr	r3, [r7, #4]
 80068fe:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8006902:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006908:	69db      	ldr	r3, [r3, #28]
 800690a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800690e:	f000 8088 	beq.w	8006a22 <HAL_UART_IRQHandler+0x3c2>
 8006912:	687b      	ldr	r3, [r7, #4]
 8006914:	681b      	ldr	r3, [r3, #0]
 8006916:	330c      	adds	r3, #12
 8006918:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800691c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8006920:	e853 3f00 	ldrex	r3, [r3]
 8006924:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006928:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800692c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006930:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8006934:	687b      	ldr	r3, [r7, #4]
 8006936:	681b      	ldr	r3, [r3, #0]
 8006938:	330c      	adds	r3, #12
 800693a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800693e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8006942:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8006946:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800694a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800694e:	e841 2300 	strex	r3, r2, [r1]
 8006952:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8006956:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800695a:	2b00      	cmp	r3, #0
 800695c:	d1d9      	bne.n	8006912 <HAL_UART_IRQHandler+0x2b2>
 800695e:	687b      	ldr	r3, [r7, #4]
 8006960:	681b      	ldr	r3, [r3, #0]
 8006962:	3314      	adds	r3, #20
 8006964:	677b      	str	r3, [r7, #116]	@ 0x74
 8006966:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8006968:	e853 3f00 	ldrex	r3, [r3]
 800696c:	673b      	str	r3, [r7, #112]	@ 0x70
 800696e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8006970:	f023 0301 	bic.w	r3, r3, #1
 8006974:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	681b      	ldr	r3, [r3, #0]
 800697c:	3314      	adds	r3, #20
 800697e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8006982:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8006986:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8006988:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800698a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800698e:	e841 2300 	strex	r3, r2, [r1]
 8006992:	67bb      	str	r3, [r7, #120]	@ 0x78
 8006994:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8006996:	2b00      	cmp	r3, #0
 8006998:	d1e1      	bne.n	800695e <HAL_UART_IRQHandler+0x2fe>
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	681b      	ldr	r3, [r3, #0]
 800699e:	3314      	adds	r3, #20
 80069a0:	663b      	str	r3, [r7, #96]	@ 0x60
 80069a2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80069a4:	e853 3f00 	ldrex	r3, [r3]
 80069a8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80069aa:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80069ac:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80069b0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	3314      	adds	r3, #20
 80069ba:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80069be:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80069c0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80069c2:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80069c4:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80069c6:	e841 2300 	strex	r3, r2, [r1]
 80069ca:	667b      	str	r3, [r7, #100]	@ 0x64
 80069cc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80069ce:	2b00      	cmp	r3, #0
 80069d0:	d1e3      	bne.n	800699a <HAL_UART_IRQHandler+0x33a>
 80069d2:	687b      	ldr	r3, [r7, #4]
 80069d4:	2220      	movs	r2, #32
 80069d6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80069da:	687b      	ldr	r3, [r7, #4]
 80069dc:	2200      	movs	r2, #0
 80069de:	631a      	str	r2, [r3, #48]	@ 0x30
 80069e0:	687b      	ldr	r3, [r7, #4]
 80069e2:	681b      	ldr	r3, [r3, #0]
 80069e4:	330c      	adds	r3, #12
 80069e6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80069e8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80069ea:	e853 3f00 	ldrex	r3, [r3]
 80069ee:	64bb      	str	r3, [r7, #72]	@ 0x48
 80069f0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80069f2:	f023 0310 	bic.w	r3, r3, #16
 80069f6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80069fa:	687b      	ldr	r3, [r7, #4]
 80069fc:	681b      	ldr	r3, [r3, #0]
 80069fe:	330c      	adds	r3, #12
 8006a00:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8006a04:	65ba      	str	r2, [r7, #88]	@ 0x58
 8006a06:	657b      	str	r3, [r7, #84]	@ 0x54
 8006a08:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8006a0a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8006a0c:	e841 2300 	strex	r3, r2, [r1]
 8006a10:	653b      	str	r3, [r7, #80]	@ 0x50
 8006a12:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8006a14:	2b00      	cmp	r3, #0
 8006a16:	d1e3      	bne.n	80069e0 <HAL_UART_IRQHandler+0x380>
 8006a18:	687b      	ldr	r3, [r7, #4]
 8006a1a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006a1c:	4618      	mov	r0, r3
 8006a1e:	f7fe fb3a 	bl	8005096 <HAL_DMA_Abort>
 8006a22:	687b      	ldr	r3, [r7, #4]
 8006a24:	2202      	movs	r2, #2
 8006a26:	635a      	str	r2, [r3, #52]	@ 0x34
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8006a2c:	687b      	ldr	r3, [r7, #4]
 8006a2e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006a30:	b29b      	uxth	r3, r3
 8006a32:	1ad3      	subs	r3, r2, r3
 8006a34:	b29b      	uxth	r3, r3
 8006a36:	4619      	mov	r1, r3
 8006a38:	6878      	ldr	r0, [r7, #4]
 8006a3a:	f000 f8c1 	bl	8006bc0 <HAL_UARTEx_RxEventCallback>
 8006a3e:	e09b      	b.n	8006b78 <HAL_UART_IRQHandler+0x518>
 8006a40:	08006d51 	.word	0x08006d51
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006a4c:	b29b      	uxth	r3, r3
 8006a4e:	1ad3      	subs	r3, r2, r3
 8006a50:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006a58:	b29b      	uxth	r3, r3
 8006a5a:	2b00      	cmp	r3, #0
 8006a5c:	f000 808e 	beq.w	8006b7c <HAL_UART_IRQHandler+0x51c>
 8006a60:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8006a64:	2b00      	cmp	r3, #0
 8006a66:	f000 8089 	beq.w	8006b7c <HAL_UART_IRQHandler+0x51c>
 8006a6a:	687b      	ldr	r3, [r7, #4]
 8006a6c:	681b      	ldr	r3, [r3, #0]
 8006a6e:	330c      	adds	r3, #12
 8006a70:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006a72:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006a74:	e853 3f00 	ldrex	r3, [r3]
 8006a78:	637b      	str	r3, [r7, #52]	@ 0x34
 8006a7a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006a7c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006a80:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8006a84:	687b      	ldr	r3, [r7, #4]
 8006a86:	681b      	ldr	r3, [r3, #0]
 8006a88:	330c      	adds	r3, #12
 8006a8a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8006a8e:	647a      	str	r2, [r7, #68]	@ 0x44
 8006a90:	643b      	str	r3, [r7, #64]	@ 0x40
 8006a92:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8006a94:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006a96:	e841 2300 	strex	r3, r2, [r1]
 8006a9a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006a9c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006a9e:	2b00      	cmp	r3, #0
 8006aa0:	d1e3      	bne.n	8006a6a <HAL_UART_IRQHandler+0x40a>
 8006aa2:	687b      	ldr	r3, [r7, #4]
 8006aa4:	681b      	ldr	r3, [r3, #0]
 8006aa6:	3314      	adds	r3, #20
 8006aa8:	627b      	str	r3, [r7, #36]	@ 0x24
 8006aaa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006aac:	e853 3f00 	ldrex	r3, [r3]
 8006ab0:	623b      	str	r3, [r7, #32]
 8006ab2:	6a3b      	ldr	r3, [r7, #32]
 8006ab4:	f023 0301 	bic.w	r3, r3, #1
 8006ab8:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8006abc:	687b      	ldr	r3, [r7, #4]
 8006abe:	681b      	ldr	r3, [r3, #0]
 8006ac0:	3314      	adds	r3, #20
 8006ac2:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8006ac6:	633a      	str	r2, [r7, #48]	@ 0x30
 8006ac8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006aca:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8006acc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006ace:	e841 2300 	strex	r3, r2, [r1]
 8006ad2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006ad4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006ad6:	2b00      	cmp	r3, #0
 8006ad8:	d1e3      	bne.n	8006aa2 <HAL_UART_IRQHandler+0x442>
 8006ada:	687b      	ldr	r3, [r7, #4]
 8006adc:	2220      	movs	r2, #32
 8006ade:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006ae2:	687b      	ldr	r3, [r7, #4]
 8006ae4:	2200      	movs	r2, #0
 8006ae6:	631a      	str	r2, [r3, #48]	@ 0x30
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	681b      	ldr	r3, [r3, #0]
 8006aec:	330c      	adds	r3, #12
 8006aee:	613b      	str	r3, [r7, #16]
 8006af0:	693b      	ldr	r3, [r7, #16]
 8006af2:	e853 3f00 	ldrex	r3, [r3]
 8006af6:	60fb      	str	r3, [r7, #12]
 8006af8:	68fb      	ldr	r3, [r7, #12]
 8006afa:	f023 0310 	bic.w	r3, r3, #16
 8006afe:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006b02:	687b      	ldr	r3, [r7, #4]
 8006b04:	681b      	ldr	r3, [r3, #0]
 8006b06:	330c      	adds	r3, #12
 8006b08:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8006b0c:	61fa      	str	r2, [r7, #28]
 8006b0e:	61bb      	str	r3, [r7, #24]
 8006b10:	69b9      	ldr	r1, [r7, #24]
 8006b12:	69fa      	ldr	r2, [r7, #28]
 8006b14:	e841 2300 	strex	r3, r2, [r1]
 8006b18:	617b      	str	r3, [r7, #20]
 8006b1a:	697b      	ldr	r3, [r7, #20]
 8006b1c:	2b00      	cmp	r3, #0
 8006b1e:	d1e3      	bne.n	8006ae8 <HAL_UART_IRQHandler+0x488>
 8006b20:	687b      	ldr	r3, [r7, #4]
 8006b22:	2202      	movs	r2, #2
 8006b24:	635a      	str	r2, [r3, #52]	@ 0x34
 8006b26:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8006b2a:	4619      	mov	r1, r3
 8006b2c:	6878      	ldr	r0, [r7, #4]
 8006b2e:	f000 f847 	bl	8006bc0 <HAL_UARTEx_RxEventCallback>
 8006b32:	e023      	b.n	8006b7c <HAL_UART_IRQHandler+0x51c>
 8006b34:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006b38:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006b3c:	2b00      	cmp	r3, #0
 8006b3e:	d009      	beq.n	8006b54 <HAL_UART_IRQHandler+0x4f4>
 8006b40:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006b44:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006b48:	2b00      	cmp	r3, #0
 8006b4a:	d003      	beq.n	8006b54 <HAL_UART_IRQHandler+0x4f4>
 8006b4c:	6878      	ldr	r0, [r7, #4]
 8006b4e:	f000 f913 	bl	8006d78 <UART_Transmit_IT>
 8006b52:	e014      	b.n	8006b7e <HAL_UART_IRQHandler+0x51e>
 8006b54:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006b58:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006b5c:	2b00      	cmp	r3, #0
 8006b5e:	d00e      	beq.n	8006b7e <HAL_UART_IRQHandler+0x51e>
 8006b60:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006b64:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006b68:	2b00      	cmp	r3, #0
 8006b6a:	d008      	beq.n	8006b7e <HAL_UART_IRQHandler+0x51e>
 8006b6c:	6878      	ldr	r0, [r7, #4]
 8006b6e:	f000 f953 	bl	8006e18 <UART_EndTransmit_IT>
 8006b72:	e004      	b.n	8006b7e <HAL_UART_IRQHandler+0x51e>
 8006b74:	bf00      	nop
 8006b76:	e002      	b.n	8006b7e <HAL_UART_IRQHandler+0x51e>
 8006b78:	bf00      	nop
 8006b7a:	e000      	b.n	8006b7e <HAL_UART_IRQHandler+0x51e>
 8006b7c:	bf00      	nop
 8006b7e:	37e8      	adds	r7, #232	@ 0xe8
 8006b80:	46bd      	mov	sp, r7
 8006b82:	bd80      	pop	{r7, pc}

08006b84 <HAL_UART_TxCpltCallback>:
 8006b84:	b480      	push	{r7}
 8006b86:	b083      	sub	sp, #12
 8006b88:	af00      	add	r7, sp, #0
 8006b8a:	6078      	str	r0, [r7, #4]
 8006b8c:	bf00      	nop
 8006b8e:	370c      	adds	r7, #12
 8006b90:	46bd      	mov	sp, r7
 8006b92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b96:	4770      	bx	lr

08006b98 <HAL_UART_RxCpltCallback>:
 8006b98:	b480      	push	{r7}
 8006b9a:	b083      	sub	sp, #12
 8006b9c:	af00      	add	r7, sp, #0
 8006b9e:	6078      	str	r0, [r7, #4]
 8006ba0:	bf00      	nop
 8006ba2:	370c      	adds	r7, #12
 8006ba4:	46bd      	mov	sp, r7
 8006ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006baa:	4770      	bx	lr

08006bac <HAL_UART_ErrorCallback>:
 8006bac:	b480      	push	{r7}
 8006bae:	b083      	sub	sp, #12
 8006bb0:	af00      	add	r7, sp, #0
 8006bb2:	6078      	str	r0, [r7, #4]
 8006bb4:	bf00      	nop
 8006bb6:	370c      	adds	r7, #12
 8006bb8:	46bd      	mov	sp, r7
 8006bba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bbe:	4770      	bx	lr

08006bc0 <HAL_UARTEx_RxEventCallback>:
 8006bc0:	b480      	push	{r7}
 8006bc2:	b083      	sub	sp, #12
 8006bc4:	af00      	add	r7, sp, #0
 8006bc6:	6078      	str	r0, [r7, #4]
 8006bc8:	460b      	mov	r3, r1
 8006bca:	807b      	strh	r3, [r7, #2]
 8006bcc:	bf00      	nop
 8006bce:	370c      	adds	r7, #12
 8006bd0:	46bd      	mov	sp, r7
 8006bd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bd6:	4770      	bx	lr

08006bd8 <UART_WaitOnFlagUntilTimeout>:
 8006bd8:	b580      	push	{r7, lr}
 8006bda:	b086      	sub	sp, #24
 8006bdc:	af00      	add	r7, sp, #0
 8006bde:	60f8      	str	r0, [r7, #12]
 8006be0:	60b9      	str	r1, [r7, #8]
 8006be2:	603b      	str	r3, [r7, #0]
 8006be4:	4613      	mov	r3, r2
 8006be6:	71fb      	strb	r3, [r7, #7]
 8006be8:	e03b      	b.n	8006c62 <UART_WaitOnFlagUntilTimeout+0x8a>
 8006bea:	6a3b      	ldr	r3, [r7, #32]
 8006bec:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006bf0:	d037      	beq.n	8006c62 <UART_WaitOnFlagUntilTimeout+0x8a>
 8006bf2:	f7fe f90f 	bl	8004e14 <HAL_GetTick>
 8006bf6:	4602      	mov	r2, r0
 8006bf8:	683b      	ldr	r3, [r7, #0]
 8006bfa:	1ad3      	subs	r3, r2, r3
 8006bfc:	6a3a      	ldr	r2, [r7, #32]
 8006bfe:	429a      	cmp	r2, r3
 8006c00:	d302      	bcc.n	8006c08 <UART_WaitOnFlagUntilTimeout+0x30>
 8006c02:	6a3b      	ldr	r3, [r7, #32]
 8006c04:	2b00      	cmp	r3, #0
 8006c06:	d101      	bne.n	8006c0c <UART_WaitOnFlagUntilTimeout+0x34>
 8006c08:	2303      	movs	r3, #3
 8006c0a:	e03a      	b.n	8006c82 <UART_WaitOnFlagUntilTimeout+0xaa>
 8006c0c:	68fb      	ldr	r3, [r7, #12]
 8006c0e:	681b      	ldr	r3, [r3, #0]
 8006c10:	68db      	ldr	r3, [r3, #12]
 8006c12:	f003 0304 	and.w	r3, r3, #4
 8006c16:	2b00      	cmp	r3, #0
 8006c18:	d023      	beq.n	8006c62 <UART_WaitOnFlagUntilTimeout+0x8a>
 8006c1a:	68bb      	ldr	r3, [r7, #8]
 8006c1c:	2b80      	cmp	r3, #128	@ 0x80
 8006c1e:	d020      	beq.n	8006c62 <UART_WaitOnFlagUntilTimeout+0x8a>
 8006c20:	68bb      	ldr	r3, [r7, #8]
 8006c22:	2b40      	cmp	r3, #64	@ 0x40
 8006c24:	d01d      	beq.n	8006c62 <UART_WaitOnFlagUntilTimeout+0x8a>
 8006c26:	68fb      	ldr	r3, [r7, #12]
 8006c28:	681b      	ldr	r3, [r3, #0]
 8006c2a:	681b      	ldr	r3, [r3, #0]
 8006c2c:	f003 0308 	and.w	r3, r3, #8
 8006c30:	2b08      	cmp	r3, #8
 8006c32:	d116      	bne.n	8006c62 <UART_WaitOnFlagUntilTimeout+0x8a>
 8006c34:	2300      	movs	r3, #0
 8006c36:	617b      	str	r3, [r7, #20]
 8006c38:	68fb      	ldr	r3, [r7, #12]
 8006c3a:	681b      	ldr	r3, [r3, #0]
 8006c3c:	681b      	ldr	r3, [r3, #0]
 8006c3e:	617b      	str	r3, [r7, #20]
 8006c40:	68fb      	ldr	r3, [r7, #12]
 8006c42:	681b      	ldr	r3, [r3, #0]
 8006c44:	685b      	ldr	r3, [r3, #4]
 8006c46:	617b      	str	r3, [r7, #20]
 8006c48:	697b      	ldr	r3, [r7, #20]
 8006c4a:	68f8      	ldr	r0, [r7, #12]
 8006c4c:	f000 f81d 	bl	8006c8a <UART_EndRxTransfer>
 8006c50:	68fb      	ldr	r3, [r7, #12]
 8006c52:	2208      	movs	r2, #8
 8006c54:	645a      	str	r2, [r3, #68]	@ 0x44
 8006c56:	68fb      	ldr	r3, [r7, #12]
 8006c58:	2200      	movs	r2, #0
 8006c5a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006c5e:	2301      	movs	r3, #1
 8006c60:	e00f      	b.n	8006c82 <UART_WaitOnFlagUntilTimeout+0xaa>
 8006c62:	68fb      	ldr	r3, [r7, #12]
 8006c64:	681b      	ldr	r3, [r3, #0]
 8006c66:	681a      	ldr	r2, [r3, #0]
 8006c68:	68bb      	ldr	r3, [r7, #8]
 8006c6a:	4013      	ands	r3, r2
 8006c6c:	68ba      	ldr	r2, [r7, #8]
 8006c6e:	429a      	cmp	r2, r3
 8006c70:	bf0c      	ite	eq
 8006c72:	2301      	moveq	r3, #1
 8006c74:	2300      	movne	r3, #0
 8006c76:	b2db      	uxtb	r3, r3
 8006c78:	461a      	mov	r2, r3
 8006c7a:	79fb      	ldrb	r3, [r7, #7]
 8006c7c:	429a      	cmp	r2, r3
 8006c7e:	d0b4      	beq.n	8006bea <UART_WaitOnFlagUntilTimeout+0x12>
 8006c80:	2300      	movs	r3, #0
 8006c82:	4618      	mov	r0, r3
 8006c84:	3718      	adds	r7, #24
 8006c86:	46bd      	mov	sp, r7
 8006c88:	bd80      	pop	{r7, pc}

08006c8a <UART_EndRxTransfer>:
 8006c8a:	b480      	push	{r7}
 8006c8c:	b095      	sub	sp, #84	@ 0x54
 8006c8e:	af00      	add	r7, sp, #0
 8006c90:	6078      	str	r0, [r7, #4]
 8006c92:	687b      	ldr	r3, [r7, #4]
 8006c94:	681b      	ldr	r3, [r3, #0]
 8006c96:	330c      	adds	r3, #12
 8006c98:	637b      	str	r3, [r7, #52]	@ 0x34
 8006c9a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006c9c:	e853 3f00 	ldrex	r3, [r3]
 8006ca0:	633b      	str	r3, [r7, #48]	@ 0x30
 8006ca2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006ca4:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006ca8:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	681b      	ldr	r3, [r3, #0]
 8006cae:	330c      	adds	r3, #12
 8006cb0:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8006cb2:	643a      	str	r2, [r7, #64]	@ 0x40
 8006cb4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006cb6:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8006cb8:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8006cba:	e841 2300 	strex	r3, r2, [r1]
 8006cbe:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006cc0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006cc2:	2b00      	cmp	r3, #0
 8006cc4:	d1e5      	bne.n	8006c92 <UART_EndRxTransfer+0x8>
 8006cc6:	687b      	ldr	r3, [r7, #4]
 8006cc8:	681b      	ldr	r3, [r3, #0]
 8006cca:	3314      	adds	r3, #20
 8006ccc:	623b      	str	r3, [r7, #32]
 8006cce:	6a3b      	ldr	r3, [r7, #32]
 8006cd0:	e853 3f00 	ldrex	r3, [r3]
 8006cd4:	61fb      	str	r3, [r7, #28]
 8006cd6:	69fb      	ldr	r3, [r7, #28]
 8006cd8:	f023 0301 	bic.w	r3, r3, #1
 8006cdc:	64bb      	str	r3, [r7, #72]	@ 0x48
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	681b      	ldr	r3, [r3, #0]
 8006ce2:	3314      	adds	r3, #20
 8006ce4:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8006ce6:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8006ce8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006cea:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8006cec:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8006cee:	e841 2300 	strex	r3, r2, [r1]
 8006cf2:	627b      	str	r3, [r7, #36]	@ 0x24
 8006cf4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006cf6:	2b00      	cmp	r3, #0
 8006cf8:	d1e5      	bne.n	8006cc6 <UART_EndRxTransfer+0x3c>
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006cfe:	2b01      	cmp	r3, #1
 8006d00:	d119      	bne.n	8006d36 <UART_EndRxTransfer+0xac>
 8006d02:	687b      	ldr	r3, [r7, #4]
 8006d04:	681b      	ldr	r3, [r3, #0]
 8006d06:	330c      	adds	r3, #12
 8006d08:	60fb      	str	r3, [r7, #12]
 8006d0a:	68fb      	ldr	r3, [r7, #12]
 8006d0c:	e853 3f00 	ldrex	r3, [r3]
 8006d10:	60bb      	str	r3, [r7, #8]
 8006d12:	68bb      	ldr	r3, [r7, #8]
 8006d14:	f023 0310 	bic.w	r3, r3, #16
 8006d18:	647b      	str	r3, [r7, #68]	@ 0x44
 8006d1a:	687b      	ldr	r3, [r7, #4]
 8006d1c:	681b      	ldr	r3, [r3, #0]
 8006d1e:	330c      	adds	r3, #12
 8006d20:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8006d22:	61ba      	str	r2, [r7, #24]
 8006d24:	617b      	str	r3, [r7, #20]
 8006d26:	6979      	ldr	r1, [r7, #20]
 8006d28:	69ba      	ldr	r2, [r7, #24]
 8006d2a:	e841 2300 	strex	r3, r2, [r1]
 8006d2e:	613b      	str	r3, [r7, #16]
 8006d30:	693b      	ldr	r3, [r7, #16]
 8006d32:	2b00      	cmp	r3, #0
 8006d34:	d1e5      	bne.n	8006d02 <UART_EndRxTransfer+0x78>
 8006d36:	687b      	ldr	r3, [r7, #4]
 8006d38:	2220      	movs	r2, #32
 8006d3a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006d3e:	687b      	ldr	r3, [r7, #4]
 8006d40:	2200      	movs	r2, #0
 8006d42:	631a      	str	r2, [r3, #48]	@ 0x30
 8006d44:	bf00      	nop
 8006d46:	3754      	adds	r7, #84	@ 0x54
 8006d48:	46bd      	mov	sp, r7
 8006d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d4e:	4770      	bx	lr

08006d50 <UART_DMAAbortOnError>:
 8006d50:	b580      	push	{r7, lr}
 8006d52:	b084      	sub	sp, #16
 8006d54:	af00      	add	r7, sp, #0
 8006d56:	6078      	str	r0, [r7, #4]
 8006d58:	687b      	ldr	r3, [r7, #4]
 8006d5a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006d5c:	60fb      	str	r3, [r7, #12]
 8006d5e:	68fb      	ldr	r3, [r7, #12]
 8006d60:	2200      	movs	r2, #0
 8006d62:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8006d64:	68fb      	ldr	r3, [r7, #12]
 8006d66:	2200      	movs	r2, #0
 8006d68:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006d6a:	68f8      	ldr	r0, [r7, #12]
 8006d6c:	f7ff ff1e 	bl	8006bac <HAL_UART_ErrorCallback>
 8006d70:	bf00      	nop
 8006d72:	3710      	adds	r7, #16
 8006d74:	46bd      	mov	sp, r7
 8006d76:	bd80      	pop	{r7, pc}

08006d78 <UART_Transmit_IT>:
 8006d78:	b480      	push	{r7}
 8006d7a:	b085      	sub	sp, #20
 8006d7c:	af00      	add	r7, sp, #0
 8006d7e:	6078      	str	r0, [r7, #4]
 8006d80:	687b      	ldr	r3, [r7, #4]
 8006d82:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006d86:	b2db      	uxtb	r3, r3
 8006d88:	2b21      	cmp	r3, #33	@ 0x21
 8006d8a:	d13e      	bne.n	8006e0a <UART_Transmit_IT+0x92>
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	689b      	ldr	r3, [r3, #8]
 8006d90:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006d94:	d114      	bne.n	8006dc0 <UART_Transmit_IT+0x48>
 8006d96:	687b      	ldr	r3, [r7, #4]
 8006d98:	691b      	ldr	r3, [r3, #16]
 8006d9a:	2b00      	cmp	r3, #0
 8006d9c:	d110      	bne.n	8006dc0 <UART_Transmit_IT+0x48>
 8006d9e:	687b      	ldr	r3, [r7, #4]
 8006da0:	6a1b      	ldr	r3, [r3, #32]
 8006da2:	60fb      	str	r3, [r7, #12]
 8006da4:	68fb      	ldr	r3, [r7, #12]
 8006da6:	881b      	ldrh	r3, [r3, #0]
 8006da8:	461a      	mov	r2, r3
 8006daa:	687b      	ldr	r3, [r7, #4]
 8006dac:	681b      	ldr	r3, [r3, #0]
 8006dae:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006db2:	605a      	str	r2, [r3, #4]
 8006db4:	687b      	ldr	r3, [r7, #4]
 8006db6:	6a1b      	ldr	r3, [r3, #32]
 8006db8:	1c9a      	adds	r2, r3, #2
 8006dba:	687b      	ldr	r3, [r7, #4]
 8006dbc:	621a      	str	r2, [r3, #32]
 8006dbe:	e008      	b.n	8006dd2 <UART_Transmit_IT+0x5a>
 8006dc0:	687b      	ldr	r3, [r7, #4]
 8006dc2:	6a1b      	ldr	r3, [r3, #32]
 8006dc4:	1c59      	adds	r1, r3, #1
 8006dc6:	687a      	ldr	r2, [r7, #4]
 8006dc8:	6211      	str	r1, [r2, #32]
 8006dca:	781a      	ldrb	r2, [r3, #0]
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	681b      	ldr	r3, [r3, #0]
 8006dd0:	605a      	str	r2, [r3, #4]
 8006dd2:	687b      	ldr	r3, [r7, #4]
 8006dd4:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8006dd6:	b29b      	uxth	r3, r3
 8006dd8:	3b01      	subs	r3, #1
 8006dda:	b29b      	uxth	r3, r3
 8006ddc:	687a      	ldr	r2, [r7, #4]
 8006dde:	4619      	mov	r1, r3
 8006de0:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8006de2:	2b00      	cmp	r3, #0
 8006de4:	d10f      	bne.n	8006e06 <UART_Transmit_IT+0x8e>
 8006de6:	687b      	ldr	r3, [r7, #4]
 8006de8:	681b      	ldr	r3, [r3, #0]
 8006dea:	68da      	ldr	r2, [r3, #12]
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	681b      	ldr	r3, [r3, #0]
 8006df0:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8006df4:	60da      	str	r2, [r3, #12]
 8006df6:	687b      	ldr	r3, [r7, #4]
 8006df8:	681b      	ldr	r3, [r3, #0]
 8006dfa:	68da      	ldr	r2, [r3, #12]
 8006dfc:	687b      	ldr	r3, [r7, #4]
 8006dfe:	681b      	ldr	r3, [r3, #0]
 8006e00:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006e04:	60da      	str	r2, [r3, #12]
 8006e06:	2300      	movs	r3, #0
 8006e08:	e000      	b.n	8006e0c <UART_Transmit_IT+0x94>
 8006e0a:	2302      	movs	r3, #2
 8006e0c:	4618      	mov	r0, r3
 8006e0e:	3714      	adds	r7, #20
 8006e10:	46bd      	mov	sp, r7
 8006e12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e16:	4770      	bx	lr

08006e18 <UART_EndTransmit_IT>:
 8006e18:	b580      	push	{r7, lr}
 8006e1a:	b082      	sub	sp, #8
 8006e1c:	af00      	add	r7, sp, #0
 8006e1e:	6078      	str	r0, [r7, #4]
 8006e20:	687b      	ldr	r3, [r7, #4]
 8006e22:	681b      	ldr	r3, [r3, #0]
 8006e24:	68da      	ldr	r2, [r3, #12]
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	681b      	ldr	r3, [r3, #0]
 8006e2a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006e2e:	60da      	str	r2, [r3, #12]
 8006e30:	687b      	ldr	r3, [r7, #4]
 8006e32:	2220      	movs	r2, #32
 8006e34:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006e38:	6878      	ldr	r0, [r7, #4]
 8006e3a:	f7ff fea3 	bl	8006b84 <HAL_UART_TxCpltCallback>
 8006e3e:	2300      	movs	r3, #0
 8006e40:	4618      	mov	r0, r3
 8006e42:	3708      	adds	r7, #8
 8006e44:	46bd      	mov	sp, r7
 8006e46:	bd80      	pop	{r7, pc}

08006e48 <UART_Receive_IT>:
 8006e48:	b580      	push	{r7, lr}
 8006e4a:	b08c      	sub	sp, #48	@ 0x30
 8006e4c:	af00      	add	r7, sp, #0
 8006e4e:	6078      	str	r0, [r7, #4]
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006e56:	b2db      	uxtb	r3, r3
 8006e58:	2b22      	cmp	r3, #34	@ 0x22
 8006e5a:	f040 80ae 	bne.w	8006fba <UART_Receive_IT+0x172>
 8006e5e:	687b      	ldr	r3, [r7, #4]
 8006e60:	689b      	ldr	r3, [r3, #8]
 8006e62:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006e66:	d117      	bne.n	8006e98 <UART_Receive_IT+0x50>
 8006e68:	687b      	ldr	r3, [r7, #4]
 8006e6a:	691b      	ldr	r3, [r3, #16]
 8006e6c:	2b00      	cmp	r3, #0
 8006e6e:	d113      	bne.n	8006e98 <UART_Receive_IT+0x50>
 8006e70:	2300      	movs	r3, #0
 8006e72:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006e74:	687b      	ldr	r3, [r7, #4]
 8006e76:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006e78:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006e7a:	687b      	ldr	r3, [r7, #4]
 8006e7c:	681b      	ldr	r3, [r3, #0]
 8006e7e:	685b      	ldr	r3, [r3, #4]
 8006e80:	b29b      	uxth	r3, r3
 8006e82:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006e86:	b29a      	uxth	r2, r3
 8006e88:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006e8a:	801a      	strh	r2, [r3, #0]
 8006e8c:	687b      	ldr	r3, [r7, #4]
 8006e8e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006e90:	1c9a      	adds	r2, r3, #2
 8006e92:	687b      	ldr	r3, [r7, #4]
 8006e94:	629a      	str	r2, [r3, #40]	@ 0x28
 8006e96:	e026      	b.n	8006ee6 <UART_Receive_IT+0x9e>
 8006e98:	687b      	ldr	r3, [r7, #4]
 8006e9a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006e9c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006e9e:	2300      	movs	r3, #0
 8006ea0:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006ea2:	687b      	ldr	r3, [r7, #4]
 8006ea4:	689b      	ldr	r3, [r3, #8]
 8006ea6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006eaa:	d007      	beq.n	8006ebc <UART_Receive_IT+0x74>
 8006eac:	687b      	ldr	r3, [r7, #4]
 8006eae:	689b      	ldr	r3, [r3, #8]
 8006eb0:	2b00      	cmp	r3, #0
 8006eb2:	d10a      	bne.n	8006eca <UART_Receive_IT+0x82>
 8006eb4:	687b      	ldr	r3, [r7, #4]
 8006eb6:	691b      	ldr	r3, [r3, #16]
 8006eb8:	2b00      	cmp	r3, #0
 8006eba:	d106      	bne.n	8006eca <UART_Receive_IT+0x82>
 8006ebc:	687b      	ldr	r3, [r7, #4]
 8006ebe:	681b      	ldr	r3, [r3, #0]
 8006ec0:	685b      	ldr	r3, [r3, #4]
 8006ec2:	b2da      	uxtb	r2, r3
 8006ec4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006ec6:	701a      	strb	r2, [r3, #0]
 8006ec8:	e008      	b.n	8006edc <UART_Receive_IT+0x94>
 8006eca:	687b      	ldr	r3, [r7, #4]
 8006ecc:	681b      	ldr	r3, [r3, #0]
 8006ece:	685b      	ldr	r3, [r3, #4]
 8006ed0:	b2db      	uxtb	r3, r3
 8006ed2:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006ed6:	b2da      	uxtb	r2, r3
 8006ed8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006eda:	701a      	strb	r2, [r3, #0]
 8006edc:	687b      	ldr	r3, [r7, #4]
 8006ede:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006ee0:	1c5a      	adds	r2, r3, #1
 8006ee2:	687b      	ldr	r3, [r7, #4]
 8006ee4:	629a      	str	r2, [r3, #40]	@ 0x28
 8006ee6:	687b      	ldr	r3, [r7, #4]
 8006ee8:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8006eea:	b29b      	uxth	r3, r3
 8006eec:	3b01      	subs	r3, #1
 8006eee:	b29b      	uxth	r3, r3
 8006ef0:	687a      	ldr	r2, [r7, #4]
 8006ef2:	4619      	mov	r1, r3
 8006ef4:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8006ef6:	2b00      	cmp	r3, #0
 8006ef8:	d15d      	bne.n	8006fb6 <UART_Receive_IT+0x16e>
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	681b      	ldr	r3, [r3, #0]
 8006efe:	68da      	ldr	r2, [r3, #12]
 8006f00:	687b      	ldr	r3, [r7, #4]
 8006f02:	681b      	ldr	r3, [r3, #0]
 8006f04:	f022 0220 	bic.w	r2, r2, #32
 8006f08:	60da      	str	r2, [r3, #12]
 8006f0a:	687b      	ldr	r3, [r7, #4]
 8006f0c:	681b      	ldr	r3, [r3, #0]
 8006f0e:	68da      	ldr	r2, [r3, #12]
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	681b      	ldr	r3, [r3, #0]
 8006f14:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8006f18:	60da      	str	r2, [r3, #12]
 8006f1a:	687b      	ldr	r3, [r7, #4]
 8006f1c:	681b      	ldr	r3, [r3, #0]
 8006f1e:	695a      	ldr	r2, [r3, #20]
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	681b      	ldr	r3, [r3, #0]
 8006f24:	f022 0201 	bic.w	r2, r2, #1
 8006f28:	615a      	str	r2, [r3, #20]
 8006f2a:	687b      	ldr	r3, [r7, #4]
 8006f2c:	2220      	movs	r2, #32
 8006f2e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006f32:	687b      	ldr	r3, [r7, #4]
 8006f34:	2200      	movs	r2, #0
 8006f36:	635a      	str	r2, [r3, #52]	@ 0x34
 8006f38:	687b      	ldr	r3, [r7, #4]
 8006f3a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006f3c:	2b01      	cmp	r3, #1
 8006f3e:	d135      	bne.n	8006fac <UART_Receive_IT+0x164>
 8006f40:	687b      	ldr	r3, [r7, #4]
 8006f42:	2200      	movs	r2, #0
 8006f44:	631a      	str	r2, [r3, #48]	@ 0x30
 8006f46:	687b      	ldr	r3, [r7, #4]
 8006f48:	681b      	ldr	r3, [r3, #0]
 8006f4a:	330c      	adds	r3, #12
 8006f4c:	617b      	str	r3, [r7, #20]
 8006f4e:	697b      	ldr	r3, [r7, #20]
 8006f50:	e853 3f00 	ldrex	r3, [r3]
 8006f54:	613b      	str	r3, [r7, #16]
 8006f56:	693b      	ldr	r3, [r7, #16]
 8006f58:	f023 0310 	bic.w	r3, r3, #16
 8006f5c:	627b      	str	r3, [r7, #36]	@ 0x24
 8006f5e:	687b      	ldr	r3, [r7, #4]
 8006f60:	681b      	ldr	r3, [r3, #0]
 8006f62:	330c      	adds	r3, #12
 8006f64:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006f66:	623a      	str	r2, [r7, #32]
 8006f68:	61fb      	str	r3, [r7, #28]
 8006f6a:	69f9      	ldr	r1, [r7, #28]
 8006f6c:	6a3a      	ldr	r2, [r7, #32]
 8006f6e:	e841 2300 	strex	r3, r2, [r1]
 8006f72:	61bb      	str	r3, [r7, #24]
 8006f74:	69bb      	ldr	r3, [r7, #24]
 8006f76:	2b00      	cmp	r3, #0
 8006f78:	d1e5      	bne.n	8006f46 <UART_Receive_IT+0xfe>
 8006f7a:	687b      	ldr	r3, [r7, #4]
 8006f7c:	681b      	ldr	r3, [r3, #0]
 8006f7e:	681b      	ldr	r3, [r3, #0]
 8006f80:	f003 0310 	and.w	r3, r3, #16
 8006f84:	2b10      	cmp	r3, #16
 8006f86:	d10a      	bne.n	8006f9e <UART_Receive_IT+0x156>
 8006f88:	2300      	movs	r3, #0
 8006f8a:	60fb      	str	r3, [r7, #12]
 8006f8c:	687b      	ldr	r3, [r7, #4]
 8006f8e:	681b      	ldr	r3, [r3, #0]
 8006f90:	681b      	ldr	r3, [r3, #0]
 8006f92:	60fb      	str	r3, [r7, #12]
 8006f94:	687b      	ldr	r3, [r7, #4]
 8006f96:	681b      	ldr	r3, [r3, #0]
 8006f98:	685b      	ldr	r3, [r3, #4]
 8006f9a:	60fb      	str	r3, [r7, #12]
 8006f9c:	68fb      	ldr	r3, [r7, #12]
 8006f9e:	687b      	ldr	r3, [r7, #4]
 8006fa0:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006fa2:	4619      	mov	r1, r3
 8006fa4:	6878      	ldr	r0, [r7, #4]
 8006fa6:	f7ff fe0b 	bl	8006bc0 <HAL_UARTEx_RxEventCallback>
 8006faa:	e002      	b.n	8006fb2 <UART_Receive_IT+0x16a>
 8006fac:	6878      	ldr	r0, [r7, #4]
 8006fae:	f7ff fdf3 	bl	8006b98 <HAL_UART_RxCpltCallback>
 8006fb2:	2300      	movs	r3, #0
 8006fb4:	e002      	b.n	8006fbc <UART_Receive_IT+0x174>
 8006fb6:	2300      	movs	r3, #0
 8006fb8:	e000      	b.n	8006fbc <UART_Receive_IT+0x174>
 8006fba:	2302      	movs	r3, #2
 8006fbc:	4618      	mov	r0, r3
 8006fbe:	3730      	adds	r7, #48	@ 0x30
 8006fc0:	46bd      	mov	sp, r7
 8006fc2:	bd80      	pop	{r7, pc}

08006fc4 <UART_SetConfig>:
 8006fc4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006fc8:	b0c0      	sub	sp, #256	@ 0x100
 8006fca:	af00      	add	r7, sp, #0
 8006fcc:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8006fd0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006fd4:	681b      	ldr	r3, [r3, #0]
 8006fd6:	691b      	ldr	r3, [r3, #16]
 8006fd8:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8006fdc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006fe0:	68d9      	ldr	r1, [r3, #12]
 8006fe2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006fe6:	681a      	ldr	r2, [r3, #0]
 8006fe8:	ea40 0301 	orr.w	r3, r0, r1
 8006fec:	6113      	str	r3, [r2, #16]
 8006fee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006ff2:	689a      	ldr	r2, [r3, #8]
 8006ff4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006ff8:	691b      	ldr	r3, [r3, #16]
 8006ffa:	431a      	orrs	r2, r3
 8006ffc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007000:	695b      	ldr	r3, [r3, #20]
 8007002:	431a      	orrs	r2, r3
 8007004:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007008:	69db      	ldr	r3, [r3, #28]
 800700a:	4313      	orrs	r3, r2
 800700c:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8007010:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007014:	681b      	ldr	r3, [r3, #0]
 8007016:	68db      	ldr	r3, [r3, #12]
 8007018:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 800701c:	f021 010c 	bic.w	r1, r1, #12
 8007020:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007024:	681a      	ldr	r2, [r3, #0]
 8007026:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 800702a:	430b      	orrs	r3, r1
 800702c:	60d3      	str	r3, [r2, #12]
 800702e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007032:	681b      	ldr	r3, [r3, #0]
 8007034:	695b      	ldr	r3, [r3, #20]
 8007036:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 800703a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800703e:	6999      	ldr	r1, [r3, #24]
 8007040:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007044:	681a      	ldr	r2, [r3, #0]
 8007046:	ea40 0301 	orr.w	r3, r0, r1
 800704a:	6153      	str	r3, [r2, #20]
 800704c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007050:	681a      	ldr	r2, [r3, #0]
 8007052:	4b8f      	ldr	r3, [pc, #572]	@ (8007290 <UART_SetConfig+0x2cc>)
 8007054:	429a      	cmp	r2, r3
 8007056:	d005      	beq.n	8007064 <UART_SetConfig+0xa0>
 8007058:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800705c:	681a      	ldr	r2, [r3, #0]
 800705e:	4b8d      	ldr	r3, [pc, #564]	@ (8007294 <UART_SetConfig+0x2d0>)
 8007060:	429a      	cmp	r2, r3
 8007062:	d104      	bne.n	800706e <UART_SetConfig+0xaa>
 8007064:	f7fe fecc 	bl	8005e00 <HAL_RCC_GetPCLK2Freq>
 8007068:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 800706c:	e003      	b.n	8007076 <UART_SetConfig+0xb2>
 800706e:	f7fe feb3 	bl	8005dd8 <HAL_RCC_GetPCLK1Freq>
 8007072:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8007076:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800707a:	69db      	ldr	r3, [r3, #28]
 800707c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007080:	f040 810c 	bne.w	800729c <UART_SetConfig+0x2d8>
 8007084:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007088:	2200      	movs	r2, #0
 800708a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800708e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8007092:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8007096:	4622      	mov	r2, r4
 8007098:	462b      	mov	r3, r5
 800709a:	1891      	adds	r1, r2, r2
 800709c:	65b9      	str	r1, [r7, #88]	@ 0x58
 800709e:	415b      	adcs	r3, r3
 80070a0:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80070a2:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80070a6:	4621      	mov	r1, r4
 80070a8:	eb12 0801 	adds.w	r8, r2, r1
 80070ac:	4629      	mov	r1, r5
 80070ae:	eb43 0901 	adc.w	r9, r3, r1
 80070b2:	f04f 0200 	mov.w	r2, #0
 80070b6:	f04f 0300 	mov.w	r3, #0
 80070ba:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80070be:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80070c2:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80070c6:	4690      	mov	r8, r2
 80070c8:	4699      	mov	r9, r3
 80070ca:	4623      	mov	r3, r4
 80070cc:	eb18 0303 	adds.w	r3, r8, r3
 80070d0:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80070d4:	462b      	mov	r3, r5
 80070d6:	eb49 0303 	adc.w	r3, r9, r3
 80070da:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80070de:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80070e2:	685b      	ldr	r3, [r3, #4]
 80070e4:	2200      	movs	r2, #0
 80070e6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80070ea:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 80070ee:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 80070f2:	460b      	mov	r3, r1
 80070f4:	18db      	adds	r3, r3, r3
 80070f6:	653b      	str	r3, [r7, #80]	@ 0x50
 80070f8:	4613      	mov	r3, r2
 80070fa:	eb42 0303 	adc.w	r3, r2, r3
 80070fe:	657b      	str	r3, [r7, #84]	@ 0x54
 8007100:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8007104:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007108:	f7f9 fed4 	bl	8000eb4 <__aeabi_uldivmod>
 800710c:	4602      	mov	r2, r0
 800710e:	460b      	mov	r3, r1
 8007110:	4b61      	ldr	r3, [pc, #388]	@ (8007298 <UART_SetConfig+0x2d4>)
 8007112:	fba3 2302 	umull	r2, r3, r3, r2
 8007116:	095b      	lsrs	r3, r3, #5
 8007118:	011c      	lsls	r4, r3, #4
 800711a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800711e:	2200      	movs	r2, #0
 8007120:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8007124:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8007128:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 800712c:	4642      	mov	r2, r8
 800712e:	464b      	mov	r3, r9
 8007130:	1891      	adds	r1, r2, r2
 8007132:	64b9      	str	r1, [r7, #72]	@ 0x48
 8007134:	415b      	adcs	r3, r3
 8007136:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007138:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 800713c:	4641      	mov	r1, r8
 800713e:	eb12 0a01 	adds.w	sl, r2, r1
 8007142:	4649      	mov	r1, r9
 8007144:	eb43 0b01 	adc.w	fp, r3, r1
 8007148:	f04f 0200 	mov.w	r2, #0
 800714c:	f04f 0300 	mov.w	r3, #0
 8007150:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8007154:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8007158:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800715c:	4692      	mov	sl, r2
 800715e:	469b      	mov	fp, r3
 8007160:	4643      	mov	r3, r8
 8007162:	eb1a 0303 	adds.w	r3, sl, r3
 8007166:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800716a:	464b      	mov	r3, r9
 800716c:	eb4b 0303 	adc.w	r3, fp, r3
 8007170:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8007174:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007178:	685b      	ldr	r3, [r3, #4]
 800717a:	2200      	movs	r2, #0
 800717c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8007180:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8007184:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8007188:	460b      	mov	r3, r1
 800718a:	18db      	adds	r3, r3, r3
 800718c:	643b      	str	r3, [r7, #64]	@ 0x40
 800718e:	4613      	mov	r3, r2
 8007190:	eb42 0303 	adc.w	r3, r2, r3
 8007194:	647b      	str	r3, [r7, #68]	@ 0x44
 8007196:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800719a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800719e:	f7f9 fe89 	bl	8000eb4 <__aeabi_uldivmod>
 80071a2:	4602      	mov	r2, r0
 80071a4:	460b      	mov	r3, r1
 80071a6:	4611      	mov	r1, r2
 80071a8:	4b3b      	ldr	r3, [pc, #236]	@ (8007298 <UART_SetConfig+0x2d4>)
 80071aa:	fba3 2301 	umull	r2, r3, r3, r1
 80071ae:	095b      	lsrs	r3, r3, #5
 80071b0:	2264      	movs	r2, #100	@ 0x64
 80071b2:	fb02 f303 	mul.w	r3, r2, r3
 80071b6:	1acb      	subs	r3, r1, r3
 80071b8:	00db      	lsls	r3, r3, #3
 80071ba:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 80071be:	4b36      	ldr	r3, [pc, #216]	@ (8007298 <UART_SetConfig+0x2d4>)
 80071c0:	fba3 2302 	umull	r2, r3, r3, r2
 80071c4:	095b      	lsrs	r3, r3, #5
 80071c6:	005b      	lsls	r3, r3, #1
 80071c8:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 80071cc:	441c      	add	r4, r3
 80071ce:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80071d2:	2200      	movs	r2, #0
 80071d4:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80071d8:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 80071dc:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 80071e0:	4642      	mov	r2, r8
 80071e2:	464b      	mov	r3, r9
 80071e4:	1891      	adds	r1, r2, r2
 80071e6:	63b9      	str	r1, [r7, #56]	@ 0x38
 80071e8:	415b      	adcs	r3, r3
 80071ea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80071ec:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 80071f0:	4641      	mov	r1, r8
 80071f2:	1851      	adds	r1, r2, r1
 80071f4:	6339      	str	r1, [r7, #48]	@ 0x30
 80071f6:	4649      	mov	r1, r9
 80071f8:	414b      	adcs	r3, r1
 80071fa:	637b      	str	r3, [r7, #52]	@ 0x34
 80071fc:	f04f 0200 	mov.w	r2, #0
 8007200:	f04f 0300 	mov.w	r3, #0
 8007204:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8007208:	4659      	mov	r1, fp
 800720a:	00cb      	lsls	r3, r1, #3
 800720c:	4651      	mov	r1, sl
 800720e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007212:	4651      	mov	r1, sl
 8007214:	00ca      	lsls	r2, r1, #3
 8007216:	4610      	mov	r0, r2
 8007218:	4619      	mov	r1, r3
 800721a:	4603      	mov	r3, r0
 800721c:	4642      	mov	r2, r8
 800721e:	189b      	adds	r3, r3, r2
 8007220:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8007224:	464b      	mov	r3, r9
 8007226:	460a      	mov	r2, r1
 8007228:	eb42 0303 	adc.w	r3, r2, r3
 800722c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8007230:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007234:	685b      	ldr	r3, [r3, #4]
 8007236:	2200      	movs	r2, #0
 8007238:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800723c:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8007240:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8007244:	460b      	mov	r3, r1
 8007246:	18db      	adds	r3, r3, r3
 8007248:	62bb      	str	r3, [r7, #40]	@ 0x28
 800724a:	4613      	mov	r3, r2
 800724c:	eb42 0303 	adc.w	r3, r2, r3
 8007250:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007252:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8007256:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 800725a:	f7f9 fe2b 	bl	8000eb4 <__aeabi_uldivmod>
 800725e:	4602      	mov	r2, r0
 8007260:	460b      	mov	r3, r1
 8007262:	4b0d      	ldr	r3, [pc, #52]	@ (8007298 <UART_SetConfig+0x2d4>)
 8007264:	fba3 1302 	umull	r1, r3, r3, r2
 8007268:	095b      	lsrs	r3, r3, #5
 800726a:	2164      	movs	r1, #100	@ 0x64
 800726c:	fb01 f303 	mul.w	r3, r1, r3
 8007270:	1ad3      	subs	r3, r2, r3
 8007272:	00db      	lsls	r3, r3, #3
 8007274:	3332      	adds	r3, #50	@ 0x32
 8007276:	4a08      	ldr	r2, [pc, #32]	@ (8007298 <UART_SetConfig+0x2d4>)
 8007278:	fba2 2303 	umull	r2, r3, r2, r3
 800727c:	095b      	lsrs	r3, r3, #5
 800727e:	f003 0207 	and.w	r2, r3, #7
 8007282:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007286:	681b      	ldr	r3, [r3, #0]
 8007288:	4422      	add	r2, r4
 800728a:	609a      	str	r2, [r3, #8]
 800728c:	e106      	b.n	800749c <UART_SetConfig+0x4d8>
 800728e:	bf00      	nop
 8007290:	40011000 	.word	0x40011000
 8007294:	40011400 	.word	0x40011400
 8007298:	51eb851f 	.word	0x51eb851f
 800729c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80072a0:	2200      	movs	r2, #0
 80072a2:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80072a6:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 80072aa:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 80072ae:	4642      	mov	r2, r8
 80072b0:	464b      	mov	r3, r9
 80072b2:	1891      	adds	r1, r2, r2
 80072b4:	6239      	str	r1, [r7, #32]
 80072b6:	415b      	adcs	r3, r3
 80072b8:	627b      	str	r3, [r7, #36]	@ 0x24
 80072ba:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80072be:	4641      	mov	r1, r8
 80072c0:	1854      	adds	r4, r2, r1
 80072c2:	4649      	mov	r1, r9
 80072c4:	eb43 0501 	adc.w	r5, r3, r1
 80072c8:	f04f 0200 	mov.w	r2, #0
 80072cc:	f04f 0300 	mov.w	r3, #0
 80072d0:	00eb      	lsls	r3, r5, #3
 80072d2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80072d6:	00e2      	lsls	r2, r4, #3
 80072d8:	4614      	mov	r4, r2
 80072da:	461d      	mov	r5, r3
 80072dc:	4643      	mov	r3, r8
 80072de:	18e3      	adds	r3, r4, r3
 80072e0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80072e4:	464b      	mov	r3, r9
 80072e6:	eb45 0303 	adc.w	r3, r5, r3
 80072ea:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80072ee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80072f2:	685b      	ldr	r3, [r3, #4]
 80072f4:	2200      	movs	r2, #0
 80072f6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80072fa:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80072fe:	f04f 0200 	mov.w	r2, #0
 8007302:	f04f 0300 	mov.w	r3, #0
 8007306:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800730a:	4629      	mov	r1, r5
 800730c:	008b      	lsls	r3, r1, #2
 800730e:	4621      	mov	r1, r4
 8007310:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007314:	4621      	mov	r1, r4
 8007316:	008a      	lsls	r2, r1, #2
 8007318:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 800731c:	f7f9 fdca 	bl	8000eb4 <__aeabi_uldivmod>
 8007320:	4602      	mov	r2, r0
 8007322:	460b      	mov	r3, r1
 8007324:	4b60      	ldr	r3, [pc, #384]	@ (80074a8 <UART_SetConfig+0x4e4>)
 8007326:	fba3 2302 	umull	r2, r3, r3, r2
 800732a:	095b      	lsrs	r3, r3, #5
 800732c:	011c      	lsls	r4, r3, #4
 800732e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007332:	2200      	movs	r2, #0
 8007334:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8007338:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 800733c:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8007340:	4642      	mov	r2, r8
 8007342:	464b      	mov	r3, r9
 8007344:	1891      	adds	r1, r2, r2
 8007346:	61b9      	str	r1, [r7, #24]
 8007348:	415b      	adcs	r3, r3
 800734a:	61fb      	str	r3, [r7, #28]
 800734c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007350:	4641      	mov	r1, r8
 8007352:	1851      	adds	r1, r2, r1
 8007354:	6139      	str	r1, [r7, #16]
 8007356:	4649      	mov	r1, r9
 8007358:	414b      	adcs	r3, r1
 800735a:	617b      	str	r3, [r7, #20]
 800735c:	f04f 0200 	mov.w	r2, #0
 8007360:	f04f 0300 	mov.w	r3, #0
 8007364:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8007368:	4659      	mov	r1, fp
 800736a:	00cb      	lsls	r3, r1, #3
 800736c:	4651      	mov	r1, sl
 800736e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007372:	4651      	mov	r1, sl
 8007374:	00ca      	lsls	r2, r1, #3
 8007376:	4610      	mov	r0, r2
 8007378:	4619      	mov	r1, r3
 800737a:	4603      	mov	r3, r0
 800737c:	4642      	mov	r2, r8
 800737e:	189b      	adds	r3, r3, r2
 8007380:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8007384:	464b      	mov	r3, r9
 8007386:	460a      	mov	r2, r1
 8007388:	eb42 0303 	adc.w	r3, r2, r3
 800738c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8007390:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007394:	685b      	ldr	r3, [r3, #4]
 8007396:	2200      	movs	r2, #0
 8007398:	67bb      	str	r3, [r7, #120]	@ 0x78
 800739a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 800739c:	f04f 0200 	mov.w	r2, #0
 80073a0:	f04f 0300 	mov.w	r3, #0
 80073a4:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80073a8:	4649      	mov	r1, r9
 80073aa:	008b      	lsls	r3, r1, #2
 80073ac:	4641      	mov	r1, r8
 80073ae:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80073b2:	4641      	mov	r1, r8
 80073b4:	008a      	lsls	r2, r1, #2
 80073b6:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80073ba:	f7f9 fd7b 	bl	8000eb4 <__aeabi_uldivmod>
 80073be:	4602      	mov	r2, r0
 80073c0:	460b      	mov	r3, r1
 80073c2:	4611      	mov	r1, r2
 80073c4:	4b38      	ldr	r3, [pc, #224]	@ (80074a8 <UART_SetConfig+0x4e4>)
 80073c6:	fba3 2301 	umull	r2, r3, r3, r1
 80073ca:	095b      	lsrs	r3, r3, #5
 80073cc:	2264      	movs	r2, #100	@ 0x64
 80073ce:	fb02 f303 	mul.w	r3, r2, r3
 80073d2:	1acb      	subs	r3, r1, r3
 80073d4:	011b      	lsls	r3, r3, #4
 80073d6:	3332      	adds	r3, #50	@ 0x32
 80073d8:	4a33      	ldr	r2, [pc, #204]	@ (80074a8 <UART_SetConfig+0x4e4>)
 80073da:	fba2 2303 	umull	r2, r3, r2, r3
 80073de:	095b      	lsrs	r3, r3, #5
 80073e0:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80073e4:	441c      	add	r4, r3
 80073e6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80073ea:	2200      	movs	r2, #0
 80073ec:	673b      	str	r3, [r7, #112]	@ 0x70
 80073ee:	677a      	str	r2, [r7, #116]	@ 0x74
 80073f0:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 80073f4:	4642      	mov	r2, r8
 80073f6:	464b      	mov	r3, r9
 80073f8:	1891      	adds	r1, r2, r2
 80073fa:	60b9      	str	r1, [r7, #8]
 80073fc:	415b      	adcs	r3, r3
 80073fe:	60fb      	str	r3, [r7, #12]
 8007400:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007404:	4641      	mov	r1, r8
 8007406:	1851      	adds	r1, r2, r1
 8007408:	6039      	str	r1, [r7, #0]
 800740a:	4649      	mov	r1, r9
 800740c:	414b      	adcs	r3, r1
 800740e:	607b      	str	r3, [r7, #4]
 8007410:	f04f 0200 	mov.w	r2, #0
 8007414:	f04f 0300 	mov.w	r3, #0
 8007418:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800741c:	4659      	mov	r1, fp
 800741e:	00cb      	lsls	r3, r1, #3
 8007420:	4651      	mov	r1, sl
 8007422:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007426:	4651      	mov	r1, sl
 8007428:	00ca      	lsls	r2, r1, #3
 800742a:	4610      	mov	r0, r2
 800742c:	4619      	mov	r1, r3
 800742e:	4603      	mov	r3, r0
 8007430:	4642      	mov	r2, r8
 8007432:	189b      	adds	r3, r3, r2
 8007434:	66bb      	str	r3, [r7, #104]	@ 0x68
 8007436:	464b      	mov	r3, r9
 8007438:	460a      	mov	r2, r1
 800743a:	eb42 0303 	adc.w	r3, r2, r3
 800743e:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8007440:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007444:	685b      	ldr	r3, [r3, #4]
 8007446:	2200      	movs	r2, #0
 8007448:	663b      	str	r3, [r7, #96]	@ 0x60
 800744a:	667a      	str	r2, [r7, #100]	@ 0x64
 800744c:	f04f 0200 	mov.w	r2, #0
 8007450:	f04f 0300 	mov.w	r3, #0
 8007454:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8007458:	4649      	mov	r1, r9
 800745a:	008b      	lsls	r3, r1, #2
 800745c:	4641      	mov	r1, r8
 800745e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007462:	4641      	mov	r1, r8
 8007464:	008a      	lsls	r2, r1, #2
 8007466:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800746a:	f7f9 fd23 	bl	8000eb4 <__aeabi_uldivmod>
 800746e:	4602      	mov	r2, r0
 8007470:	460b      	mov	r3, r1
 8007472:	4b0d      	ldr	r3, [pc, #52]	@ (80074a8 <UART_SetConfig+0x4e4>)
 8007474:	fba3 1302 	umull	r1, r3, r3, r2
 8007478:	095b      	lsrs	r3, r3, #5
 800747a:	2164      	movs	r1, #100	@ 0x64
 800747c:	fb01 f303 	mul.w	r3, r1, r3
 8007480:	1ad3      	subs	r3, r2, r3
 8007482:	011b      	lsls	r3, r3, #4
 8007484:	3332      	adds	r3, #50	@ 0x32
 8007486:	4a08      	ldr	r2, [pc, #32]	@ (80074a8 <UART_SetConfig+0x4e4>)
 8007488:	fba2 2303 	umull	r2, r3, r2, r3
 800748c:	095b      	lsrs	r3, r3, #5
 800748e:	f003 020f 	and.w	r2, r3, #15
 8007492:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007496:	681b      	ldr	r3, [r3, #0]
 8007498:	4422      	add	r2, r4
 800749a:	609a      	str	r2, [r3, #8]
 800749c:	bf00      	nop
 800749e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80074a2:	46bd      	mov	sp, r7
 80074a4:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80074a8:	51eb851f 	.word	0x51eb851f

080074ac <malloc>:
 80074ac:	4b02      	ldr	r3, [pc, #8]	@ (80074b8 <malloc+0xc>)
 80074ae:	4601      	mov	r1, r0
 80074b0:	6818      	ldr	r0, [r3, #0]
 80074b2:	f000 b825 	b.w	8007500 <_malloc_r>
 80074b6:	bf00      	nop
 80074b8:	20000588 	.word	0x20000588

080074bc <sbrk_aligned>:
 80074bc:	b570      	push	{r4, r5, r6, lr}
 80074be:	4e0f      	ldr	r6, [pc, #60]	@ (80074fc <sbrk_aligned+0x40>)
 80074c0:	460c      	mov	r4, r1
 80074c2:	6831      	ldr	r1, [r6, #0]
 80074c4:	4605      	mov	r5, r0
 80074c6:	b911      	cbnz	r1, 80074ce <sbrk_aligned+0x12>
 80074c8:	f001 f966 	bl	8008798 <_sbrk_r>
 80074cc:	6030      	str	r0, [r6, #0]
 80074ce:	4621      	mov	r1, r4
 80074d0:	4628      	mov	r0, r5
 80074d2:	f001 f961 	bl	8008798 <_sbrk_r>
 80074d6:	1c43      	adds	r3, r0, #1
 80074d8:	d103      	bne.n	80074e2 <sbrk_aligned+0x26>
 80074da:	f04f 34ff 	mov.w	r4, #4294967295
 80074de:	4620      	mov	r0, r4
 80074e0:	bd70      	pop	{r4, r5, r6, pc}
 80074e2:	1cc4      	adds	r4, r0, #3
 80074e4:	f024 0403 	bic.w	r4, r4, #3
 80074e8:	42a0      	cmp	r0, r4
 80074ea:	d0f8      	beq.n	80074de <sbrk_aligned+0x22>
 80074ec:	1a21      	subs	r1, r4, r0
 80074ee:	4628      	mov	r0, r5
 80074f0:	f001 f952 	bl	8008798 <_sbrk_r>
 80074f4:	3001      	adds	r0, #1
 80074f6:	d1f2      	bne.n	80074de <sbrk_aligned+0x22>
 80074f8:	e7ef      	b.n	80074da <sbrk_aligned+0x1e>
 80074fa:	bf00      	nop
 80074fc:	200009cc 	.word	0x200009cc

08007500 <_malloc_r>:
 8007500:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007504:	1ccd      	adds	r5, r1, #3
 8007506:	f025 0503 	bic.w	r5, r5, #3
 800750a:	3508      	adds	r5, #8
 800750c:	2d0c      	cmp	r5, #12
 800750e:	bf38      	it	cc
 8007510:	250c      	movcc	r5, #12
 8007512:	2d00      	cmp	r5, #0
 8007514:	4606      	mov	r6, r0
 8007516:	db01      	blt.n	800751c <_malloc_r+0x1c>
 8007518:	42a9      	cmp	r1, r5
 800751a:	d904      	bls.n	8007526 <_malloc_r+0x26>
 800751c:	230c      	movs	r3, #12
 800751e:	6033      	str	r3, [r6, #0]
 8007520:	2000      	movs	r0, #0
 8007522:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007526:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80075fc <_malloc_r+0xfc>
 800752a:	f000 f869 	bl	8007600 <__malloc_lock>
 800752e:	f8d8 3000 	ldr.w	r3, [r8]
 8007532:	461c      	mov	r4, r3
 8007534:	bb44      	cbnz	r4, 8007588 <_malloc_r+0x88>
 8007536:	4629      	mov	r1, r5
 8007538:	4630      	mov	r0, r6
 800753a:	f7ff ffbf 	bl	80074bc <sbrk_aligned>
 800753e:	1c43      	adds	r3, r0, #1
 8007540:	4604      	mov	r4, r0
 8007542:	d158      	bne.n	80075f6 <_malloc_r+0xf6>
 8007544:	f8d8 4000 	ldr.w	r4, [r8]
 8007548:	4627      	mov	r7, r4
 800754a:	2f00      	cmp	r7, #0
 800754c:	d143      	bne.n	80075d6 <_malloc_r+0xd6>
 800754e:	2c00      	cmp	r4, #0
 8007550:	d04b      	beq.n	80075ea <_malloc_r+0xea>
 8007552:	6823      	ldr	r3, [r4, #0]
 8007554:	4639      	mov	r1, r7
 8007556:	4630      	mov	r0, r6
 8007558:	eb04 0903 	add.w	r9, r4, r3
 800755c:	f001 f91c 	bl	8008798 <_sbrk_r>
 8007560:	4581      	cmp	r9, r0
 8007562:	d142      	bne.n	80075ea <_malloc_r+0xea>
 8007564:	6821      	ldr	r1, [r4, #0]
 8007566:	1a6d      	subs	r5, r5, r1
 8007568:	4629      	mov	r1, r5
 800756a:	4630      	mov	r0, r6
 800756c:	f7ff ffa6 	bl	80074bc <sbrk_aligned>
 8007570:	3001      	adds	r0, #1
 8007572:	d03a      	beq.n	80075ea <_malloc_r+0xea>
 8007574:	6823      	ldr	r3, [r4, #0]
 8007576:	442b      	add	r3, r5
 8007578:	6023      	str	r3, [r4, #0]
 800757a:	f8d8 3000 	ldr.w	r3, [r8]
 800757e:	685a      	ldr	r2, [r3, #4]
 8007580:	bb62      	cbnz	r2, 80075dc <_malloc_r+0xdc>
 8007582:	f8c8 7000 	str.w	r7, [r8]
 8007586:	e00f      	b.n	80075a8 <_malloc_r+0xa8>
 8007588:	6822      	ldr	r2, [r4, #0]
 800758a:	1b52      	subs	r2, r2, r5
 800758c:	d420      	bmi.n	80075d0 <_malloc_r+0xd0>
 800758e:	2a0b      	cmp	r2, #11
 8007590:	d917      	bls.n	80075c2 <_malloc_r+0xc2>
 8007592:	1961      	adds	r1, r4, r5
 8007594:	42a3      	cmp	r3, r4
 8007596:	6025      	str	r5, [r4, #0]
 8007598:	bf18      	it	ne
 800759a:	6059      	strne	r1, [r3, #4]
 800759c:	6863      	ldr	r3, [r4, #4]
 800759e:	bf08      	it	eq
 80075a0:	f8c8 1000 	streq.w	r1, [r8]
 80075a4:	5162      	str	r2, [r4, r5]
 80075a6:	604b      	str	r3, [r1, #4]
 80075a8:	4630      	mov	r0, r6
 80075aa:	f000 f82f 	bl	800760c <__malloc_unlock>
 80075ae:	f104 000b 	add.w	r0, r4, #11
 80075b2:	1d23      	adds	r3, r4, #4
 80075b4:	f020 0007 	bic.w	r0, r0, #7
 80075b8:	1ac2      	subs	r2, r0, r3
 80075ba:	bf1c      	itt	ne
 80075bc:	1a1b      	subne	r3, r3, r0
 80075be:	50a3      	strne	r3, [r4, r2]
 80075c0:	e7af      	b.n	8007522 <_malloc_r+0x22>
 80075c2:	6862      	ldr	r2, [r4, #4]
 80075c4:	42a3      	cmp	r3, r4
 80075c6:	bf0c      	ite	eq
 80075c8:	f8c8 2000 	streq.w	r2, [r8]
 80075cc:	605a      	strne	r2, [r3, #4]
 80075ce:	e7eb      	b.n	80075a8 <_malloc_r+0xa8>
 80075d0:	4623      	mov	r3, r4
 80075d2:	6864      	ldr	r4, [r4, #4]
 80075d4:	e7ae      	b.n	8007534 <_malloc_r+0x34>
 80075d6:	463c      	mov	r4, r7
 80075d8:	687f      	ldr	r7, [r7, #4]
 80075da:	e7b6      	b.n	800754a <_malloc_r+0x4a>
 80075dc:	461a      	mov	r2, r3
 80075de:	685b      	ldr	r3, [r3, #4]
 80075e0:	42a3      	cmp	r3, r4
 80075e2:	d1fb      	bne.n	80075dc <_malloc_r+0xdc>
 80075e4:	2300      	movs	r3, #0
 80075e6:	6053      	str	r3, [r2, #4]
 80075e8:	e7de      	b.n	80075a8 <_malloc_r+0xa8>
 80075ea:	230c      	movs	r3, #12
 80075ec:	6033      	str	r3, [r6, #0]
 80075ee:	4630      	mov	r0, r6
 80075f0:	f000 f80c 	bl	800760c <__malloc_unlock>
 80075f4:	e794      	b.n	8007520 <_malloc_r+0x20>
 80075f6:	6005      	str	r5, [r0, #0]
 80075f8:	e7d6      	b.n	80075a8 <_malloc_r+0xa8>
 80075fa:	bf00      	nop
 80075fc:	200009d0 	.word	0x200009d0

08007600 <__malloc_lock>:
 8007600:	4801      	ldr	r0, [pc, #4]	@ (8007608 <__malloc_lock+0x8>)
 8007602:	f001 b91a 	b.w	800883a <__retarget_lock_acquire_recursive>
 8007606:	bf00      	nop
 8007608:	20000b14 	.word	0x20000b14

0800760c <__malloc_unlock>:
 800760c:	4801      	ldr	r0, [pc, #4]	@ (8007614 <__malloc_unlock+0x8>)
 800760e:	f001 b915 	b.w	800883c <__retarget_lock_release_recursive>
 8007612:	bf00      	nop
 8007614:	20000b14 	.word	0x20000b14

08007618 <__cvt>:
 8007618:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800761c:	ec57 6b10 	vmov	r6, r7, d0
 8007620:	2f00      	cmp	r7, #0
 8007622:	460c      	mov	r4, r1
 8007624:	4619      	mov	r1, r3
 8007626:	463b      	mov	r3, r7
 8007628:	bfbb      	ittet	lt
 800762a:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 800762e:	461f      	movlt	r7, r3
 8007630:	2300      	movge	r3, #0
 8007632:	232d      	movlt	r3, #45	@ 0x2d
 8007634:	700b      	strb	r3, [r1, #0]
 8007636:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007638:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 800763c:	4691      	mov	r9, r2
 800763e:	f023 0820 	bic.w	r8, r3, #32
 8007642:	bfbc      	itt	lt
 8007644:	4632      	movlt	r2, r6
 8007646:	4616      	movlt	r6, r2
 8007648:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800764c:	d005      	beq.n	800765a <__cvt+0x42>
 800764e:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8007652:	d100      	bne.n	8007656 <__cvt+0x3e>
 8007654:	3401      	adds	r4, #1
 8007656:	2102      	movs	r1, #2
 8007658:	e000      	b.n	800765c <__cvt+0x44>
 800765a:	2103      	movs	r1, #3
 800765c:	ab03      	add	r3, sp, #12
 800765e:	9301      	str	r3, [sp, #4]
 8007660:	ab02      	add	r3, sp, #8
 8007662:	9300      	str	r3, [sp, #0]
 8007664:	ec47 6b10 	vmov	d0, r6, r7
 8007668:	4653      	mov	r3, sl
 800766a:	4622      	mov	r2, r4
 800766c:	f001 f9a4 	bl	80089b8 <_dtoa_r>
 8007670:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8007674:	4605      	mov	r5, r0
 8007676:	d119      	bne.n	80076ac <__cvt+0x94>
 8007678:	f019 0f01 	tst.w	r9, #1
 800767c:	d00e      	beq.n	800769c <__cvt+0x84>
 800767e:	eb00 0904 	add.w	r9, r0, r4
 8007682:	2200      	movs	r2, #0
 8007684:	2300      	movs	r3, #0
 8007686:	4630      	mov	r0, r6
 8007688:	4639      	mov	r1, r7
 800768a:	f7f9 fa25 	bl	8000ad8 <__aeabi_dcmpeq>
 800768e:	b108      	cbz	r0, 8007694 <__cvt+0x7c>
 8007690:	f8cd 900c 	str.w	r9, [sp, #12]
 8007694:	2230      	movs	r2, #48	@ 0x30
 8007696:	9b03      	ldr	r3, [sp, #12]
 8007698:	454b      	cmp	r3, r9
 800769a:	d31e      	bcc.n	80076da <__cvt+0xc2>
 800769c:	9b03      	ldr	r3, [sp, #12]
 800769e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80076a0:	1b5b      	subs	r3, r3, r5
 80076a2:	4628      	mov	r0, r5
 80076a4:	6013      	str	r3, [r2, #0]
 80076a6:	b004      	add	sp, #16
 80076a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80076ac:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80076b0:	eb00 0904 	add.w	r9, r0, r4
 80076b4:	d1e5      	bne.n	8007682 <__cvt+0x6a>
 80076b6:	7803      	ldrb	r3, [r0, #0]
 80076b8:	2b30      	cmp	r3, #48	@ 0x30
 80076ba:	d10a      	bne.n	80076d2 <__cvt+0xba>
 80076bc:	2200      	movs	r2, #0
 80076be:	2300      	movs	r3, #0
 80076c0:	4630      	mov	r0, r6
 80076c2:	4639      	mov	r1, r7
 80076c4:	f7f9 fa08 	bl	8000ad8 <__aeabi_dcmpeq>
 80076c8:	b918      	cbnz	r0, 80076d2 <__cvt+0xba>
 80076ca:	f1c4 0401 	rsb	r4, r4, #1
 80076ce:	f8ca 4000 	str.w	r4, [sl]
 80076d2:	f8da 3000 	ldr.w	r3, [sl]
 80076d6:	4499      	add	r9, r3
 80076d8:	e7d3      	b.n	8007682 <__cvt+0x6a>
 80076da:	1c59      	adds	r1, r3, #1
 80076dc:	9103      	str	r1, [sp, #12]
 80076de:	701a      	strb	r2, [r3, #0]
 80076e0:	e7d9      	b.n	8007696 <__cvt+0x7e>

080076e2 <__exponent>:
 80076e2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80076e4:	2900      	cmp	r1, #0
 80076e6:	bfba      	itte	lt
 80076e8:	4249      	neglt	r1, r1
 80076ea:	232d      	movlt	r3, #45	@ 0x2d
 80076ec:	232b      	movge	r3, #43	@ 0x2b
 80076ee:	2909      	cmp	r1, #9
 80076f0:	7002      	strb	r2, [r0, #0]
 80076f2:	7043      	strb	r3, [r0, #1]
 80076f4:	dd29      	ble.n	800774a <__exponent+0x68>
 80076f6:	f10d 0307 	add.w	r3, sp, #7
 80076fa:	461d      	mov	r5, r3
 80076fc:	270a      	movs	r7, #10
 80076fe:	461a      	mov	r2, r3
 8007700:	fbb1 f6f7 	udiv	r6, r1, r7
 8007704:	fb07 1416 	mls	r4, r7, r6, r1
 8007708:	3430      	adds	r4, #48	@ 0x30
 800770a:	f802 4c01 	strb.w	r4, [r2, #-1]
 800770e:	460c      	mov	r4, r1
 8007710:	2c63      	cmp	r4, #99	@ 0x63
 8007712:	f103 33ff 	add.w	r3, r3, #4294967295
 8007716:	4631      	mov	r1, r6
 8007718:	dcf1      	bgt.n	80076fe <__exponent+0x1c>
 800771a:	3130      	adds	r1, #48	@ 0x30
 800771c:	1e94      	subs	r4, r2, #2
 800771e:	f803 1c01 	strb.w	r1, [r3, #-1]
 8007722:	1c41      	adds	r1, r0, #1
 8007724:	4623      	mov	r3, r4
 8007726:	42ab      	cmp	r3, r5
 8007728:	d30a      	bcc.n	8007740 <__exponent+0x5e>
 800772a:	f10d 0309 	add.w	r3, sp, #9
 800772e:	1a9b      	subs	r3, r3, r2
 8007730:	42ac      	cmp	r4, r5
 8007732:	bf88      	it	hi
 8007734:	2300      	movhi	r3, #0
 8007736:	3302      	adds	r3, #2
 8007738:	4403      	add	r3, r0
 800773a:	1a18      	subs	r0, r3, r0
 800773c:	b003      	add	sp, #12
 800773e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007740:	f813 6b01 	ldrb.w	r6, [r3], #1
 8007744:	f801 6f01 	strb.w	r6, [r1, #1]!
 8007748:	e7ed      	b.n	8007726 <__exponent+0x44>
 800774a:	2330      	movs	r3, #48	@ 0x30
 800774c:	3130      	adds	r1, #48	@ 0x30
 800774e:	7083      	strb	r3, [r0, #2]
 8007750:	70c1      	strb	r1, [r0, #3]
 8007752:	1d03      	adds	r3, r0, #4
 8007754:	e7f1      	b.n	800773a <__exponent+0x58>
	...

08007758 <_printf_float>:
 8007758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800775c:	b08d      	sub	sp, #52	@ 0x34
 800775e:	460c      	mov	r4, r1
 8007760:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8007764:	4616      	mov	r6, r2
 8007766:	461f      	mov	r7, r3
 8007768:	4605      	mov	r5, r0
 800776a:	f000 ffdd 	bl	8008728 <_localeconv_r>
 800776e:	6803      	ldr	r3, [r0, #0]
 8007770:	9304      	str	r3, [sp, #16]
 8007772:	4618      	mov	r0, r3
 8007774:	f7f8 fd84 	bl	8000280 <strlen>
 8007778:	2300      	movs	r3, #0
 800777a:	930a      	str	r3, [sp, #40]	@ 0x28
 800777c:	f8d8 3000 	ldr.w	r3, [r8]
 8007780:	9005      	str	r0, [sp, #20]
 8007782:	3307      	adds	r3, #7
 8007784:	f023 0307 	bic.w	r3, r3, #7
 8007788:	f103 0208 	add.w	r2, r3, #8
 800778c:	f894 a018 	ldrb.w	sl, [r4, #24]
 8007790:	f8d4 b000 	ldr.w	fp, [r4]
 8007794:	f8c8 2000 	str.w	r2, [r8]
 8007798:	e9d3 8900 	ldrd	r8, r9, [r3]
 800779c:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80077a0:	9307      	str	r3, [sp, #28]
 80077a2:	f8cd 8018 	str.w	r8, [sp, #24]
 80077a6:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80077aa:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80077ae:	4b9c      	ldr	r3, [pc, #624]	@ (8007a20 <_printf_float+0x2c8>)
 80077b0:	f04f 32ff 	mov.w	r2, #4294967295
 80077b4:	f7f9 f9c2 	bl	8000b3c <__aeabi_dcmpun>
 80077b8:	bb70      	cbnz	r0, 8007818 <_printf_float+0xc0>
 80077ba:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80077be:	4b98      	ldr	r3, [pc, #608]	@ (8007a20 <_printf_float+0x2c8>)
 80077c0:	f04f 32ff 	mov.w	r2, #4294967295
 80077c4:	f7f9 f99c 	bl	8000b00 <__aeabi_dcmple>
 80077c8:	bb30      	cbnz	r0, 8007818 <_printf_float+0xc0>
 80077ca:	2200      	movs	r2, #0
 80077cc:	2300      	movs	r3, #0
 80077ce:	4640      	mov	r0, r8
 80077d0:	4649      	mov	r1, r9
 80077d2:	f7f9 f98b 	bl	8000aec <__aeabi_dcmplt>
 80077d6:	b110      	cbz	r0, 80077de <_printf_float+0x86>
 80077d8:	232d      	movs	r3, #45	@ 0x2d
 80077da:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80077de:	4a91      	ldr	r2, [pc, #580]	@ (8007a24 <_printf_float+0x2cc>)
 80077e0:	4b91      	ldr	r3, [pc, #580]	@ (8007a28 <_printf_float+0x2d0>)
 80077e2:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 80077e6:	bf94      	ite	ls
 80077e8:	4690      	movls	r8, r2
 80077ea:	4698      	movhi	r8, r3
 80077ec:	2303      	movs	r3, #3
 80077ee:	6123      	str	r3, [r4, #16]
 80077f0:	f02b 0304 	bic.w	r3, fp, #4
 80077f4:	6023      	str	r3, [r4, #0]
 80077f6:	f04f 0900 	mov.w	r9, #0
 80077fa:	9700      	str	r7, [sp, #0]
 80077fc:	4633      	mov	r3, r6
 80077fe:	aa0b      	add	r2, sp, #44	@ 0x2c
 8007800:	4621      	mov	r1, r4
 8007802:	4628      	mov	r0, r5
 8007804:	f000 f9d2 	bl	8007bac <_printf_common>
 8007808:	3001      	adds	r0, #1
 800780a:	f040 808d 	bne.w	8007928 <_printf_float+0x1d0>
 800780e:	f04f 30ff 	mov.w	r0, #4294967295
 8007812:	b00d      	add	sp, #52	@ 0x34
 8007814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007818:	4642      	mov	r2, r8
 800781a:	464b      	mov	r3, r9
 800781c:	4640      	mov	r0, r8
 800781e:	4649      	mov	r1, r9
 8007820:	f7f9 f98c 	bl	8000b3c <__aeabi_dcmpun>
 8007824:	b140      	cbz	r0, 8007838 <_printf_float+0xe0>
 8007826:	464b      	mov	r3, r9
 8007828:	2b00      	cmp	r3, #0
 800782a:	bfbc      	itt	lt
 800782c:	232d      	movlt	r3, #45	@ 0x2d
 800782e:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8007832:	4a7e      	ldr	r2, [pc, #504]	@ (8007a2c <_printf_float+0x2d4>)
 8007834:	4b7e      	ldr	r3, [pc, #504]	@ (8007a30 <_printf_float+0x2d8>)
 8007836:	e7d4      	b.n	80077e2 <_printf_float+0x8a>
 8007838:	6863      	ldr	r3, [r4, #4]
 800783a:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 800783e:	9206      	str	r2, [sp, #24]
 8007840:	1c5a      	adds	r2, r3, #1
 8007842:	d13b      	bne.n	80078bc <_printf_float+0x164>
 8007844:	2306      	movs	r3, #6
 8007846:	6063      	str	r3, [r4, #4]
 8007848:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 800784c:	2300      	movs	r3, #0
 800784e:	6022      	str	r2, [r4, #0]
 8007850:	9303      	str	r3, [sp, #12]
 8007852:	ab0a      	add	r3, sp, #40	@ 0x28
 8007854:	e9cd a301 	strd	sl, r3, [sp, #4]
 8007858:	ab09      	add	r3, sp, #36	@ 0x24
 800785a:	9300      	str	r3, [sp, #0]
 800785c:	6861      	ldr	r1, [r4, #4]
 800785e:	ec49 8b10 	vmov	d0, r8, r9
 8007862:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8007866:	4628      	mov	r0, r5
 8007868:	f7ff fed6 	bl	8007618 <__cvt>
 800786c:	9b06      	ldr	r3, [sp, #24]
 800786e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8007870:	2b47      	cmp	r3, #71	@ 0x47
 8007872:	4680      	mov	r8, r0
 8007874:	d129      	bne.n	80078ca <_printf_float+0x172>
 8007876:	1cc8      	adds	r0, r1, #3
 8007878:	db02      	blt.n	8007880 <_printf_float+0x128>
 800787a:	6863      	ldr	r3, [r4, #4]
 800787c:	4299      	cmp	r1, r3
 800787e:	dd41      	ble.n	8007904 <_printf_float+0x1ac>
 8007880:	f1aa 0a02 	sub.w	sl, sl, #2
 8007884:	fa5f fa8a 	uxtb.w	sl, sl
 8007888:	3901      	subs	r1, #1
 800788a:	4652      	mov	r2, sl
 800788c:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8007890:	9109      	str	r1, [sp, #36]	@ 0x24
 8007892:	f7ff ff26 	bl	80076e2 <__exponent>
 8007896:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007898:	1813      	adds	r3, r2, r0
 800789a:	2a01      	cmp	r2, #1
 800789c:	4681      	mov	r9, r0
 800789e:	6123      	str	r3, [r4, #16]
 80078a0:	dc02      	bgt.n	80078a8 <_printf_float+0x150>
 80078a2:	6822      	ldr	r2, [r4, #0]
 80078a4:	07d2      	lsls	r2, r2, #31
 80078a6:	d501      	bpl.n	80078ac <_printf_float+0x154>
 80078a8:	3301      	adds	r3, #1
 80078aa:	6123      	str	r3, [r4, #16]
 80078ac:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 80078b0:	2b00      	cmp	r3, #0
 80078b2:	d0a2      	beq.n	80077fa <_printf_float+0xa2>
 80078b4:	232d      	movs	r3, #45	@ 0x2d
 80078b6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80078ba:	e79e      	b.n	80077fa <_printf_float+0xa2>
 80078bc:	9a06      	ldr	r2, [sp, #24]
 80078be:	2a47      	cmp	r2, #71	@ 0x47
 80078c0:	d1c2      	bne.n	8007848 <_printf_float+0xf0>
 80078c2:	2b00      	cmp	r3, #0
 80078c4:	d1c0      	bne.n	8007848 <_printf_float+0xf0>
 80078c6:	2301      	movs	r3, #1
 80078c8:	e7bd      	b.n	8007846 <_printf_float+0xee>
 80078ca:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80078ce:	d9db      	bls.n	8007888 <_printf_float+0x130>
 80078d0:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 80078d4:	d118      	bne.n	8007908 <_printf_float+0x1b0>
 80078d6:	2900      	cmp	r1, #0
 80078d8:	6863      	ldr	r3, [r4, #4]
 80078da:	dd0b      	ble.n	80078f4 <_printf_float+0x19c>
 80078dc:	6121      	str	r1, [r4, #16]
 80078de:	b913      	cbnz	r3, 80078e6 <_printf_float+0x18e>
 80078e0:	6822      	ldr	r2, [r4, #0]
 80078e2:	07d0      	lsls	r0, r2, #31
 80078e4:	d502      	bpl.n	80078ec <_printf_float+0x194>
 80078e6:	3301      	adds	r3, #1
 80078e8:	440b      	add	r3, r1
 80078ea:	6123      	str	r3, [r4, #16]
 80078ec:	65a1      	str	r1, [r4, #88]	@ 0x58
 80078ee:	f04f 0900 	mov.w	r9, #0
 80078f2:	e7db      	b.n	80078ac <_printf_float+0x154>
 80078f4:	b913      	cbnz	r3, 80078fc <_printf_float+0x1a4>
 80078f6:	6822      	ldr	r2, [r4, #0]
 80078f8:	07d2      	lsls	r2, r2, #31
 80078fa:	d501      	bpl.n	8007900 <_printf_float+0x1a8>
 80078fc:	3302      	adds	r3, #2
 80078fe:	e7f4      	b.n	80078ea <_printf_float+0x192>
 8007900:	2301      	movs	r3, #1
 8007902:	e7f2      	b.n	80078ea <_printf_float+0x192>
 8007904:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8007908:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800790a:	4299      	cmp	r1, r3
 800790c:	db05      	blt.n	800791a <_printf_float+0x1c2>
 800790e:	6823      	ldr	r3, [r4, #0]
 8007910:	6121      	str	r1, [r4, #16]
 8007912:	07d8      	lsls	r0, r3, #31
 8007914:	d5ea      	bpl.n	80078ec <_printf_float+0x194>
 8007916:	1c4b      	adds	r3, r1, #1
 8007918:	e7e7      	b.n	80078ea <_printf_float+0x192>
 800791a:	2900      	cmp	r1, #0
 800791c:	bfd4      	ite	le
 800791e:	f1c1 0202 	rsble	r2, r1, #2
 8007922:	2201      	movgt	r2, #1
 8007924:	4413      	add	r3, r2
 8007926:	e7e0      	b.n	80078ea <_printf_float+0x192>
 8007928:	6823      	ldr	r3, [r4, #0]
 800792a:	055a      	lsls	r2, r3, #21
 800792c:	d407      	bmi.n	800793e <_printf_float+0x1e6>
 800792e:	6923      	ldr	r3, [r4, #16]
 8007930:	4642      	mov	r2, r8
 8007932:	4631      	mov	r1, r6
 8007934:	4628      	mov	r0, r5
 8007936:	47b8      	blx	r7
 8007938:	3001      	adds	r0, #1
 800793a:	d12b      	bne.n	8007994 <_printf_float+0x23c>
 800793c:	e767      	b.n	800780e <_printf_float+0xb6>
 800793e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8007942:	f240 80dd 	bls.w	8007b00 <_printf_float+0x3a8>
 8007946:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800794a:	2200      	movs	r2, #0
 800794c:	2300      	movs	r3, #0
 800794e:	f7f9 f8c3 	bl	8000ad8 <__aeabi_dcmpeq>
 8007952:	2800      	cmp	r0, #0
 8007954:	d033      	beq.n	80079be <_printf_float+0x266>
 8007956:	4a37      	ldr	r2, [pc, #220]	@ (8007a34 <_printf_float+0x2dc>)
 8007958:	2301      	movs	r3, #1
 800795a:	4631      	mov	r1, r6
 800795c:	4628      	mov	r0, r5
 800795e:	47b8      	blx	r7
 8007960:	3001      	adds	r0, #1
 8007962:	f43f af54 	beq.w	800780e <_printf_float+0xb6>
 8007966:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800796a:	4543      	cmp	r3, r8
 800796c:	db02      	blt.n	8007974 <_printf_float+0x21c>
 800796e:	6823      	ldr	r3, [r4, #0]
 8007970:	07d8      	lsls	r0, r3, #31
 8007972:	d50f      	bpl.n	8007994 <_printf_float+0x23c>
 8007974:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007978:	4631      	mov	r1, r6
 800797a:	4628      	mov	r0, r5
 800797c:	47b8      	blx	r7
 800797e:	3001      	adds	r0, #1
 8007980:	f43f af45 	beq.w	800780e <_printf_float+0xb6>
 8007984:	f04f 0900 	mov.w	r9, #0
 8007988:	f108 38ff 	add.w	r8, r8, #4294967295
 800798c:	f104 0a1a 	add.w	sl, r4, #26
 8007990:	45c8      	cmp	r8, r9
 8007992:	dc09      	bgt.n	80079a8 <_printf_float+0x250>
 8007994:	6823      	ldr	r3, [r4, #0]
 8007996:	079b      	lsls	r3, r3, #30
 8007998:	f100 8103 	bmi.w	8007ba2 <_printf_float+0x44a>
 800799c:	68e0      	ldr	r0, [r4, #12]
 800799e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80079a0:	4298      	cmp	r0, r3
 80079a2:	bfb8      	it	lt
 80079a4:	4618      	movlt	r0, r3
 80079a6:	e734      	b.n	8007812 <_printf_float+0xba>
 80079a8:	2301      	movs	r3, #1
 80079aa:	4652      	mov	r2, sl
 80079ac:	4631      	mov	r1, r6
 80079ae:	4628      	mov	r0, r5
 80079b0:	47b8      	blx	r7
 80079b2:	3001      	adds	r0, #1
 80079b4:	f43f af2b 	beq.w	800780e <_printf_float+0xb6>
 80079b8:	f109 0901 	add.w	r9, r9, #1
 80079bc:	e7e8      	b.n	8007990 <_printf_float+0x238>
 80079be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80079c0:	2b00      	cmp	r3, #0
 80079c2:	dc39      	bgt.n	8007a38 <_printf_float+0x2e0>
 80079c4:	4a1b      	ldr	r2, [pc, #108]	@ (8007a34 <_printf_float+0x2dc>)
 80079c6:	2301      	movs	r3, #1
 80079c8:	4631      	mov	r1, r6
 80079ca:	4628      	mov	r0, r5
 80079cc:	47b8      	blx	r7
 80079ce:	3001      	adds	r0, #1
 80079d0:	f43f af1d 	beq.w	800780e <_printf_float+0xb6>
 80079d4:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 80079d8:	ea59 0303 	orrs.w	r3, r9, r3
 80079dc:	d102      	bne.n	80079e4 <_printf_float+0x28c>
 80079de:	6823      	ldr	r3, [r4, #0]
 80079e0:	07d9      	lsls	r1, r3, #31
 80079e2:	d5d7      	bpl.n	8007994 <_printf_float+0x23c>
 80079e4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80079e8:	4631      	mov	r1, r6
 80079ea:	4628      	mov	r0, r5
 80079ec:	47b8      	blx	r7
 80079ee:	3001      	adds	r0, #1
 80079f0:	f43f af0d 	beq.w	800780e <_printf_float+0xb6>
 80079f4:	f04f 0a00 	mov.w	sl, #0
 80079f8:	f104 0b1a 	add.w	fp, r4, #26
 80079fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80079fe:	425b      	negs	r3, r3
 8007a00:	4553      	cmp	r3, sl
 8007a02:	dc01      	bgt.n	8007a08 <_printf_float+0x2b0>
 8007a04:	464b      	mov	r3, r9
 8007a06:	e793      	b.n	8007930 <_printf_float+0x1d8>
 8007a08:	2301      	movs	r3, #1
 8007a0a:	465a      	mov	r2, fp
 8007a0c:	4631      	mov	r1, r6
 8007a0e:	4628      	mov	r0, r5
 8007a10:	47b8      	blx	r7
 8007a12:	3001      	adds	r0, #1
 8007a14:	f43f aefb 	beq.w	800780e <_printf_float+0xb6>
 8007a18:	f10a 0a01 	add.w	sl, sl, #1
 8007a1c:	e7ee      	b.n	80079fc <_printf_float+0x2a4>
 8007a1e:	bf00      	nop
 8007a20:	7fefffff 	.word	0x7fefffff
 8007a24:	0800c8fe 	.word	0x0800c8fe
 8007a28:	0800c902 	.word	0x0800c902
 8007a2c:	0800c906 	.word	0x0800c906
 8007a30:	0800c90a 	.word	0x0800c90a
 8007a34:	0800c90e 	.word	0x0800c90e
 8007a38:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8007a3a:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8007a3e:	4553      	cmp	r3, sl
 8007a40:	bfa8      	it	ge
 8007a42:	4653      	movge	r3, sl
 8007a44:	2b00      	cmp	r3, #0
 8007a46:	4699      	mov	r9, r3
 8007a48:	dc36      	bgt.n	8007ab8 <_printf_float+0x360>
 8007a4a:	f04f 0b00 	mov.w	fp, #0
 8007a4e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007a52:	f104 021a 	add.w	r2, r4, #26
 8007a56:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8007a58:	9306      	str	r3, [sp, #24]
 8007a5a:	eba3 0309 	sub.w	r3, r3, r9
 8007a5e:	455b      	cmp	r3, fp
 8007a60:	dc31      	bgt.n	8007ac6 <_printf_float+0x36e>
 8007a62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007a64:	459a      	cmp	sl, r3
 8007a66:	dc3a      	bgt.n	8007ade <_printf_float+0x386>
 8007a68:	6823      	ldr	r3, [r4, #0]
 8007a6a:	07da      	lsls	r2, r3, #31
 8007a6c:	d437      	bmi.n	8007ade <_printf_float+0x386>
 8007a6e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007a70:	ebaa 0903 	sub.w	r9, sl, r3
 8007a74:	9b06      	ldr	r3, [sp, #24]
 8007a76:	ebaa 0303 	sub.w	r3, sl, r3
 8007a7a:	4599      	cmp	r9, r3
 8007a7c:	bfa8      	it	ge
 8007a7e:	4699      	movge	r9, r3
 8007a80:	f1b9 0f00 	cmp.w	r9, #0
 8007a84:	dc33      	bgt.n	8007aee <_printf_float+0x396>
 8007a86:	f04f 0800 	mov.w	r8, #0
 8007a8a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007a8e:	f104 0b1a 	add.w	fp, r4, #26
 8007a92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007a94:	ebaa 0303 	sub.w	r3, sl, r3
 8007a98:	eba3 0309 	sub.w	r3, r3, r9
 8007a9c:	4543      	cmp	r3, r8
 8007a9e:	f77f af79 	ble.w	8007994 <_printf_float+0x23c>
 8007aa2:	2301      	movs	r3, #1
 8007aa4:	465a      	mov	r2, fp
 8007aa6:	4631      	mov	r1, r6
 8007aa8:	4628      	mov	r0, r5
 8007aaa:	47b8      	blx	r7
 8007aac:	3001      	adds	r0, #1
 8007aae:	f43f aeae 	beq.w	800780e <_printf_float+0xb6>
 8007ab2:	f108 0801 	add.w	r8, r8, #1
 8007ab6:	e7ec      	b.n	8007a92 <_printf_float+0x33a>
 8007ab8:	4642      	mov	r2, r8
 8007aba:	4631      	mov	r1, r6
 8007abc:	4628      	mov	r0, r5
 8007abe:	47b8      	blx	r7
 8007ac0:	3001      	adds	r0, #1
 8007ac2:	d1c2      	bne.n	8007a4a <_printf_float+0x2f2>
 8007ac4:	e6a3      	b.n	800780e <_printf_float+0xb6>
 8007ac6:	2301      	movs	r3, #1
 8007ac8:	4631      	mov	r1, r6
 8007aca:	4628      	mov	r0, r5
 8007acc:	9206      	str	r2, [sp, #24]
 8007ace:	47b8      	blx	r7
 8007ad0:	3001      	adds	r0, #1
 8007ad2:	f43f ae9c 	beq.w	800780e <_printf_float+0xb6>
 8007ad6:	9a06      	ldr	r2, [sp, #24]
 8007ad8:	f10b 0b01 	add.w	fp, fp, #1
 8007adc:	e7bb      	b.n	8007a56 <_printf_float+0x2fe>
 8007ade:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007ae2:	4631      	mov	r1, r6
 8007ae4:	4628      	mov	r0, r5
 8007ae6:	47b8      	blx	r7
 8007ae8:	3001      	adds	r0, #1
 8007aea:	d1c0      	bne.n	8007a6e <_printf_float+0x316>
 8007aec:	e68f      	b.n	800780e <_printf_float+0xb6>
 8007aee:	9a06      	ldr	r2, [sp, #24]
 8007af0:	464b      	mov	r3, r9
 8007af2:	4442      	add	r2, r8
 8007af4:	4631      	mov	r1, r6
 8007af6:	4628      	mov	r0, r5
 8007af8:	47b8      	blx	r7
 8007afa:	3001      	adds	r0, #1
 8007afc:	d1c3      	bne.n	8007a86 <_printf_float+0x32e>
 8007afe:	e686      	b.n	800780e <_printf_float+0xb6>
 8007b00:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8007b04:	f1ba 0f01 	cmp.w	sl, #1
 8007b08:	dc01      	bgt.n	8007b0e <_printf_float+0x3b6>
 8007b0a:	07db      	lsls	r3, r3, #31
 8007b0c:	d536      	bpl.n	8007b7c <_printf_float+0x424>
 8007b0e:	2301      	movs	r3, #1
 8007b10:	4642      	mov	r2, r8
 8007b12:	4631      	mov	r1, r6
 8007b14:	4628      	mov	r0, r5
 8007b16:	47b8      	blx	r7
 8007b18:	3001      	adds	r0, #1
 8007b1a:	f43f ae78 	beq.w	800780e <_printf_float+0xb6>
 8007b1e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007b22:	4631      	mov	r1, r6
 8007b24:	4628      	mov	r0, r5
 8007b26:	47b8      	blx	r7
 8007b28:	3001      	adds	r0, #1
 8007b2a:	f43f ae70 	beq.w	800780e <_printf_float+0xb6>
 8007b2e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8007b32:	2200      	movs	r2, #0
 8007b34:	2300      	movs	r3, #0
 8007b36:	f10a 3aff 	add.w	sl, sl, #4294967295
 8007b3a:	f7f8 ffcd 	bl	8000ad8 <__aeabi_dcmpeq>
 8007b3e:	b9c0      	cbnz	r0, 8007b72 <_printf_float+0x41a>
 8007b40:	4653      	mov	r3, sl
 8007b42:	f108 0201 	add.w	r2, r8, #1
 8007b46:	4631      	mov	r1, r6
 8007b48:	4628      	mov	r0, r5
 8007b4a:	47b8      	blx	r7
 8007b4c:	3001      	adds	r0, #1
 8007b4e:	d10c      	bne.n	8007b6a <_printf_float+0x412>
 8007b50:	e65d      	b.n	800780e <_printf_float+0xb6>
 8007b52:	2301      	movs	r3, #1
 8007b54:	465a      	mov	r2, fp
 8007b56:	4631      	mov	r1, r6
 8007b58:	4628      	mov	r0, r5
 8007b5a:	47b8      	blx	r7
 8007b5c:	3001      	adds	r0, #1
 8007b5e:	f43f ae56 	beq.w	800780e <_printf_float+0xb6>
 8007b62:	f108 0801 	add.w	r8, r8, #1
 8007b66:	45d0      	cmp	r8, sl
 8007b68:	dbf3      	blt.n	8007b52 <_printf_float+0x3fa>
 8007b6a:	464b      	mov	r3, r9
 8007b6c:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8007b70:	e6df      	b.n	8007932 <_printf_float+0x1da>
 8007b72:	f04f 0800 	mov.w	r8, #0
 8007b76:	f104 0b1a 	add.w	fp, r4, #26
 8007b7a:	e7f4      	b.n	8007b66 <_printf_float+0x40e>
 8007b7c:	2301      	movs	r3, #1
 8007b7e:	4642      	mov	r2, r8
 8007b80:	e7e1      	b.n	8007b46 <_printf_float+0x3ee>
 8007b82:	2301      	movs	r3, #1
 8007b84:	464a      	mov	r2, r9
 8007b86:	4631      	mov	r1, r6
 8007b88:	4628      	mov	r0, r5
 8007b8a:	47b8      	blx	r7
 8007b8c:	3001      	adds	r0, #1
 8007b8e:	f43f ae3e 	beq.w	800780e <_printf_float+0xb6>
 8007b92:	f108 0801 	add.w	r8, r8, #1
 8007b96:	68e3      	ldr	r3, [r4, #12]
 8007b98:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8007b9a:	1a5b      	subs	r3, r3, r1
 8007b9c:	4543      	cmp	r3, r8
 8007b9e:	dcf0      	bgt.n	8007b82 <_printf_float+0x42a>
 8007ba0:	e6fc      	b.n	800799c <_printf_float+0x244>
 8007ba2:	f04f 0800 	mov.w	r8, #0
 8007ba6:	f104 0919 	add.w	r9, r4, #25
 8007baa:	e7f4      	b.n	8007b96 <_printf_float+0x43e>

08007bac <_printf_common>:
 8007bac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007bb0:	4616      	mov	r6, r2
 8007bb2:	4698      	mov	r8, r3
 8007bb4:	688a      	ldr	r2, [r1, #8]
 8007bb6:	690b      	ldr	r3, [r1, #16]
 8007bb8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007bbc:	4293      	cmp	r3, r2
 8007bbe:	bfb8      	it	lt
 8007bc0:	4613      	movlt	r3, r2
 8007bc2:	6033      	str	r3, [r6, #0]
 8007bc4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8007bc8:	4607      	mov	r7, r0
 8007bca:	460c      	mov	r4, r1
 8007bcc:	b10a      	cbz	r2, 8007bd2 <_printf_common+0x26>
 8007bce:	3301      	adds	r3, #1
 8007bd0:	6033      	str	r3, [r6, #0]
 8007bd2:	6823      	ldr	r3, [r4, #0]
 8007bd4:	0699      	lsls	r1, r3, #26
 8007bd6:	bf42      	ittt	mi
 8007bd8:	6833      	ldrmi	r3, [r6, #0]
 8007bda:	3302      	addmi	r3, #2
 8007bdc:	6033      	strmi	r3, [r6, #0]
 8007bde:	6825      	ldr	r5, [r4, #0]
 8007be0:	f015 0506 	ands.w	r5, r5, #6
 8007be4:	d106      	bne.n	8007bf4 <_printf_common+0x48>
 8007be6:	f104 0a19 	add.w	sl, r4, #25
 8007bea:	68e3      	ldr	r3, [r4, #12]
 8007bec:	6832      	ldr	r2, [r6, #0]
 8007bee:	1a9b      	subs	r3, r3, r2
 8007bf0:	42ab      	cmp	r3, r5
 8007bf2:	dc26      	bgt.n	8007c42 <_printf_common+0x96>
 8007bf4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8007bf8:	6822      	ldr	r2, [r4, #0]
 8007bfa:	3b00      	subs	r3, #0
 8007bfc:	bf18      	it	ne
 8007bfe:	2301      	movne	r3, #1
 8007c00:	0692      	lsls	r2, r2, #26
 8007c02:	d42b      	bmi.n	8007c5c <_printf_common+0xb0>
 8007c04:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8007c08:	4641      	mov	r1, r8
 8007c0a:	4638      	mov	r0, r7
 8007c0c:	47c8      	blx	r9
 8007c0e:	3001      	adds	r0, #1
 8007c10:	d01e      	beq.n	8007c50 <_printf_common+0xa4>
 8007c12:	6823      	ldr	r3, [r4, #0]
 8007c14:	6922      	ldr	r2, [r4, #16]
 8007c16:	f003 0306 	and.w	r3, r3, #6
 8007c1a:	2b04      	cmp	r3, #4
 8007c1c:	bf02      	ittt	eq
 8007c1e:	68e5      	ldreq	r5, [r4, #12]
 8007c20:	6833      	ldreq	r3, [r6, #0]
 8007c22:	1aed      	subeq	r5, r5, r3
 8007c24:	68a3      	ldr	r3, [r4, #8]
 8007c26:	bf0c      	ite	eq
 8007c28:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007c2c:	2500      	movne	r5, #0
 8007c2e:	4293      	cmp	r3, r2
 8007c30:	bfc4      	itt	gt
 8007c32:	1a9b      	subgt	r3, r3, r2
 8007c34:	18ed      	addgt	r5, r5, r3
 8007c36:	2600      	movs	r6, #0
 8007c38:	341a      	adds	r4, #26
 8007c3a:	42b5      	cmp	r5, r6
 8007c3c:	d11a      	bne.n	8007c74 <_printf_common+0xc8>
 8007c3e:	2000      	movs	r0, #0
 8007c40:	e008      	b.n	8007c54 <_printf_common+0xa8>
 8007c42:	2301      	movs	r3, #1
 8007c44:	4652      	mov	r2, sl
 8007c46:	4641      	mov	r1, r8
 8007c48:	4638      	mov	r0, r7
 8007c4a:	47c8      	blx	r9
 8007c4c:	3001      	adds	r0, #1
 8007c4e:	d103      	bne.n	8007c58 <_printf_common+0xac>
 8007c50:	f04f 30ff 	mov.w	r0, #4294967295
 8007c54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007c58:	3501      	adds	r5, #1
 8007c5a:	e7c6      	b.n	8007bea <_printf_common+0x3e>
 8007c5c:	18e1      	adds	r1, r4, r3
 8007c5e:	1c5a      	adds	r2, r3, #1
 8007c60:	2030      	movs	r0, #48	@ 0x30
 8007c62:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8007c66:	4422      	add	r2, r4
 8007c68:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8007c6c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8007c70:	3302      	adds	r3, #2
 8007c72:	e7c7      	b.n	8007c04 <_printf_common+0x58>
 8007c74:	2301      	movs	r3, #1
 8007c76:	4622      	mov	r2, r4
 8007c78:	4641      	mov	r1, r8
 8007c7a:	4638      	mov	r0, r7
 8007c7c:	47c8      	blx	r9
 8007c7e:	3001      	adds	r0, #1
 8007c80:	d0e6      	beq.n	8007c50 <_printf_common+0xa4>
 8007c82:	3601      	adds	r6, #1
 8007c84:	e7d9      	b.n	8007c3a <_printf_common+0x8e>
	...

08007c88 <_printf_i>:
 8007c88:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007c8c:	7e0f      	ldrb	r7, [r1, #24]
 8007c8e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8007c90:	2f78      	cmp	r7, #120	@ 0x78
 8007c92:	4691      	mov	r9, r2
 8007c94:	4680      	mov	r8, r0
 8007c96:	460c      	mov	r4, r1
 8007c98:	469a      	mov	sl, r3
 8007c9a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8007c9e:	d807      	bhi.n	8007cb0 <_printf_i+0x28>
 8007ca0:	2f62      	cmp	r7, #98	@ 0x62
 8007ca2:	d80a      	bhi.n	8007cba <_printf_i+0x32>
 8007ca4:	2f00      	cmp	r7, #0
 8007ca6:	f000 80d2 	beq.w	8007e4e <_printf_i+0x1c6>
 8007caa:	2f58      	cmp	r7, #88	@ 0x58
 8007cac:	f000 80b9 	beq.w	8007e22 <_printf_i+0x19a>
 8007cb0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007cb4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8007cb8:	e03a      	b.n	8007d30 <_printf_i+0xa8>
 8007cba:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8007cbe:	2b15      	cmp	r3, #21
 8007cc0:	d8f6      	bhi.n	8007cb0 <_printf_i+0x28>
 8007cc2:	a101      	add	r1, pc, #4	@ (adr r1, 8007cc8 <_printf_i+0x40>)
 8007cc4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007cc8:	08007d21 	.word	0x08007d21
 8007ccc:	08007d35 	.word	0x08007d35
 8007cd0:	08007cb1 	.word	0x08007cb1
 8007cd4:	08007cb1 	.word	0x08007cb1
 8007cd8:	08007cb1 	.word	0x08007cb1
 8007cdc:	08007cb1 	.word	0x08007cb1
 8007ce0:	08007d35 	.word	0x08007d35
 8007ce4:	08007cb1 	.word	0x08007cb1
 8007ce8:	08007cb1 	.word	0x08007cb1
 8007cec:	08007cb1 	.word	0x08007cb1
 8007cf0:	08007cb1 	.word	0x08007cb1
 8007cf4:	08007e35 	.word	0x08007e35
 8007cf8:	08007d5f 	.word	0x08007d5f
 8007cfc:	08007def 	.word	0x08007def
 8007d00:	08007cb1 	.word	0x08007cb1
 8007d04:	08007cb1 	.word	0x08007cb1
 8007d08:	08007e57 	.word	0x08007e57
 8007d0c:	08007cb1 	.word	0x08007cb1
 8007d10:	08007d5f 	.word	0x08007d5f
 8007d14:	08007cb1 	.word	0x08007cb1
 8007d18:	08007cb1 	.word	0x08007cb1
 8007d1c:	08007df7 	.word	0x08007df7
 8007d20:	6833      	ldr	r3, [r6, #0]
 8007d22:	1d1a      	adds	r2, r3, #4
 8007d24:	681b      	ldr	r3, [r3, #0]
 8007d26:	6032      	str	r2, [r6, #0]
 8007d28:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007d2c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8007d30:	2301      	movs	r3, #1
 8007d32:	e09d      	b.n	8007e70 <_printf_i+0x1e8>
 8007d34:	6833      	ldr	r3, [r6, #0]
 8007d36:	6820      	ldr	r0, [r4, #0]
 8007d38:	1d19      	adds	r1, r3, #4
 8007d3a:	6031      	str	r1, [r6, #0]
 8007d3c:	0606      	lsls	r6, r0, #24
 8007d3e:	d501      	bpl.n	8007d44 <_printf_i+0xbc>
 8007d40:	681d      	ldr	r5, [r3, #0]
 8007d42:	e003      	b.n	8007d4c <_printf_i+0xc4>
 8007d44:	0645      	lsls	r5, r0, #25
 8007d46:	d5fb      	bpl.n	8007d40 <_printf_i+0xb8>
 8007d48:	f9b3 5000 	ldrsh.w	r5, [r3]
 8007d4c:	2d00      	cmp	r5, #0
 8007d4e:	da03      	bge.n	8007d58 <_printf_i+0xd0>
 8007d50:	232d      	movs	r3, #45	@ 0x2d
 8007d52:	426d      	negs	r5, r5
 8007d54:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007d58:	4859      	ldr	r0, [pc, #356]	@ (8007ec0 <_printf_i+0x238>)
 8007d5a:	230a      	movs	r3, #10
 8007d5c:	e011      	b.n	8007d82 <_printf_i+0xfa>
 8007d5e:	6821      	ldr	r1, [r4, #0]
 8007d60:	6833      	ldr	r3, [r6, #0]
 8007d62:	0608      	lsls	r0, r1, #24
 8007d64:	f853 5b04 	ldr.w	r5, [r3], #4
 8007d68:	d402      	bmi.n	8007d70 <_printf_i+0xe8>
 8007d6a:	0649      	lsls	r1, r1, #25
 8007d6c:	bf48      	it	mi
 8007d6e:	b2ad      	uxthmi	r5, r5
 8007d70:	2f6f      	cmp	r7, #111	@ 0x6f
 8007d72:	4853      	ldr	r0, [pc, #332]	@ (8007ec0 <_printf_i+0x238>)
 8007d74:	6033      	str	r3, [r6, #0]
 8007d76:	bf14      	ite	ne
 8007d78:	230a      	movne	r3, #10
 8007d7a:	2308      	moveq	r3, #8
 8007d7c:	2100      	movs	r1, #0
 8007d7e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8007d82:	6866      	ldr	r6, [r4, #4]
 8007d84:	60a6      	str	r6, [r4, #8]
 8007d86:	2e00      	cmp	r6, #0
 8007d88:	bfa2      	ittt	ge
 8007d8a:	6821      	ldrge	r1, [r4, #0]
 8007d8c:	f021 0104 	bicge.w	r1, r1, #4
 8007d90:	6021      	strge	r1, [r4, #0]
 8007d92:	b90d      	cbnz	r5, 8007d98 <_printf_i+0x110>
 8007d94:	2e00      	cmp	r6, #0
 8007d96:	d04b      	beq.n	8007e30 <_printf_i+0x1a8>
 8007d98:	4616      	mov	r6, r2
 8007d9a:	fbb5 f1f3 	udiv	r1, r5, r3
 8007d9e:	fb03 5711 	mls	r7, r3, r1, r5
 8007da2:	5dc7      	ldrb	r7, [r0, r7]
 8007da4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8007da8:	462f      	mov	r7, r5
 8007daa:	42bb      	cmp	r3, r7
 8007dac:	460d      	mov	r5, r1
 8007dae:	d9f4      	bls.n	8007d9a <_printf_i+0x112>
 8007db0:	2b08      	cmp	r3, #8
 8007db2:	d10b      	bne.n	8007dcc <_printf_i+0x144>
 8007db4:	6823      	ldr	r3, [r4, #0]
 8007db6:	07df      	lsls	r7, r3, #31
 8007db8:	d508      	bpl.n	8007dcc <_printf_i+0x144>
 8007dba:	6923      	ldr	r3, [r4, #16]
 8007dbc:	6861      	ldr	r1, [r4, #4]
 8007dbe:	4299      	cmp	r1, r3
 8007dc0:	bfde      	ittt	le
 8007dc2:	2330      	movle	r3, #48	@ 0x30
 8007dc4:	f806 3c01 	strble.w	r3, [r6, #-1]
 8007dc8:	f106 36ff 	addle.w	r6, r6, #4294967295
 8007dcc:	1b92      	subs	r2, r2, r6
 8007dce:	6122      	str	r2, [r4, #16]
 8007dd0:	f8cd a000 	str.w	sl, [sp]
 8007dd4:	464b      	mov	r3, r9
 8007dd6:	aa03      	add	r2, sp, #12
 8007dd8:	4621      	mov	r1, r4
 8007dda:	4640      	mov	r0, r8
 8007ddc:	f7ff fee6 	bl	8007bac <_printf_common>
 8007de0:	3001      	adds	r0, #1
 8007de2:	d14a      	bne.n	8007e7a <_printf_i+0x1f2>
 8007de4:	f04f 30ff 	mov.w	r0, #4294967295
 8007de8:	b004      	add	sp, #16
 8007dea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007dee:	6823      	ldr	r3, [r4, #0]
 8007df0:	f043 0320 	orr.w	r3, r3, #32
 8007df4:	6023      	str	r3, [r4, #0]
 8007df6:	4833      	ldr	r0, [pc, #204]	@ (8007ec4 <_printf_i+0x23c>)
 8007df8:	2778      	movs	r7, #120	@ 0x78
 8007dfa:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8007dfe:	6823      	ldr	r3, [r4, #0]
 8007e00:	6831      	ldr	r1, [r6, #0]
 8007e02:	061f      	lsls	r7, r3, #24
 8007e04:	f851 5b04 	ldr.w	r5, [r1], #4
 8007e08:	d402      	bmi.n	8007e10 <_printf_i+0x188>
 8007e0a:	065f      	lsls	r7, r3, #25
 8007e0c:	bf48      	it	mi
 8007e0e:	b2ad      	uxthmi	r5, r5
 8007e10:	6031      	str	r1, [r6, #0]
 8007e12:	07d9      	lsls	r1, r3, #31
 8007e14:	bf44      	itt	mi
 8007e16:	f043 0320 	orrmi.w	r3, r3, #32
 8007e1a:	6023      	strmi	r3, [r4, #0]
 8007e1c:	b11d      	cbz	r5, 8007e26 <_printf_i+0x19e>
 8007e1e:	2310      	movs	r3, #16
 8007e20:	e7ac      	b.n	8007d7c <_printf_i+0xf4>
 8007e22:	4827      	ldr	r0, [pc, #156]	@ (8007ec0 <_printf_i+0x238>)
 8007e24:	e7e9      	b.n	8007dfa <_printf_i+0x172>
 8007e26:	6823      	ldr	r3, [r4, #0]
 8007e28:	f023 0320 	bic.w	r3, r3, #32
 8007e2c:	6023      	str	r3, [r4, #0]
 8007e2e:	e7f6      	b.n	8007e1e <_printf_i+0x196>
 8007e30:	4616      	mov	r6, r2
 8007e32:	e7bd      	b.n	8007db0 <_printf_i+0x128>
 8007e34:	6833      	ldr	r3, [r6, #0]
 8007e36:	6825      	ldr	r5, [r4, #0]
 8007e38:	6961      	ldr	r1, [r4, #20]
 8007e3a:	1d18      	adds	r0, r3, #4
 8007e3c:	6030      	str	r0, [r6, #0]
 8007e3e:	062e      	lsls	r6, r5, #24
 8007e40:	681b      	ldr	r3, [r3, #0]
 8007e42:	d501      	bpl.n	8007e48 <_printf_i+0x1c0>
 8007e44:	6019      	str	r1, [r3, #0]
 8007e46:	e002      	b.n	8007e4e <_printf_i+0x1c6>
 8007e48:	0668      	lsls	r0, r5, #25
 8007e4a:	d5fb      	bpl.n	8007e44 <_printf_i+0x1bc>
 8007e4c:	8019      	strh	r1, [r3, #0]
 8007e4e:	2300      	movs	r3, #0
 8007e50:	6123      	str	r3, [r4, #16]
 8007e52:	4616      	mov	r6, r2
 8007e54:	e7bc      	b.n	8007dd0 <_printf_i+0x148>
 8007e56:	6833      	ldr	r3, [r6, #0]
 8007e58:	1d1a      	adds	r2, r3, #4
 8007e5a:	6032      	str	r2, [r6, #0]
 8007e5c:	681e      	ldr	r6, [r3, #0]
 8007e5e:	6862      	ldr	r2, [r4, #4]
 8007e60:	2100      	movs	r1, #0
 8007e62:	4630      	mov	r0, r6
 8007e64:	f7f8 f9bc 	bl	80001e0 <memchr>
 8007e68:	b108      	cbz	r0, 8007e6e <_printf_i+0x1e6>
 8007e6a:	1b80      	subs	r0, r0, r6
 8007e6c:	6060      	str	r0, [r4, #4]
 8007e6e:	6863      	ldr	r3, [r4, #4]
 8007e70:	6123      	str	r3, [r4, #16]
 8007e72:	2300      	movs	r3, #0
 8007e74:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007e78:	e7aa      	b.n	8007dd0 <_printf_i+0x148>
 8007e7a:	6923      	ldr	r3, [r4, #16]
 8007e7c:	4632      	mov	r2, r6
 8007e7e:	4649      	mov	r1, r9
 8007e80:	4640      	mov	r0, r8
 8007e82:	47d0      	blx	sl
 8007e84:	3001      	adds	r0, #1
 8007e86:	d0ad      	beq.n	8007de4 <_printf_i+0x15c>
 8007e88:	6823      	ldr	r3, [r4, #0]
 8007e8a:	079b      	lsls	r3, r3, #30
 8007e8c:	d413      	bmi.n	8007eb6 <_printf_i+0x22e>
 8007e8e:	68e0      	ldr	r0, [r4, #12]
 8007e90:	9b03      	ldr	r3, [sp, #12]
 8007e92:	4298      	cmp	r0, r3
 8007e94:	bfb8      	it	lt
 8007e96:	4618      	movlt	r0, r3
 8007e98:	e7a6      	b.n	8007de8 <_printf_i+0x160>
 8007e9a:	2301      	movs	r3, #1
 8007e9c:	4632      	mov	r2, r6
 8007e9e:	4649      	mov	r1, r9
 8007ea0:	4640      	mov	r0, r8
 8007ea2:	47d0      	blx	sl
 8007ea4:	3001      	adds	r0, #1
 8007ea6:	d09d      	beq.n	8007de4 <_printf_i+0x15c>
 8007ea8:	3501      	adds	r5, #1
 8007eaa:	68e3      	ldr	r3, [r4, #12]
 8007eac:	9903      	ldr	r1, [sp, #12]
 8007eae:	1a5b      	subs	r3, r3, r1
 8007eb0:	42ab      	cmp	r3, r5
 8007eb2:	dcf2      	bgt.n	8007e9a <_printf_i+0x212>
 8007eb4:	e7eb      	b.n	8007e8e <_printf_i+0x206>
 8007eb6:	2500      	movs	r5, #0
 8007eb8:	f104 0619 	add.w	r6, r4, #25
 8007ebc:	e7f5      	b.n	8007eaa <_printf_i+0x222>
 8007ebe:	bf00      	nop
 8007ec0:	0800c910 	.word	0x0800c910
 8007ec4:	0800c921 	.word	0x0800c921

08007ec8 <_scanf_float>:
 8007ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ecc:	b087      	sub	sp, #28
 8007ece:	4617      	mov	r7, r2
 8007ed0:	9303      	str	r3, [sp, #12]
 8007ed2:	688b      	ldr	r3, [r1, #8]
 8007ed4:	1e5a      	subs	r2, r3, #1
 8007ed6:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8007eda:	bf81      	itttt	hi
 8007edc:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8007ee0:	eb03 0b05 	addhi.w	fp, r3, r5
 8007ee4:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8007ee8:	608b      	strhi	r3, [r1, #8]
 8007eea:	680b      	ldr	r3, [r1, #0]
 8007eec:	460a      	mov	r2, r1
 8007eee:	f04f 0500 	mov.w	r5, #0
 8007ef2:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 8007ef6:	f842 3b1c 	str.w	r3, [r2], #28
 8007efa:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8007efe:	4680      	mov	r8, r0
 8007f00:	460c      	mov	r4, r1
 8007f02:	bf98      	it	ls
 8007f04:	f04f 0b00 	movls.w	fp, #0
 8007f08:	9201      	str	r2, [sp, #4]
 8007f0a:	4616      	mov	r6, r2
 8007f0c:	46aa      	mov	sl, r5
 8007f0e:	46a9      	mov	r9, r5
 8007f10:	9502      	str	r5, [sp, #8]
 8007f12:	68a2      	ldr	r2, [r4, #8]
 8007f14:	b152      	cbz	r2, 8007f2c <_scanf_float+0x64>
 8007f16:	683b      	ldr	r3, [r7, #0]
 8007f18:	781b      	ldrb	r3, [r3, #0]
 8007f1a:	2b4e      	cmp	r3, #78	@ 0x4e
 8007f1c:	d864      	bhi.n	8007fe8 <_scanf_float+0x120>
 8007f1e:	2b40      	cmp	r3, #64	@ 0x40
 8007f20:	d83c      	bhi.n	8007f9c <_scanf_float+0xd4>
 8007f22:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8007f26:	b2c8      	uxtb	r0, r1
 8007f28:	280e      	cmp	r0, #14
 8007f2a:	d93a      	bls.n	8007fa2 <_scanf_float+0xda>
 8007f2c:	f1b9 0f00 	cmp.w	r9, #0
 8007f30:	d003      	beq.n	8007f3a <_scanf_float+0x72>
 8007f32:	6823      	ldr	r3, [r4, #0]
 8007f34:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007f38:	6023      	str	r3, [r4, #0]
 8007f3a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8007f3e:	f1ba 0f01 	cmp.w	sl, #1
 8007f42:	f200 8117 	bhi.w	8008174 <_scanf_float+0x2ac>
 8007f46:	9b01      	ldr	r3, [sp, #4]
 8007f48:	429e      	cmp	r6, r3
 8007f4a:	f200 8108 	bhi.w	800815e <_scanf_float+0x296>
 8007f4e:	2001      	movs	r0, #1
 8007f50:	b007      	add	sp, #28
 8007f52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f56:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8007f5a:	2a0d      	cmp	r2, #13
 8007f5c:	d8e6      	bhi.n	8007f2c <_scanf_float+0x64>
 8007f5e:	a101      	add	r1, pc, #4	@ (adr r1, 8007f64 <_scanf_float+0x9c>)
 8007f60:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8007f64:	080080ab 	.word	0x080080ab
 8007f68:	08007f2d 	.word	0x08007f2d
 8007f6c:	08007f2d 	.word	0x08007f2d
 8007f70:	08007f2d 	.word	0x08007f2d
 8007f74:	0800810b 	.word	0x0800810b
 8007f78:	080080e3 	.word	0x080080e3
 8007f7c:	08007f2d 	.word	0x08007f2d
 8007f80:	08007f2d 	.word	0x08007f2d
 8007f84:	080080b9 	.word	0x080080b9
 8007f88:	08007f2d 	.word	0x08007f2d
 8007f8c:	08007f2d 	.word	0x08007f2d
 8007f90:	08007f2d 	.word	0x08007f2d
 8007f94:	08007f2d 	.word	0x08007f2d
 8007f98:	08008071 	.word	0x08008071
 8007f9c:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8007fa0:	e7db      	b.n	8007f5a <_scanf_float+0x92>
 8007fa2:	290e      	cmp	r1, #14
 8007fa4:	d8c2      	bhi.n	8007f2c <_scanf_float+0x64>
 8007fa6:	a001      	add	r0, pc, #4	@ (adr r0, 8007fac <_scanf_float+0xe4>)
 8007fa8:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8007fac:	08008061 	.word	0x08008061
 8007fb0:	08007f2d 	.word	0x08007f2d
 8007fb4:	08008061 	.word	0x08008061
 8007fb8:	080080f7 	.word	0x080080f7
 8007fbc:	08007f2d 	.word	0x08007f2d
 8007fc0:	08008009 	.word	0x08008009
 8007fc4:	08008047 	.word	0x08008047
 8007fc8:	08008047 	.word	0x08008047
 8007fcc:	08008047 	.word	0x08008047
 8007fd0:	08008047 	.word	0x08008047
 8007fd4:	08008047 	.word	0x08008047
 8007fd8:	08008047 	.word	0x08008047
 8007fdc:	08008047 	.word	0x08008047
 8007fe0:	08008047 	.word	0x08008047
 8007fe4:	08008047 	.word	0x08008047
 8007fe8:	2b6e      	cmp	r3, #110	@ 0x6e
 8007fea:	d809      	bhi.n	8008000 <_scanf_float+0x138>
 8007fec:	2b60      	cmp	r3, #96	@ 0x60
 8007fee:	d8b2      	bhi.n	8007f56 <_scanf_float+0x8e>
 8007ff0:	2b54      	cmp	r3, #84	@ 0x54
 8007ff2:	d07b      	beq.n	80080ec <_scanf_float+0x224>
 8007ff4:	2b59      	cmp	r3, #89	@ 0x59
 8007ff6:	d199      	bne.n	8007f2c <_scanf_float+0x64>
 8007ff8:	2d07      	cmp	r5, #7
 8007ffa:	d197      	bne.n	8007f2c <_scanf_float+0x64>
 8007ffc:	2508      	movs	r5, #8
 8007ffe:	e02c      	b.n	800805a <_scanf_float+0x192>
 8008000:	2b74      	cmp	r3, #116	@ 0x74
 8008002:	d073      	beq.n	80080ec <_scanf_float+0x224>
 8008004:	2b79      	cmp	r3, #121	@ 0x79
 8008006:	e7f6      	b.n	8007ff6 <_scanf_float+0x12e>
 8008008:	6821      	ldr	r1, [r4, #0]
 800800a:	05c8      	lsls	r0, r1, #23
 800800c:	d51b      	bpl.n	8008046 <_scanf_float+0x17e>
 800800e:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8008012:	6021      	str	r1, [r4, #0]
 8008014:	f109 0901 	add.w	r9, r9, #1
 8008018:	f1bb 0f00 	cmp.w	fp, #0
 800801c:	d003      	beq.n	8008026 <_scanf_float+0x15e>
 800801e:	3201      	adds	r2, #1
 8008020:	f10b 3bff 	add.w	fp, fp, #4294967295
 8008024:	60a2      	str	r2, [r4, #8]
 8008026:	68a3      	ldr	r3, [r4, #8]
 8008028:	3b01      	subs	r3, #1
 800802a:	60a3      	str	r3, [r4, #8]
 800802c:	6923      	ldr	r3, [r4, #16]
 800802e:	3301      	adds	r3, #1
 8008030:	6123      	str	r3, [r4, #16]
 8008032:	687b      	ldr	r3, [r7, #4]
 8008034:	3b01      	subs	r3, #1
 8008036:	2b00      	cmp	r3, #0
 8008038:	607b      	str	r3, [r7, #4]
 800803a:	f340 8087 	ble.w	800814c <_scanf_float+0x284>
 800803e:	683b      	ldr	r3, [r7, #0]
 8008040:	3301      	adds	r3, #1
 8008042:	603b      	str	r3, [r7, #0]
 8008044:	e765      	b.n	8007f12 <_scanf_float+0x4a>
 8008046:	eb1a 0105 	adds.w	r1, sl, r5
 800804a:	f47f af6f 	bne.w	8007f2c <_scanf_float+0x64>
 800804e:	6822      	ldr	r2, [r4, #0]
 8008050:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 8008054:	6022      	str	r2, [r4, #0]
 8008056:	460d      	mov	r5, r1
 8008058:	468a      	mov	sl, r1
 800805a:	f806 3b01 	strb.w	r3, [r6], #1
 800805e:	e7e2      	b.n	8008026 <_scanf_float+0x15e>
 8008060:	6822      	ldr	r2, [r4, #0]
 8008062:	0610      	lsls	r0, r2, #24
 8008064:	f57f af62 	bpl.w	8007f2c <_scanf_float+0x64>
 8008068:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800806c:	6022      	str	r2, [r4, #0]
 800806e:	e7f4      	b.n	800805a <_scanf_float+0x192>
 8008070:	f1ba 0f00 	cmp.w	sl, #0
 8008074:	d10e      	bne.n	8008094 <_scanf_float+0x1cc>
 8008076:	f1b9 0f00 	cmp.w	r9, #0
 800807a:	d10e      	bne.n	800809a <_scanf_float+0x1d2>
 800807c:	6822      	ldr	r2, [r4, #0]
 800807e:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8008082:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8008086:	d108      	bne.n	800809a <_scanf_float+0x1d2>
 8008088:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800808c:	6022      	str	r2, [r4, #0]
 800808e:	f04f 0a01 	mov.w	sl, #1
 8008092:	e7e2      	b.n	800805a <_scanf_float+0x192>
 8008094:	f1ba 0f02 	cmp.w	sl, #2
 8008098:	d055      	beq.n	8008146 <_scanf_float+0x27e>
 800809a:	2d01      	cmp	r5, #1
 800809c:	d002      	beq.n	80080a4 <_scanf_float+0x1dc>
 800809e:	2d04      	cmp	r5, #4
 80080a0:	f47f af44 	bne.w	8007f2c <_scanf_float+0x64>
 80080a4:	3501      	adds	r5, #1
 80080a6:	b2ed      	uxtb	r5, r5
 80080a8:	e7d7      	b.n	800805a <_scanf_float+0x192>
 80080aa:	f1ba 0f01 	cmp.w	sl, #1
 80080ae:	f47f af3d 	bne.w	8007f2c <_scanf_float+0x64>
 80080b2:	f04f 0a02 	mov.w	sl, #2
 80080b6:	e7d0      	b.n	800805a <_scanf_float+0x192>
 80080b8:	b97d      	cbnz	r5, 80080da <_scanf_float+0x212>
 80080ba:	f1b9 0f00 	cmp.w	r9, #0
 80080be:	f47f af38 	bne.w	8007f32 <_scanf_float+0x6a>
 80080c2:	6822      	ldr	r2, [r4, #0]
 80080c4:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 80080c8:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 80080cc:	f040 8108 	bne.w	80082e0 <_scanf_float+0x418>
 80080d0:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80080d4:	6022      	str	r2, [r4, #0]
 80080d6:	2501      	movs	r5, #1
 80080d8:	e7bf      	b.n	800805a <_scanf_float+0x192>
 80080da:	2d03      	cmp	r5, #3
 80080dc:	d0e2      	beq.n	80080a4 <_scanf_float+0x1dc>
 80080de:	2d05      	cmp	r5, #5
 80080e0:	e7de      	b.n	80080a0 <_scanf_float+0x1d8>
 80080e2:	2d02      	cmp	r5, #2
 80080e4:	f47f af22 	bne.w	8007f2c <_scanf_float+0x64>
 80080e8:	2503      	movs	r5, #3
 80080ea:	e7b6      	b.n	800805a <_scanf_float+0x192>
 80080ec:	2d06      	cmp	r5, #6
 80080ee:	f47f af1d 	bne.w	8007f2c <_scanf_float+0x64>
 80080f2:	2507      	movs	r5, #7
 80080f4:	e7b1      	b.n	800805a <_scanf_float+0x192>
 80080f6:	6822      	ldr	r2, [r4, #0]
 80080f8:	0591      	lsls	r1, r2, #22
 80080fa:	f57f af17 	bpl.w	8007f2c <_scanf_float+0x64>
 80080fe:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 8008102:	6022      	str	r2, [r4, #0]
 8008104:	f8cd 9008 	str.w	r9, [sp, #8]
 8008108:	e7a7      	b.n	800805a <_scanf_float+0x192>
 800810a:	6822      	ldr	r2, [r4, #0]
 800810c:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8008110:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8008114:	d006      	beq.n	8008124 <_scanf_float+0x25c>
 8008116:	0550      	lsls	r0, r2, #21
 8008118:	f57f af08 	bpl.w	8007f2c <_scanf_float+0x64>
 800811c:	f1b9 0f00 	cmp.w	r9, #0
 8008120:	f000 80de 	beq.w	80082e0 <_scanf_float+0x418>
 8008124:	0591      	lsls	r1, r2, #22
 8008126:	bf58      	it	pl
 8008128:	9902      	ldrpl	r1, [sp, #8]
 800812a:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800812e:	bf58      	it	pl
 8008130:	eba9 0101 	subpl.w	r1, r9, r1
 8008134:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 8008138:	bf58      	it	pl
 800813a:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 800813e:	6022      	str	r2, [r4, #0]
 8008140:	f04f 0900 	mov.w	r9, #0
 8008144:	e789      	b.n	800805a <_scanf_float+0x192>
 8008146:	f04f 0a03 	mov.w	sl, #3
 800814a:	e786      	b.n	800805a <_scanf_float+0x192>
 800814c:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8008150:	4639      	mov	r1, r7
 8008152:	4640      	mov	r0, r8
 8008154:	4798      	blx	r3
 8008156:	2800      	cmp	r0, #0
 8008158:	f43f aedb 	beq.w	8007f12 <_scanf_float+0x4a>
 800815c:	e6e6      	b.n	8007f2c <_scanf_float+0x64>
 800815e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8008162:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8008166:	463a      	mov	r2, r7
 8008168:	4640      	mov	r0, r8
 800816a:	4798      	blx	r3
 800816c:	6923      	ldr	r3, [r4, #16]
 800816e:	3b01      	subs	r3, #1
 8008170:	6123      	str	r3, [r4, #16]
 8008172:	e6e8      	b.n	8007f46 <_scanf_float+0x7e>
 8008174:	1e6b      	subs	r3, r5, #1
 8008176:	2b06      	cmp	r3, #6
 8008178:	d824      	bhi.n	80081c4 <_scanf_float+0x2fc>
 800817a:	2d02      	cmp	r5, #2
 800817c:	d836      	bhi.n	80081ec <_scanf_float+0x324>
 800817e:	9b01      	ldr	r3, [sp, #4]
 8008180:	429e      	cmp	r6, r3
 8008182:	f67f aee4 	bls.w	8007f4e <_scanf_float+0x86>
 8008186:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800818a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800818e:	463a      	mov	r2, r7
 8008190:	4640      	mov	r0, r8
 8008192:	4798      	blx	r3
 8008194:	6923      	ldr	r3, [r4, #16]
 8008196:	3b01      	subs	r3, #1
 8008198:	6123      	str	r3, [r4, #16]
 800819a:	e7f0      	b.n	800817e <_scanf_float+0x2b6>
 800819c:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80081a0:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 80081a4:	463a      	mov	r2, r7
 80081a6:	4640      	mov	r0, r8
 80081a8:	4798      	blx	r3
 80081aa:	6923      	ldr	r3, [r4, #16]
 80081ac:	3b01      	subs	r3, #1
 80081ae:	6123      	str	r3, [r4, #16]
 80081b0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80081b4:	fa5f fa8a 	uxtb.w	sl, sl
 80081b8:	f1ba 0f02 	cmp.w	sl, #2
 80081bc:	d1ee      	bne.n	800819c <_scanf_float+0x2d4>
 80081be:	3d03      	subs	r5, #3
 80081c0:	b2ed      	uxtb	r5, r5
 80081c2:	1b76      	subs	r6, r6, r5
 80081c4:	6823      	ldr	r3, [r4, #0]
 80081c6:	05da      	lsls	r2, r3, #23
 80081c8:	d530      	bpl.n	800822c <_scanf_float+0x364>
 80081ca:	055b      	lsls	r3, r3, #21
 80081cc:	d511      	bpl.n	80081f2 <_scanf_float+0x32a>
 80081ce:	9b01      	ldr	r3, [sp, #4]
 80081d0:	429e      	cmp	r6, r3
 80081d2:	f67f aebc 	bls.w	8007f4e <_scanf_float+0x86>
 80081d6:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80081da:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80081de:	463a      	mov	r2, r7
 80081e0:	4640      	mov	r0, r8
 80081e2:	4798      	blx	r3
 80081e4:	6923      	ldr	r3, [r4, #16]
 80081e6:	3b01      	subs	r3, #1
 80081e8:	6123      	str	r3, [r4, #16]
 80081ea:	e7f0      	b.n	80081ce <_scanf_float+0x306>
 80081ec:	46aa      	mov	sl, r5
 80081ee:	46b3      	mov	fp, r6
 80081f0:	e7de      	b.n	80081b0 <_scanf_float+0x2e8>
 80081f2:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 80081f6:	6923      	ldr	r3, [r4, #16]
 80081f8:	2965      	cmp	r1, #101	@ 0x65
 80081fa:	f103 33ff 	add.w	r3, r3, #4294967295
 80081fe:	f106 35ff 	add.w	r5, r6, #4294967295
 8008202:	6123      	str	r3, [r4, #16]
 8008204:	d00c      	beq.n	8008220 <_scanf_float+0x358>
 8008206:	2945      	cmp	r1, #69	@ 0x45
 8008208:	d00a      	beq.n	8008220 <_scanf_float+0x358>
 800820a:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800820e:	463a      	mov	r2, r7
 8008210:	4640      	mov	r0, r8
 8008212:	4798      	blx	r3
 8008214:	6923      	ldr	r3, [r4, #16]
 8008216:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800821a:	3b01      	subs	r3, #1
 800821c:	1eb5      	subs	r5, r6, #2
 800821e:	6123      	str	r3, [r4, #16]
 8008220:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8008224:	463a      	mov	r2, r7
 8008226:	4640      	mov	r0, r8
 8008228:	4798      	blx	r3
 800822a:	462e      	mov	r6, r5
 800822c:	6822      	ldr	r2, [r4, #0]
 800822e:	f012 0210 	ands.w	r2, r2, #16
 8008232:	d001      	beq.n	8008238 <_scanf_float+0x370>
 8008234:	2000      	movs	r0, #0
 8008236:	e68b      	b.n	8007f50 <_scanf_float+0x88>
 8008238:	7032      	strb	r2, [r6, #0]
 800823a:	6823      	ldr	r3, [r4, #0]
 800823c:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8008240:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8008244:	d11c      	bne.n	8008280 <_scanf_float+0x3b8>
 8008246:	9b02      	ldr	r3, [sp, #8]
 8008248:	454b      	cmp	r3, r9
 800824a:	eba3 0209 	sub.w	r2, r3, r9
 800824e:	d123      	bne.n	8008298 <_scanf_float+0x3d0>
 8008250:	9901      	ldr	r1, [sp, #4]
 8008252:	2200      	movs	r2, #0
 8008254:	4640      	mov	r0, r8
 8008256:	f002 fc73 	bl	800ab40 <_strtod_r>
 800825a:	9b03      	ldr	r3, [sp, #12]
 800825c:	6821      	ldr	r1, [r4, #0]
 800825e:	681b      	ldr	r3, [r3, #0]
 8008260:	f011 0f02 	tst.w	r1, #2
 8008264:	ec57 6b10 	vmov	r6, r7, d0
 8008268:	f103 0204 	add.w	r2, r3, #4
 800826c:	d01f      	beq.n	80082ae <_scanf_float+0x3e6>
 800826e:	9903      	ldr	r1, [sp, #12]
 8008270:	600a      	str	r2, [r1, #0]
 8008272:	681b      	ldr	r3, [r3, #0]
 8008274:	e9c3 6700 	strd	r6, r7, [r3]
 8008278:	68e3      	ldr	r3, [r4, #12]
 800827a:	3301      	adds	r3, #1
 800827c:	60e3      	str	r3, [r4, #12]
 800827e:	e7d9      	b.n	8008234 <_scanf_float+0x36c>
 8008280:	9b04      	ldr	r3, [sp, #16]
 8008282:	2b00      	cmp	r3, #0
 8008284:	d0e4      	beq.n	8008250 <_scanf_float+0x388>
 8008286:	9905      	ldr	r1, [sp, #20]
 8008288:	230a      	movs	r3, #10
 800828a:	3101      	adds	r1, #1
 800828c:	4640      	mov	r0, r8
 800828e:	f002 fcd7 	bl	800ac40 <_strtol_r>
 8008292:	9b04      	ldr	r3, [sp, #16]
 8008294:	9e05      	ldr	r6, [sp, #20]
 8008296:	1ac2      	subs	r2, r0, r3
 8008298:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 800829c:	429e      	cmp	r6, r3
 800829e:	bf28      	it	cs
 80082a0:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 80082a4:	4910      	ldr	r1, [pc, #64]	@ (80082e8 <_scanf_float+0x420>)
 80082a6:	4630      	mov	r0, r6
 80082a8:	f000 f92a 	bl	8008500 <siprintf>
 80082ac:	e7d0      	b.n	8008250 <_scanf_float+0x388>
 80082ae:	f011 0f04 	tst.w	r1, #4
 80082b2:	9903      	ldr	r1, [sp, #12]
 80082b4:	600a      	str	r2, [r1, #0]
 80082b6:	d1dc      	bne.n	8008272 <_scanf_float+0x3aa>
 80082b8:	681d      	ldr	r5, [r3, #0]
 80082ba:	4632      	mov	r2, r6
 80082bc:	463b      	mov	r3, r7
 80082be:	4630      	mov	r0, r6
 80082c0:	4639      	mov	r1, r7
 80082c2:	f7f8 fc3b 	bl	8000b3c <__aeabi_dcmpun>
 80082c6:	b128      	cbz	r0, 80082d4 <_scanf_float+0x40c>
 80082c8:	4808      	ldr	r0, [pc, #32]	@ (80082ec <_scanf_float+0x424>)
 80082ca:	f000 fac7 	bl	800885c <nanf>
 80082ce:	ed85 0a00 	vstr	s0, [r5]
 80082d2:	e7d1      	b.n	8008278 <_scanf_float+0x3b0>
 80082d4:	4630      	mov	r0, r6
 80082d6:	4639      	mov	r1, r7
 80082d8:	f7f8 fc8e 	bl	8000bf8 <__aeabi_d2f>
 80082dc:	6028      	str	r0, [r5, #0]
 80082de:	e7cb      	b.n	8008278 <_scanf_float+0x3b0>
 80082e0:	f04f 0900 	mov.w	r9, #0
 80082e4:	e629      	b.n	8007f3a <_scanf_float+0x72>
 80082e6:	bf00      	nop
 80082e8:	0800c932 	.word	0x0800c932
 80082ec:	0800c972 	.word	0x0800c972

080082f0 <std>:
 80082f0:	2300      	movs	r3, #0
 80082f2:	b510      	push	{r4, lr}
 80082f4:	4604      	mov	r4, r0
 80082f6:	e9c0 3300 	strd	r3, r3, [r0]
 80082fa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80082fe:	6083      	str	r3, [r0, #8]
 8008300:	8181      	strh	r1, [r0, #12]
 8008302:	6643      	str	r3, [r0, #100]	@ 0x64
 8008304:	81c2      	strh	r2, [r0, #14]
 8008306:	6183      	str	r3, [r0, #24]
 8008308:	4619      	mov	r1, r3
 800830a:	2208      	movs	r2, #8
 800830c:	305c      	adds	r0, #92	@ 0x5c
 800830e:	f000 f9ef 	bl	80086f0 <memset>
 8008312:	4b0d      	ldr	r3, [pc, #52]	@ (8008348 <std+0x58>)
 8008314:	6263      	str	r3, [r4, #36]	@ 0x24
 8008316:	4b0d      	ldr	r3, [pc, #52]	@ (800834c <std+0x5c>)
 8008318:	62a3      	str	r3, [r4, #40]	@ 0x28
 800831a:	4b0d      	ldr	r3, [pc, #52]	@ (8008350 <std+0x60>)
 800831c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800831e:	4b0d      	ldr	r3, [pc, #52]	@ (8008354 <std+0x64>)
 8008320:	6323      	str	r3, [r4, #48]	@ 0x30
 8008322:	4b0d      	ldr	r3, [pc, #52]	@ (8008358 <std+0x68>)
 8008324:	6224      	str	r4, [r4, #32]
 8008326:	429c      	cmp	r4, r3
 8008328:	d006      	beq.n	8008338 <std+0x48>
 800832a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800832e:	4294      	cmp	r4, r2
 8008330:	d002      	beq.n	8008338 <std+0x48>
 8008332:	33d0      	adds	r3, #208	@ 0xd0
 8008334:	429c      	cmp	r4, r3
 8008336:	d105      	bne.n	8008344 <std+0x54>
 8008338:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800833c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008340:	f000 ba7a 	b.w	8008838 <__retarget_lock_init_recursive>
 8008344:	bd10      	pop	{r4, pc}
 8008346:	bf00      	nop
 8008348:	08008541 	.word	0x08008541
 800834c:	08008563 	.word	0x08008563
 8008350:	0800859b 	.word	0x0800859b
 8008354:	080085bf 	.word	0x080085bf
 8008358:	200009d4 	.word	0x200009d4

0800835c <stdio_exit_handler>:
 800835c:	4a02      	ldr	r2, [pc, #8]	@ (8008368 <stdio_exit_handler+0xc>)
 800835e:	4903      	ldr	r1, [pc, #12]	@ (800836c <stdio_exit_handler+0x10>)
 8008360:	4803      	ldr	r0, [pc, #12]	@ (8008370 <stdio_exit_handler+0x14>)
 8008362:	f000 b869 	b.w	8008438 <_fwalk_sglue>
 8008366:	bf00      	nop
 8008368:	2000057c 	.word	0x2000057c
 800836c:	0800b281 	.word	0x0800b281
 8008370:	2000058c 	.word	0x2000058c

08008374 <cleanup_stdio>:
 8008374:	6841      	ldr	r1, [r0, #4]
 8008376:	4b0c      	ldr	r3, [pc, #48]	@ (80083a8 <cleanup_stdio+0x34>)
 8008378:	4299      	cmp	r1, r3
 800837a:	b510      	push	{r4, lr}
 800837c:	4604      	mov	r4, r0
 800837e:	d001      	beq.n	8008384 <cleanup_stdio+0x10>
 8008380:	f002 ff7e 	bl	800b280 <_fflush_r>
 8008384:	68a1      	ldr	r1, [r4, #8]
 8008386:	4b09      	ldr	r3, [pc, #36]	@ (80083ac <cleanup_stdio+0x38>)
 8008388:	4299      	cmp	r1, r3
 800838a:	d002      	beq.n	8008392 <cleanup_stdio+0x1e>
 800838c:	4620      	mov	r0, r4
 800838e:	f002 ff77 	bl	800b280 <_fflush_r>
 8008392:	68e1      	ldr	r1, [r4, #12]
 8008394:	4b06      	ldr	r3, [pc, #24]	@ (80083b0 <cleanup_stdio+0x3c>)
 8008396:	4299      	cmp	r1, r3
 8008398:	d004      	beq.n	80083a4 <cleanup_stdio+0x30>
 800839a:	4620      	mov	r0, r4
 800839c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80083a0:	f002 bf6e 	b.w	800b280 <_fflush_r>
 80083a4:	bd10      	pop	{r4, pc}
 80083a6:	bf00      	nop
 80083a8:	200009d4 	.word	0x200009d4
 80083ac:	20000a3c 	.word	0x20000a3c
 80083b0:	20000aa4 	.word	0x20000aa4

080083b4 <global_stdio_init.part.0>:
 80083b4:	b510      	push	{r4, lr}
 80083b6:	4b0b      	ldr	r3, [pc, #44]	@ (80083e4 <global_stdio_init.part.0+0x30>)
 80083b8:	4c0b      	ldr	r4, [pc, #44]	@ (80083e8 <global_stdio_init.part.0+0x34>)
 80083ba:	4a0c      	ldr	r2, [pc, #48]	@ (80083ec <global_stdio_init.part.0+0x38>)
 80083bc:	601a      	str	r2, [r3, #0]
 80083be:	4620      	mov	r0, r4
 80083c0:	2200      	movs	r2, #0
 80083c2:	2104      	movs	r1, #4
 80083c4:	f7ff ff94 	bl	80082f0 <std>
 80083c8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80083cc:	2201      	movs	r2, #1
 80083ce:	2109      	movs	r1, #9
 80083d0:	f7ff ff8e 	bl	80082f0 <std>
 80083d4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80083d8:	2202      	movs	r2, #2
 80083da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80083de:	2112      	movs	r1, #18
 80083e0:	f7ff bf86 	b.w	80082f0 <std>
 80083e4:	20000b0c 	.word	0x20000b0c
 80083e8:	200009d4 	.word	0x200009d4
 80083ec:	0800835d 	.word	0x0800835d

080083f0 <__sfp_lock_acquire>:
 80083f0:	4801      	ldr	r0, [pc, #4]	@ (80083f8 <__sfp_lock_acquire+0x8>)
 80083f2:	f000 ba22 	b.w	800883a <__retarget_lock_acquire_recursive>
 80083f6:	bf00      	nop
 80083f8:	20000b15 	.word	0x20000b15

080083fc <__sfp_lock_release>:
 80083fc:	4801      	ldr	r0, [pc, #4]	@ (8008404 <__sfp_lock_release+0x8>)
 80083fe:	f000 ba1d 	b.w	800883c <__retarget_lock_release_recursive>
 8008402:	bf00      	nop
 8008404:	20000b15 	.word	0x20000b15

08008408 <__sinit>:
 8008408:	b510      	push	{r4, lr}
 800840a:	4604      	mov	r4, r0
 800840c:	f7ff fff0 	bl	80083f0 <__sfp_lock_acquire>
 8008410:	6a23      	ldr	r3, [r4, #32]
 8008412:	b11b      	cbz	r3, 800841c <__sinit+0x14>
 8008414:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008418:	f7ff bff0 	b.w	80083fc <__sfp_lock_release>
 800841c:	4b04      	ldr	r3, [pc, #16]	@ (8008430 <__sinit+0x28>)
 800841e:	6223      	str	r3, [r4, #32]
 8008420:	4b04      	ldr	r3, [pc, #16]	@ (8008434 <__sinit+0x2c>)
 8008422:	681b      	ldr	r3, [r3, #0]
 8008424:	2b00      	cmp	r3, #0
 8008426:	d1f5      	bne.n	8008414 <__sinit+0xc>
 8008428:	f7ff ffc4 	bl	80083b4 <global_stdio_init.part.0>
 800842c:	e7f2      	b.n	8008414 <__sinit+0xc>
 800842e:	bf00      	nop
 8008430:	08008375 	.word	0x08008375
 8008434:	20000b0c 	.word	0x20000b0c

08008438 <_fwalk_sglue>:
 8008438:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800843c:	4607      	mov	r7, r0
 800843e:	4688      	mov	r8, r1
 8008440:	4614      	mov	r4, r2
 8008442:	2600      	movs	r6, #0
 8008444:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8008448:	f1b9 0901 	subs.w	r9, r9, #1
 800844c:	d505      	bpl.n	800845a <_fwalk_sglue+0x22>
 800844e:	6824      	ldr	r4, [r4, #0]
 8008450:	2c00      	cmp	r4, #0
 8008452:	d1f7      	bne.n	8008444 <_fwalk_sglue+0xc>
 8008454:	4630      	mov	r0, r6
 8008456:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800845a:	89ab      	ldrh	r3, [r5, #12]
 800845c:	2b01      	cmp	r3, #1
 800845e:	d907      	bls.n	8008470 <_fwalk_sglue+0x38>
 8008460:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8008464:	3301      	adds	r3, #1
 8008466:	d003      	beq.n	8008470 <_fwalk_sglue+0x38>
 8008468:	4629      	mov	r1, r5
 800846a:	4638      	mov	r0, r7
 800846c:	47c0      	blx	r8
 800846e:	4306      	orrs	r6, r0
 8008470:	3568      	adds	r5, #104	@ 0x68
 8008472:	e7e9      	b.n	8008448 <_fwalk_sglue+0x10>

08008474 <iprintf>:
 8008474:	b40f      	push	{r0, r1, r2, r3}
 8008476:	b507      	push	{r0, r1, r2, lr}
 8008478:	4906      	ldr	r1, [pc, #24]	@ (8008494 <iprintf+0x20>)
 800847a:	ab04      	add	r3, sp, #16
 800847c:	6808      	ldr	r0, [r1, #0]
 800847e:	f853 2b04 	ldr.w	r2, [r3], #4
 8008482:	6881      	ldr	r1, [r0, #8]
 8008484:	9301      	str	r3, [sp, #4]
 8008486:	f002 fd5f 	bl	800af48 <_vfiprintf_r>
 800848a:	b003      	add	sp, #12
 800848c:	f85d eb04 	ldr.w	lr, [sp], #4
 8008490:	b004      	add	sp, #16
 8008492:	4770      	bx	lr
 8008494:	20000588 	.word	0x20000588

08008498 <sniprintf>:
 8008498:	b40c      	push	{r2, r3}
 800849a:	b530      	push	{r4, r5, lr}
 800849c:	4b17      	ldr	r3, [pc, #92]	@ (80084fc <sniprintf+0x64>)
 800849e:	1e0c      	subs	r4, r1, #0
 80084a0:	681d      	ldr	r5, [r3, #0]
 80084a2:	b09d      	sub	sp, #116	@ 0x74
 80084a4:	da08      	bge.n	80084b8 <sniprintf+0x20>
 80084a6:	238b      	movs	r3, #139	@ 0x8b
 80084a8:	602b      	str	r3, [r5, #0]
 80084aa:	f04f 30ff 	mov.w	r0, #4294967295
 80084ae:	b01d      	add	sp, #116	@ 0x74
 80084b0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80084b4:	b002      	add	sp, #8
 80084b6:	4770      	bx	lr
 80084b8:	f44f 7302 	mov.w	r3, #520	@ 0x208
 80084bc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80084c0:	bf14      	ite	ne
 80084c2:	f104 33ff 	addne.w	r3, r4, #4294967295
 80084c6:	4623      	moveq	r3, r4
 80084c8:	9304      	str	r3, [sp, #16]
 80084ca:	9307      	str	r3, [sp, #28]
 80084cc:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80084d0:	9002      	str	r0, [sp, #8]
 80084d2:	9006      	str	r0, [sp, #24]
 80084d4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80084d8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80084da:	ab21      	add	r3, sp, #132	@ 0x84
 80084dc:	a902      	add	r1, sp, #8
 80084de:	4628      	mov	r0, r5
 80084e0:	9301      	str	r3, [sp, #4]
 80084e2:	f002 fc0b 	bl	800acfc <_svfiprintf_r>
 80084e6:	1c43      	adds	r3, r0, #1
 80084e8:	bfbc      	itt	lt
 80084ea:	238b      	movlt	r3, #139	@ 0x8b
 80084ec:	602b      	strlt	r3, [r5, #0]
 80084ee:	2c00      	cmp	r4, #0
 80084f0:	d0dd      	beq.n	80084ae <sniprintf+0x16>
 80084f2:	9b02      	ldr	r3, [sp, #8]
 80084f4:	2200      	movs	r2, #0
 80084f6:	701a      	strb	r2, [r3, #0]
 80084f8:	e7d9      	b.n	80084ae <sniprintf+0x16>
 80084fa:	bf00      	nop
 80084fc:	20000588 	.word	0x20000588

08008500 <siprintf>:
 8008500:	b40e      	push	{r1, r2, r3}
 8008502:	b500      	push	{lr}
 8008504:	b09c      	sub	sp, #112	@ 0x70
 8008506:	ab1d      	add	r3, sp, #116	@ 0x74
 8008508:	9002      	str	r0, [sp, #8]
 800850a:	9006      	str	r0, [sp, #24]
 800850c:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8008510:	4809      	ldr	r0, [pc, #36]	@ (8008538 <siprintf+0x38>)
 8008512:	9107      	str	r1, [sp, #28]
 8008514:	9104      	str	r1, [sp, #16]
 8008516:	4909      	ldr	r1, [pc, #36]	@ (800853c <siprintf+0x3c>)
 8008518:	f853 2b04 	ldr.w	r2, [r3], #4
 800851c:	9105      	str	r1, [sp, #20]
 800851e:	6800      	ldr	r0, [r0, #0]
 8008520:	9301      	str	r3, [sp, #4]
 8008522:	a902      	add	r1, sp, #8
 8008524:	f002 fbea 	bl	800acfc <_svfiprintf_r>
 8008528:	9b02      	ldr	r3, [sp, #8]
 800852a:	2200      	movs	r2, #0
 800852c:	701a      	strb	r2, [r3, #0]
 800852e:	b01c      	add	sp, #112	@ 0x70
 8008530:	f85d eb04 	ldr.w	lr, [sp], #4
 8008534:	b003      	add	sp, #12
 8008536:	4770      	bx	lr
 8008538:	20000588 	.word	0x20000588
 800853c:	ffff0208 	.word	0xffff0208

08008540 <__sread>:
 8008540:	b510      	push	{r4, lr}
 8008542:	460c      	mov	r4, r1
 8008544:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008548:	f000 f914 	bl	8008774 <_read_r>
 800854c:	2800      	cmp	r0, #0
 800854e:	bfab      	itete	ge
 8008550:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8008552:	89a3      	ldrhlt	r3, [r4, #12]
 8008554:	181b      	addge	r3, r3, r0
 8008556:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800855a:	bfac      	ite	ge
 800855c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800855e:	81a3      	strhlt	r3, [r4, #12]
 8008560:	bd10      	pop	{r4, pc}

08008562 <__swrite>:
 8008562:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008566:	461f      	mov	r7, r3
 8008568:	898b      	ldrh	r3, [r1, #12]
 800856a:	05db      	lsls	r3, r3, #23
 800856c:	4605      	mov	r5, r0
 800856e:	460c      	mov	r4, r1
 8008570:	4616      	mov	r6, r2
 8008572:	d505      	bpl.n	8008580 <__swrite+0x1e>
 8008574:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008578:	2302      	movs	r3, #2
 800857a:	2200      	movs	r2, #0
 800857c:	f000 f8e8 	bl	8008750 <_lseek_r>
 8008580:	89a3      	ldrh	r3, [r4, #12]
 8008582:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008586:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800858a:	81a3      	strh	r3, [r4, #12]
 800858c:	4632      	mov	r2, r6
 800858e:	463b      	mov	r3, r7
 8008590:	4628      	mov	r0, r5
 8008592:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008596:	f000 b913 	b.w	80087c0 <_write_r>

0800859a <__sseek>:
 800859a:	b510      	push	{r4, lr}
 800859c:	460c      	mov	r4, r1
 800859e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80085a2:	f000 f8d5 	bl	8008750 <_lseek_r>
 80085a6:	1c43      	adds	r3, r0, #1
 80085a8:	89a3      	ldrh	r3, [r4, #12]
 80085aa:	bf15      	itete	ne
 80085ac:	6560      	strne	r0, [r4, #84]	@ 0x54
 80085ae:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80085b2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80085b6:	81a3      	strheq	r3, [r4, #12]
 80085b8:	bf18      	it	ne
 80085ba:	81a3      	strhne	r3, [r4, #12]
 80085bc:	bd10      	pop	{r4, pc}

080085be <__sclose>:
 80085be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80085c2:	f000 b8b5 	b.w	8008730 <_close_r>

080085c6 <__swbuf_r>:
 80085c6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80085c8:	460e      	mov	r6, r1
 80085ca:	4614      	mov	r4, r2
 80085cc:	4605      	mov	r5, r0
 80085ce:	b118      	cbz	r0, 80085d8 <__swbuf_r+0x12>
 80085d0:	6a03      	ldr	r3, [r0, #32]
 80085d2:	b90b      	cbnz	r3, 80085d8 <__swbuf_r+0x12>
 80085d4:	f7ff ff18 	bl	8008408 <__sinit>
 80085d8:	69a3      	ldr	r3, [r4, #24]
 80085da:	60a3      	str	r3, [r4, #8]
 80085dc:	89a3      	ldrh	r3, [r4, #12]
 80085de:	071a      	lsls	r2, r3, #28
 80085e0:	d501      	bpl.n	80085e6 <__swbuf_r+0x20>
 80085e2:	6923      	ldr	r3, [r4, #16]
 80085e4:	b943      	cbnz	r3, 80085f8 <__swbuf_r+0x32>
 80085e6:	4621      	mov	r1, r4
 80085e8:	4628      	mov	r0, r5
 80085ea:	f000 f82b 	bl	8008644 <__swsetup_r>
 80085ee:	b118      	cbz	r0, 80085f8 <__swbuf_r+0x32>
 80085f0:	f04f 37ff 	mov.w	r7, #4294967295
 80085f4:	4638      	mov	r0, r7
 80085f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80085f8:	6823      	ldr	r3, [r4, #0]
 80085fa:	6922      	ldr	r2, [r4, #16]
 80085fc:	1a98      	subs	r0, r3, r2
 80085fe:	6963      	ldr	r3, [r4, #20]
 8008600:	b2f6      	uxtb	r6, r6
 8008602:	4283      	cmp	r3, r0
 8008604:	4637      	mov	r7, r6
 8008606:	dc05      	bgt.n	8008614 <__swbuf_r+0x4e>
 8008608:	4621      	mov	r1, r4
 800860a:	4628      	mov	r0, r5
 800860c:	f002 fe38 	bl	800b280 <_fflush_r>
 8008610:	2800      	cmp	r0, #0
 8008612:	d1ed      	bne.n	80085f0 <__swbuf_r+0x2a>
 8008614:	68a3      	ldr	r3, [r4, #8]
 8008616:	3b01      	subs	r3, #1
 8008618:	60a3      	str	r3, [r4, #8]
 800861a:	6823      	ldr	r3, [r4, #0]
 800861c:	1c5a      	adds	r2, r3, #1
 800861e:	6022      	str	r2, [r4, #0]
 8008620:	701e      	strb	r6, [r3, #0]
 8008622:	6962      	ldr	r2, [r4, #20]
 8008624:	1c43      	adds	r3, r0, #1
 8008626:	429a      	cmp	r2, r3
 8008628:	d004      	beq.n	8008634 <__swbuf_r+0x6e>
 800862a:	89a3      	ldrh	r3, [r4, #12]
 800862c:	07db      	lsls	r3, r3, #31
 800862e:	d5e1      	bpl.n	80085f4 <__swbuf_r+0x2e>
 8008630:	2e0a      	cmp	r6, #10
 8008632:	d1df      	bne.n	80085f4 <__swbuf_r+0x2e>
 8008634:	4621      	mov	r1, r4
 8008636:	4628      	mov	r0, r5
 8008638:	f002 fe22 	bl	800b280 <_fflush_r>
 800863c:	2800      	cmp	r0, #0
 800863e:	d0d9      	beq.n	80085f4 <__swbuf_r+0x2e>
 8008640:	e7d6      	b.n	80085f0 <__swbuf_r+0x2a>
	...

08008644 <__swsetup_r>:
 8008644:	b538      	push	{r3, r4, r5, lr}
 8008646:	4b29      	ldr	r3, [pc, #164]	@ (80086ec <__swsetup_r+0xa8>)
 8008648:	4605      	mov	r5, r0
 800864a:	6818      	ldr	r0, [r3, #0]
 800864c:	460c      	mov	r4, r1
 800864e:	b118      	cbz	r0, 8008658 <__swsetup_r+0x14>
 8008650:	6a03      	ldr	r3, [r0, #32]
 8008652:	b90b      	cbnz	r3, 8008658 <__swsetup_r+0x14>
 8008654:	f7ff fed8 	bl	8008408 <__sinit>
 8008658:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800865c:	0719      	lsls	r1, r3, #28
 800865e:	d422      	bmi.n	80086a6 <__swsetup_r+0x62>
 8008660:	06da      	lsls	r2, r3, #27
 8008662:	d407      	bmi.n	8008674 <__swsetup_r+0x30>
 8008664:	2209      	movs	r2, #9
 8008666:	602a      	str	r2, [r5, #0]
 8008668:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800866c:	81a3      	strh	r3, [r4, #12]
 800866e:	f04f 30ff 	mov.w	r0, #4294967295
 8008672:	e033      	b.n	80086dc <__swsetup_r+0x98>
 8008674:	0758      	lsls	r0, r3, #29
 8008676:	d512      	bpl.n	800869e <__swsetup_r+0x5a>
 8008678:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800867a:	b141      	cbz	r1, 800868e <__swsetup_r+0x4a>
 800867c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8008680:	4299      	cmp	r1, r3
 8008682:	d002      	beq.n	800868a <__swsetup_r+0x46>
 8008684:	4628      	mov	r0, r5
 8008686:	f000 ff5b 	bl	8009540 <_free_r>
 800868a:	2300      	movs	r3, #0
 800868c:	6363      	str	r3, [r4, #52]	@ 0x34
 800868e:	89a3      	ldrh	r3, [r4, #12]
 8008690:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8008694:	81a3      	strh	r3, [r4, #12]
 8008696:	2300      	movs	r3, #0
 8008698:	6063      	str	r3, [r4, #4]
 800869a:	6923      	ldr	r3, [r4, #16]
 800869c:	6023      	str	r3, [r4, #0]
 800869e:	89a3      	ldrh	r3, [r4, #12]
 80086a0:	f043 0308 	orr.w	r3, r3, #8
 80086a4:	81a3      	strh	r3, [r4, #12]
 80086a6:	6923      	ldr	r3, [r4, #16]
 80086a8:	b94b      	cbnz	r3, 80086be <__swsetup_r+0x7a>
 80086aa:	89a3      	ldrh	r3, [r4, #12]
 80086ac:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80086b0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80086b4:	d003      	beq.n	80086be <__swsetup_r+0x7a>
 80086b6:	4621      	mov	r1, r4
 80086b8:	4628      	mov	r0, r5
 80086ba:	f002 fe41 	bl	800b340 <__smakebuf_r>
 80086be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80086c2:	f013 0201 	ands.w	r2, r3, #1
 80086c6:	d00a      	beq.n	80086de <__swsetup_r+0x9a>
 80086c8:	2200      	movs	r2, #0
 80086ca:	60a2      	str	r2, [r4, #8]
 80086cc:	6962      	ldr	r2, [r4, #20]
 80086ce:	4252      	negs	r2, r2
 80086d0:	61a2      	str	r2, [r4, #24]
 80086d2:	6922      	ldr	r2, [r4, #16]
 80086d4:	b942      	cbnz	r2, 80086e8 <__swsetup_r+0xa4>
 80086d6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80086da:	d1c5      	bne.n	8008668 <__swsetup_r+0x24>
 80086dc:	bd38      	pop	{r3, r4, r5, pc}
 80086de:	0799      	lsls	r1, r3, #30
 80086e0:	bf58      	it	pl
 80086e2:	6962      	ldrpl	r2, [r4, #20]
 80086e4:	60a2      	str	r2, [r4, #8]
 80086e6:	e7f4      	b.n	80086d2 <__swsetup_r+0x8e>
 80086e8:	2000      	movs	r0, #0
 80086ea:	e7f7      	b.n	80086dc <__swsetup_r+0x98>
 80086ec:	20000588 	.word	0x20000588

080086f0 <memset>:
 80086f0:	4402      	add	r2, r0
 80086f2:	4603      	mov	r3, r0
 80086f4:	4293      	cmp	r3, r2
 80086f6:	d100      	bne.n	80086fa <memset+0xa>
 80086f8:	4770      	bx	lr
 80086fa:	f803 1b01 	strb.w	r1, [r3], #1
 80086fe:	e7f9      	b.n	80086f4 <memset+0x4>

08008700 <clock>:
 8008700:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008702:	4b08      	ldr	r3, [pc, #32]	@ (8008724 <clock+0x24>)
 8008704:	4669      	mov	r1, sp
 8008706:	6818      	ldr	r0, [r3, #0]
 8008708:	f000 f856 	bl	80087b8 <_times_r>
 800870c:	1c43      	adds	r3, r0, #1
 800870e:	d006      	beq.n	800871e <clock+0x1e>
 8008710:	e9dd 0300 	ldrd	r0, r3, [sp]
 8008714:	4418      	add	r0, r3
 8008716:	9b02      	ldr	r3, [sp, #8]
 8008718:	4418      	add	r0, r3
 800871a:	9b03      	ldr	r3, [sp, #12]
 800871c:	4418      	add	r0, r3
 800871e:	b005      	add	sp, #20
 8008720:	f85d fb04 	ldr.w	pc, [sp], #4
 8008724:	20000588 	.word	0x20000588

08008728 <_localeconv_r>:
 8008728:	4800      	ldr	r0, [pc, #0]	@ (800872c <_localeconv_r+0x4>)
 800872a:	4770      	bx	lr
 800872c:	200006c8 	.word	0x200006c8

08008730 <_close_r>:
 8008730:	b538      	push	{r3, r4, r5, lr}
 8008732:	4d06      	ldr	r5, [pc, #24]	@ (800874c <_close_r+0x1c>)
 8008734:	2300      	movs	r3, #0
 8008736:	4604      	mov	r4, r0
 8008738:	4608      	mov	r0, r1
 800873a:	602b      	str	r3, [r5, #0]
 800873c:	f7f9 ff0e 	bl	800255c <_close>
 8008740:	1c43      	adds	r3, r0, #1
 8008742:	d102      	bne.n	800874a <_close_r+0x1a>
 8008744:	682b      	ldr	r3, [r5, #0]
 8008746:	b103      	cbz	r3, 800874a <_close_r+0x1a>
 8008748:	6023      	str	r3, [r4, #0]
 800874a:	bd38      	pop	{r3, r4, r5, pc}
 800874c:	20000b10 	.word	0x20000b10

08008750 <_lseek_r>:
 8008750:	b538      	push	{r3, r4, r5, lr}
 8008752:	4d07      	ldr	r5, [pc, #28]	@ (8008770 <_lseek_r+0x20>)
 8008754:	4604      	mov	r4, r0
 8008756:	4608      	mov	r0, r1
 8008758:	4611      	mov	r1, r2
 800875a:	2200      	movs	r2, #0
 800875c:	602a      	str	r2, [r5, #0]
 800875e:	461a      	mov	r2, r3
 8008760:	f7f9 ff23 	bl	80025aa <_lseek>
 8008764:	1c43      	adds	r3, r0, #1
 8008766:	d102      	bne.n	800876e <_lseek_r+0x1e>
 8008768:	682b      	ldr	r3, [r5, #0]
 800876a:	b103      	cbz	r3, 800876e <_lseek_r+0x1e>
 800876c:	6023      	str	r3, [r4, #0]
 800876e:	bd38      	pop	{r3, r4, r5, pc}
 8008770:	20000b10 	.word	0x20000b10

08008774 <_read_r>:
 8008774:	b538      	push	{r3, r4, r5, lr}
 8008776:	4d07      	ldr	r5, [pc, #28]	@ (8008794 <_read_r+0x20>)
 8008778:	4604      	mov	r4, r0
 800877a:	4608      	mov	r0, r1
 800877c:	4611      	mov	r1, r2
 800877e:	2200      	movs	r2, #0
 8008780:	602a      	str	r2, [r5, #0]
 8008782:	461a      	mov	r2, r3
 8008784:	f7f9 feb1 	bl	80024ea <_read>
 8008788:	1c43      	adds	r3, r0, #1
 800878a:	d102      	bne.n	8008792 <_read_r+0x1e>
 800878c:	682b      	ldr	r3, [r5, #0]
 800878e:	b103      	cbz	r3, 8008792 <_read_r+0x1e>
 8008790:	6023      	str	r3, [r4, #0]
 8008792:	bd38      	pop	{r3, r4, r5, pc}
 8008794:	20000b10 	.word	0x20000b10

08008798 <_sbrk_r>:
 8008798:	b538      	push	{r3, r4, r5, lr}
 800879a:	4d06      	ldr	r5, [pc, #24]	@ (80087b4 <_sbrk_r+0x1c>)
 800879c:	2300      	movs	r3, #0
 800879e:	4604      	mov	r4, r0
 80087a0:	4608      	mov	r0, r1
 80087a2:	602b      	str	r3, [r5, #0]
 80087a4:	f7f9 ff1a 	bl	80025dc <_sbrk>
 80087a8:	1c43      	adds	r3, r0, #1
 80087aa:	d102      	bne.n	80087b2 <_sbrk_r+0x1a>
 80087ac:	682b      	ldr	r3, [r5, #0]
 80087ae:	b103      	cbz	r3, 80087b2 <_sbrk_r+0x1a>
 80087b0:	6023      	str	r3, [r4, #0]
 80087b2:	bd38      	pop	{r3, r4, r5, pc}
 80087b4:	20000b10 	.word	0x20000b10

080087b8 <_times_r>:
 80087b8:	4608      	mov	r0, r1
 80087ba:	f7f9 bf03 	b.w	80025c4 <_times>
	...

080087c0 <_write_r>:
 80087c0:	b538      	push	{r3, r4, r5, lr}
 80087c2:	4d07      	ldr	r5, [pc, #28]	@ (80087e0 <_write_r+0x20>)
 80087c4:	4604      	mov	r4, r0
 80087c6:	4608      	mov	r0, r1
 80087c8:	4611      	mov	r1, r2
 80087ca:	2200      	movs	r2, #0
 80087cc:	602a      	str	r2, [r5, #0]
 80087ce:	461a      	mov	r2, r3
 80087d0:	f7f9 fea8 	bl	8002524 <_write>
 80087d4:	1c43      	adds	r3, r0, #1
 80087d6:	d102      	bne.n	80087de <_write_r+0x1e>
 80087d8:	682b      	ldr	r3, [r5, #0]
 80087da:	b103      	cbz	r3, 80087de <_write_r+0x1e>
 80087dc:	6023      	str	r3, [r4, #0]
 80087de:	bd38      	pop	{r3, r4, r5, pc}
 80087e0:	20000b10 	.word	0x20000b10

080087e4 <__errno>:
 80087e4:	4b01      	ldr	r3, [pc, #4]	@ (80087ec <__errno+0x8>)
 80087e6:	6818      	ldr	r0, [r3, #0]
 80087e8:	4770      	bx	lr
 80087ea:	bf00      	nop
 80087ec:	20000588 	.word	0x20000588

080087f0 <__libc_init_array>:
 80087f0:	b570      	push	{r4, r5, r6, lr}
 80087f2:	4d0d      	ldr	r5, [pc, #52]	@ (8008828 <__libc_init_array+0x38>)
 80087f4:	4c0d      	ldr	r4, [pc, #52]	@ (800882c <__libc_init_array+0x3c>)
 80087f6:	1b64      	subs	r4, r4, r5
 80087f8:	10a4      	asrs	r4, r4, #2
 80087fa:	2600      	movs	r6, #0
 80087fc:	42a6      	cmp	r6, r4
 80087fe:	d109      	bne.n	8008814 <__libc_init_array+0x24>
 8008800:	4d0b      	ldr	r5, [pc, #44]	@ (8008830 <__libc_init_array+0x40>)
 8008802:	4c0c      	ldr	r4, [pc, #48]	@ (8008834 <__libc_init_array+0x44>)
 8008804:	f003 fa1c 	bl	800bc40 <_init>
 8008808:	1b64      	subs	r4, r4, r5
 800880a:	10a4      	asrs	r4, r4, #2
 800880c:	2600      	movs	r6, #0
 800880e:	42a6      	cmp	r6, r4
 8008810:	d105      	bne.n	800881e <__libc_init_array+0x2e>
 8008812:	bd70      	pop	{r4, r5, r6, pc}
 8008814:	f855 3b04 	ldr.w	r3, [r5], #4
 8008818:	4798      	blx	r3
 800881a:	3601      	adds	r6, #1
 800881c:	e7ee      	b.n	80087fc <__libc_init_array+0xc>
 800881e:	f855 3b04 	ldr.w	r3, [r5], #4
 8008822:	4798      	blx	r3
 8008824:	3601      	adds	r6, #1
 8008826:	e7f2      	b.n	800880e <__libc_init_array+0x1e>
 8008828:	0800cd34 	.word	0x0800cd34
 800882c:	0800cd34 	.word	0x0800cd34
 8008830:	0800cd34 	.word	0x0800cd34
 8008834:	0800cd38 	.word	0x0800cd38

08008838 <__retarget_lock_init_recursive>:
 8008838:	4770      	bx	lr

0800883a <__retarget_lock_acquire_recursive>:
 800883a:	4770      	bx	lr

0800883c <__retarget_lock_release_recursive>:
 800883c:	4770      	bx	lr

0800883e <memcpy>:
 800883e:	440a      	add	r2, r1
 8008840:	4291      	cmp	r1, r2
 8008842:	f100 33ff 	add.w	r3, r0, #4294967295
 8008846:	d100      	bne.n	800884a <memcpy+0xc>
 8008848:	4770      	bx	lr
 800884a:	b510      	push	{r4, lr}
 800884c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008850:	f803 4f01 	strb.w	r4, [r3, #1]!
 8008854:	4291      	cmp	r1, r2
 8008856:	d1f9      	bne.n	800884c <memcpy+0xe>
 8008858:	bd10      	pop	{r4, pc}
	...

0800885c <nanf>:
 800885c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8008864 <nanf+0x8>
 8008860:	4770      	bx	lr
 8008862:	bf00      	nop
 8008864:	7fc00000 	.word	0x7fc00000

08008868 <__assert_func>:
 8008868:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800886a:	4614      	mov	r4, r2
 800886c:	461a      	mov	r2, r3
 800886e:	4b09      	ldr	r3, [pc, #36]	@ (8008894 <__assert_func+0x2c>)
 8008870:	681b      	ldr	r3, [r3, #0]
 8008872:	4605      	mov	r5, r0
 8008874:	68d8      	ldr	r0, [r3, #12]
 8008876:	b954      	cbnz	r4, 800888e <__assert_func+0x26>
 8008878:	4b07      	ldr	r3, [pc, #28]	@ (8008898 <__assert_func+0x30>)
 800887a:	461c      	mov	r4, r3
 800887c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8008880:	9100      	str	r1, [sp, #0]
 8008882:	462b      	mov	r3, r5
 8008884:	4905      	ldr	r1, [pc, #20]	@ (800889c <__assert_func+0x34>)
 8008886:	f002 fd23 	bl	800b2d0 <fiprintf>
 800888a:	f002 fded 	bl	800b468 <abort>
 800888e:	4b04      	ldr	r3, [pc, #16]	@ (80088a0 <__assert_func+0x38>)
 8008890:	e7f4      	b.n	800887c <__assert_func+0x14>
 8008892:	bf00      	nop
 8008894:	20000588 	.word	0x20000588
 8008898:	0800c972 	.word	0x0800c972
 800889c:	0800c944 	.word	0x0800c944
 80088a0:	0800c937 	.word	0x0800c937

080088a4 <quorem>:
 80088a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80088a8:	6903      	ldr	r3, [r0, #16]
 80088aa:	690c      	ldr	r4, [r1, #16]
 80088ac:	42a3      	cmp	r3, r4
 80088ae:	4607      	mov	r7, r0
 80088b0:	db7e      	blt.n	80089b0 <quorem+0x10c>
 80088b2:	3c01      	subs	r4, #1
 80088b4:	f101 0814 	add.w	r8, r1, #20
 80088b8:	00a3      	lsls	r3, r4, #2
 80088ba:	f100 0514 	add.w	r5, r0, #20
 80088be:	9300      	str	r3, [sp, #0]
 80088c0:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80088c4:	9301      	str	r3, [sp, #4]
 80088c6:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80088ca:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80088ce:	3301      	adds	r3, #1
 80088d0:	429a      	cmp	r2, r3
 80088d2:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80088d6:	fbb2 f6f3 	udiv	r6, r2, r3
 80088da:	d32e      	bcc.n	800893a <quorem+0x96>
 80088dc:	f04f 0a00 	mov.w	sl, #0
 80088e0:	46c4      	mov	ip, r8
 80088e2:	46ae      	mov	lr, r5
 80088e4:	46d3      	mov	fp, sl
 80088e6:	f85c 3b04 	ldr.w	r3, [ip], #4
 80088ea:	b298      	uxth	r0, r3
 80088ec:	fb06 a000 	mla	r0, r6, r0, sl
 80088f0:	0c02      	lsrs	r2, r0, #16
 80088f2:	0c1b      	lsrs	r3, r3, #16
 80088f4:	fb06 2303 	mla	r3, r6, r3, r2
 80088f8:	f8de 2000 	ldr.w	r2, [lr]
 80088fc:	b280      	uxth	r0, r0
 80088fe:	b292      	uxth	r2, r2
 8008900:	1a12      	subs	r2, r2, r0
 8008902:	445a      	add	r2, fp
 8008904:	f8de 0000 	ldr.w	r0, [lr]
 8008908:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800890c:	b29b      	uxth	r3, r3
 800890e:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8008912:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8008916:	b292      	uxth	r2, r2
 8008918:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800891c:	45e1      	cmp	r9, ip
 800891e:	f84e 2b04 	str.w	r2, [lr], #4
 8008922:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8008926:	d2de      	bcs.n	80088e6 <quorem+0x42>
 8008928:	9b00      	ldr	r3, [sp, #0]
 800892a:	58eb      	ldr	r3, [r5, r3]
 800892c:	b92b      	cbnz	r3, 800893a <quorem+0x96>
 800892e:	9b01      	ldr	r3, [sp, #4]
 8008930:	3b04      	subs	r3, #4
 8008932:	429d      	cmp	r5, r3
 8008934:	461a      	mov	r2, r3
 8008936:	d32f      	bcc.n	8008998 <quorem+0xf4>
 8008938:	613c      	str	r4, [r7, #16]
 800893a:	4638      	mov	r0, r7
 800893c:	f001 f90e 	bl	8009b5c <__mcmp>
 8008940:	2800      	cmp	r0, #0
 8008942:	db25      	blt.n	8008990 <quorem+0xec>
 8008944:	4629      	mov	r1, r5
 8008946:	2000      	movs	r0, #0
 8008948:	f858 2b04 	ldr.w	r2, [r8], #4
 800894c:	f8d1 c000 	ldr.w	ip, [r1]
 8008950:	fa1f fe82 	uxth.w	lr, r2
 8008954:	fa1f f38c 	uxth.w	r3, ip
 8008958:	eba3 030e 	sub.w	r3, r3, lr
 800895c:	4403      	add	r3, r0
 800895e:	0c12      	lsrs	r2, r2, #16
 8008960:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8008964:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8008968:	b29b      	uxth	r3, r3
 800896a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800896e:	45c1      	cmp	r9, r8
 8008970:	f841 3b04 	str.w	r3, [r1], #4
 8008974:	ea4f 4022 	mov.w	r0, r2, asr #16
 8008978:	d2e6      	bcs.n	8008948 <quorem+0xa4>
 800897a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800897e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8008982:	b922      	cbnz	r2, 800898e <quorem+0xea>
 8008984:	3b04      	subs	r3, #4
 8008986:	429d      	cmp	r5, r3
 8008988:	461a      	mov	r2, r3
 800898a:	d30b      	bcc.n	80089a4 <quorem+0x100>
 800898c:	613c      	str	r4, [r7, #16]
 800898e:	3601      	adds	r6, #1
 8008990:	4630      	mov	r0, r6
 8008992:	b003      	add	sp, #12
 8008994:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008998:	6812      	ldr	r2, [r2, #0]
 800899a:	3b04      	subs	r3, #4
 800899c:	2a00      	cmp	r2, #0
 800899e:	d1cb      	bne.n	8008938 <quorem+0x94>
 80089a0:	3c01      	subs	r4, #1
 80089a2:	e7c6      	b.n	8008932 <quorem+0x8e>
 80089a4:	6812      	ldr	r2, [r2, #0]
 80089a6:	3b04      	subs	r3, #4
 80089a8:	2a00      	cmp	r2, #0
 80089aa:	d1ef      	bne.n	800898c <quorem+0xe8>
 80089ac:	3c01      	subs	r4, #1
 80089ae:	e7ea      	b.n	8008986 <quorem+0xe2>
 80089b0:	2000      	movs	r0, #0
 80089b2:	e7ee      	b.n	8008992 <quorem+0xee>
 80089b4:	0000      	movs	r0, r0
	...

080089b8 <_dtoa_r>:
 80089b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80089bc:	69c7      	ldr	r7, [r0, #28]
 80089be:	b099      	sub	sp, #100	@ 0x64
 80089c0:	ed8d 0b02 	vstr	d0, [sp, #8]
 80089c4:	ec55 4b10 	vmov	r4, r5, d0
 80089c8:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 80089ca:	9109      	str	r1, [sp, #36]	@ 0x24
 80089cc:	4683      	mov	fp, r0
 80089ce:	920e      	str	r2, [sp, #56]	@ 0x38
 80089d0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80089d2:	b97f      	cbnz	r7, 80089f4 <_dtoa_r+0x3c>
 80089d4:	2010      	movs	r0, #16
 80089d6:	f7fe fd69 	bl	80074ac <malloc>
 80089da:	4602      	mov	r2, r0
 80089dc:	f8cb 001c 	str.w	r0, [fp, #28]
 80089e0:	b920      	cbnz	r0, 80089ec <_dtoa_r+0x34>
 80089e2:	4ba7      	ldr	r3, [pc, #668]	@ (8008c80 <_dtoa_r+0x2c8>)
 80089e4:	21ef      	movs	r1, #239	@ 0xef
 80089e6:	48a7      	ldr	r0, [pc, #668]	@ (8008c84 <_dtoa_r+0x2cc>)
 80089e8:	f7ff ff3e 	bl	8008868 <__assert_func>
 80089ec:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80089f0:	6007      	str	r7, [r0, #0]
 80089f2:	60c7      	str	r7, [r0, #12]
 80089f4:	f8db 301c 	ldr.w	r3, [fp, #28]
 80089f8:	6819      	ldr	r1, [r3, #0]
 80089fa:	b159      	cbz	r1, 8008a14 <_dtoa_r+0x5c>
 80089fc:	685a      	ldr	r2, [r3, #4]
 80089fe:	604a      	str	r2, [r1, #4]
 8008a00:	2301      	movs	r3, #1
 8008a02:	4093      	lsls	r3, r2
 8008a04:	608b      	str	r3, [r1, #8]
 8008a06:	4658      	mov	r0, fp
 8008a08:	f000 fe24 	bl	8009654 <_Bfree>
 8008a0c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8008a10:	2200      	movs	r2, #0
 8008a12:	601a      	str	r2, [r3, #0]
 8008a14:	1e2b      	subs	r3, r5, #0
 8008a16:	bfb9      	ittee	lt
 8008a18:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8008a1c:	9303      	strlt	r3, [sp, #12]
 8008a1e:	2300      	movge	r3, #0
 8008a20:	6033      	strge	r3, [r6, #0]
 8008a22:	9f03      	ldr	r7, [sp, #12]
 8008a24:	4b98      	ldr	r3, [pc, #608]	@ (8008c88 <_dtoa_r+0x2d0>)
 8008a26:	bfbc      	itt	lt
 8008a28:	2201      	movlt	r2, #1
 8008a2a:	6032      	strlt	r2, [r6, #0]
 8008a2c:	43bb      	bics	r3, r7
 8008a2e:	d112      	bne.n	8008a56 <_dtoa_r+0x9e>
 8008a30:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8008a32:	f242 730f 	movw	r3, #9999	@ 0x270f
 8008a36:	6013      	str	r3, [r2, #0]
 8008a38:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8008a3c:	4323      	orrs	r3, r4
 8008a3e:	f000 854d 	beq.w	80094dc <_dtoa_r+0xb24>
 8008a42:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8008a44:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8008c9c <_dtoa_r+0x2e4>
 8008a48:	2b00      	cmp	r3, #0
 8008a4a:	f000 854f 	beq.w	80094ec <_dtoa_r+0xb34>
 8008a4e:	f10a 0303 	add.w	r3, sl, #3
 8008a52:	f000 bd49 	b.w	80094e8 <_dtoa_r+0xb30>
 8008a56:	ed9d 7b02 	vldr	d7, [sp, #8]
 8008a5a:	2200      	movs	r2, #0
 8008a5c:	ec51 0b17 	vmov	r0, r1, d7
 8008a60:	2300      	movs	r3, #0
 8008a62:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 8008a66:	f7f8 f837 	bl	8000ad8 <__aeabi_dcmpeq>
 8008a6a:	4680      	mov	r8, r0
 8008a6c:	b158      	cbz	r0, 8008a86 <_dtoa_r+0xce>
 8008a6e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8008a70:	2301      	movs	r3, #1
 8008a72:	6013      	str	r3, [r2, #0]
 8008a74:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8008a76:	b113      	cbz	r3, 8008a7e <_dtoa_r+0xc6>
 8008a78:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8008a7a:	4b84      	ldr	r3, [pc, #528]	@ (8008c8c <_dtoa_r+0x2d4>)
 8008a7c:	6013      	str	r3, [r2, #0]
 8008a7e:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8008ca0 <_dtoa_r+0x2e8>
 8008a82:	f000 bd33 	b.w	80094ec <_dtoa_r+0xb34>
 8008a86:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8008a8a:	aa16      	add	r2, sp, #88	@ 0x58
 8008a8c:	a917      	add	r1, sp, #92	@ 0x5c
 8008a8e:	4658      	mov	r0, fp
 8008a90:	f001 f984 	bl	8009d9c <__d2b>
 8008a94:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8008a98:	4681      	mov	r9, r0
 8008a9a:	2e00      	cmp	r6, #0
 8008a9c:	d077      	beq.n	8008b8e <_dtoa_r+0x1d6>
 8008a9e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8008aa0:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8008aa4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8008aa8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008aac:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8008ab0:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8008ab4:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8008ab8:	4619      	mov	r1, r3
 8008aba:	2200      	movs	r2, #0
 8008abc:	4b74      	ldr	r3, [pc, #464]	@ (8008c90 <_dtoa_r+0x2d8>)
 8008abe:	f7f7 fbeb 	bl	8000298 <__aeabi_dsub>
 8008ac2:	a369      	add	r3, pc, #420	@ (adr r3, 8008c68 <_dtoa_r+0x2b0>)
 8008ac4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ac8:	f7f7 fd9e 	bl	8000608 <__aeabi_dmul>
 8008acc:	a368      	add	r3, pc, #416	@ (adr r3, 8008c70 <_dtoa_r+0x2b8>)
 8008ace:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ad2:	f7f7 fbe3 	bl	800029c <__adddf3>
 8008ad6:	4604      	mov	r4, r0
 8008ad8:	4630      	mov	r0, r6
 8008ada:	460d      	mov	r5, r1
 8008adc:	f7f7 fd2a 	bl	8000534 <__aeabi_i2d>
 8008ae0:	a365      	add	r3, pc, #404	@ (adr r3, 8008c78 <_dtoa_r+0x2c0>)
 8008ae2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ae6:	f7f7 fd8f 	bl	8000608 <__aeabi_dmul>
 8008aea:	4602      	mov	r2, r0
 8008aec:	460b      	mov	r3, r1
 8008aee:	4620      	mov	r0, r4
 8008af0:	4629      	mov	r1, r5
 8008af2:	f7f7 fbd3 	bl	800029c <__adddf3>
 8008af6:	4604      	mov	r4, r0
 8008af8:	460d      	mov	r5, r1
 8008afa:	f7f8 f835 	bl	8000b68 <__aeabi_d2iz>
 8008afe:	2200      	movs	r2, #0
 8008b00:	4607      	mov	r7, r0
 8008b02:	2300      	movs	r3, #0
 8008b04:	4620      	mov	r0, r4
 8008b06:	4629      	mov	r1, r5
 8008b08:	f7f7 fff0 	bl	8000aec <__aeabi_dcmplt>
 8008b0c:	b140      	cbz	r0, 8008b20 <_dtoa_r+0x168>
 8008b0e:	4638      	mov	r0, r7
 8008b10:	f7f7 fd10 	bl	8000534 <__aeabi_i2d>
 8008b14:	4622      	mov	r2, r4
 8008b16:	462b      	mov	r3, r5
 8008b18:	f7f7 ffde 	bl	8000ad8 <__aeabi_dcmpeq>
 8008b1c:	b900      	cbnz	r0, 8008b20 <_dtoa_r+0x168>
 8008b1e:	3f01      	subs	r7, #1
 8008b20:	2f16      	cmp	r7, #22
 8008b22:	d851      	bhi.n	8008bc8 <_dtoa_r+0x210>
 8008b24:	4b5b      	ldr	r3, [pc, #364]	@ (8008c94 <_dtoa_r+0x2dc>)
 8008b26:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8008b2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b2e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008b32:	f7f7 ffdb 	bl	8000aec <__aeabi_dcmplt>
 8008b36:	2800      	cmp	r0, #0
 8008b38:	d048      	beq.n	8008bcc <_dtoa_r+0x214>
 8008b3a:	3f01      	subs	r7, #1
 8008b3c:	2300      	movs	r3, #0
 8008b3e:	9312      	str	r3, [sp, #72]	@ 0x48
 8008b40:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8008b42:	1b9b      	subs	r3, r3, r6
 8008b44:	1e5a      	subs	r2, r3, #1
 8008b46:	bf44      	itt	mi
 8008b48:	f1c3 0801 	rsbmi	r8, r3, #1
 8008b4c:	2300      	movmi	r3, #0
 8008b4e:	9208      	str	r2, [sp, #32]
 8008b50:	bf54      	ite	pl
 8008b52:	f04f 0800 	movpl.w	r8, #0
 8008b56:	9308      	strmi	r3, [sp, #32]
 8008b58:	2f00      	cmp	r7, #0
 8008b5a:	db39      	blt.n	8008bd0 <_dtoa_r+0x218>
 8008b5c:	9b08      	ldr	r3, [sp, #32]
 8008b5e:	970f      	str	r7, [sp, #60]	@ 0x3c
 8008b60:	443b      	add	r3, r7
 8008b62:	9308      	str	r3, [sp, #32]
 8008b64:	2300      	movs	r3, #0
 8008b66:	930a      	str	r3, [sp, #40]	@ 0x28
 8008b68:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008b6a:	2b09      	cmp	r3, #9
 8008b6c:	d864      	bhi.n	8008c38 <_dtoa_r+0x280>
 8008b6e:	2b05      	cmp	r3, #5
 8008b70:	bfc4      	itt	gt
 8008b72:	3b04      	subgt	r3, #4
 8008b74:	9309      	strgt	r3, [sp, #36]	@ 0x24
 8008b76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008b78:	f1a3 0302 	sub.w	r3, r3, #2
 8008b7c:	bfcc      	ite	gt
 8008b7e:	2400      	movgt	r4, #0
 8008b80:	2401      	movle	r4, #1
 8008b82:	2b03      	cmp	r3, #3
 8008b84:	d863      	bhi.n	8008c4e <_dtoa_r+0x296>
 8008b86:	e8df f003 	tbb	[pc, r3]
 8008b8a:	372a      	.short	0x372a
 8008b8c:	5535      	.short	0x5535
 8008b8e:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 8008b92:	441e      	add	r6, r3
 8008b94:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8008b98:	2b20      	cmp	r3, #32
 8008b9a:	bfc1      	itttt	gt
 8008b9c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8008ba0:	409f      	lslgt	r7, r3
 8008ba2:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8008ba6:	fa24 f303 	lsrgt.w	r3, r4, r3
 8008baa:	bfd6      	itet	le
 8008bac:	f1c3 0320 	rsble	r3, r3, #32
 8008bb0:	ea47 0003 	orrgt.w	r0, r7, r3
 8008bb4:	fa04 f003 	lslle.w	r0, r4, r3
 8008bb8:	f7f7 fcac 	bl	8000514 <__aeabi_ui2d>
 8008bbc:	2201      	movs	r2, #1
 8008bbe:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8008bc2:	3e01      	subs	r6, #1
 8008bc4:	9214      	str	r2, [sp, #80]	@ 0x50
 8008bc6:	e777      	b.n	8008ab8 <_dtoa_r+0x100>
 8008bc8:	2301      	movs	r3, #1
 8008bca:	e7b8      	b.n	8008b3e <_dtoa_r+0x186>
 8008bcc:	9012      	str	r0, [sp, #72]	@ 0x48
 8008bce:	e7b7      	b.n	8008b40 <_dtoa_r+0x188>
 8008bd0:	427b      	negs	r3, r7
 8008bd2:	930a      	str	r3, [sp, #40]	@ 0x28
 8008bd4:	2300      	movs	r3, #0
 8008bd6:	eba8 0807 	sub.w	r8, r8, r7
 8008bda:	930f      	str	r3, [sp, #60]	@ 0x3c
 8008bdc:	e7c4      	b.n	8008b68 <_dtoa_r+0x1b0>
 8008bde:	2300      	movs	r3, #0
 8008be0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008be2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008be4:	2b00      	cmp	r3, #0
 8008be6:	dc35      	bgt.n	8008c54 <_dtoa_r+0x29c>
 8008be8:	2301      	movs	r3, #1
 8008bea:	9300      	str	r3, [sp, #0]
 8008bec:	9307      	str	r3, [sp, #28]
 8008bee:	461a      	mov	r2, r3
 8008bf0:	920e      	str	r2, [sp, #56]	@ 0x38
 8008bf2:	e00b      	b.n	8008c0c <_dtoa_r+0x254>
 8008bf4:	2301      	movs	r3, #1
 8008bf6:	e7f3      	b.n	8008be0 <_dtoa_r+0x228>
 8008bf8:	2300      	movs	r3, #0
 8008bfa:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008bfc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008bfe:	18fb      	adds	r3, r7, r3
 8008c00:	9300      	str	r3, [sp, #0]
 8008c02:	3301      	adds	r3, #1
 8008c04:	2b01      	cmp	r3, #1
 8008c06:	9307      	str	r3, [sp, #28]
 8008c08:	bfb8      	it	lt
 8008c0a:	2301      	movlt	r3, #1
 8008c0c:	f8db 001c 	ldr.w	r0, [fp, #28]
 8008c10:	2100      	movs	r1, #0
 8008c12:	2204      	movs	r2, #4
 8008c14:	f102 0514 	add.w	r5, r2, #20
 8008c18:	429d      	cmp	r5, r3
 8008c1a:	d91f      	bls.n	8008c5c <_dtoa_r+0x2a4>
 8008c1c:	6041      	str	r1, [r0, #4]
 8008c1e:	4658      	mov	r0, fp
 8008c20:	f000 fcd8 	bl	80095d4 <_Balloc>
 8008c24:	4682      	mov	sl, r0
 8008c26:	2800      	cmp	r0, #0
 8008c28:	d13c      	bne.n	8008ca4 <_dtoa_r+0x2ec>
 8008c2a:	4b1b      	ldr	r3, [pc, #108]	@ (8008c98 <_dtoa_r+0x2e0>)
 8008c2c:	4602      	mov	r2, r0
 8008c2e:	f240 11af 	movw	r1, #431	@ 0x1af
 8008c32:	e6d8      	b.n	80089e6 <_dtoa_r+0x2e>
 8008c34:	2301      	movs	r3, #1
 8008c36:	e7e0      	b.n	8008bfa <_dtoa_r+0x242>
 8008c38:	2401      	movs	r4, #1
 8008c3a:	2300      	movs	r3, #0
 8008c3c:	9309      	str	r3, [sp, #36]	@ 0x24
 8008c3e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8008c40:	f04f 33ff 	mov.w	r3, #4294967295
 8008c44:	9300      	str	r3, [sp, #0]
 8008c46:	9307      	str	r3, [sp, #28]
 8008c48:	2200      	movs	r2, #0
 8008c4a:	2312      	movs	r3, #18
 8008c4c:	e7d0      	b.n	8008bf0 <_dtoa_r+0x238>
 8008c4e:	2301      	movs	r3, #1
 8008c50:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008c52:	e7f5      	b.n	8008c40 <_dtoa_r+0x288>
 8008c54:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008c56:	9300      	str	r3, [sp, #0]
 8008c58:	9307      	str	r3, [sp, #28]
 8008c5a:	e7d7      	b.n	8008c0c <_dtoa_r+0x254>
 8008c5c:	3101      	adds	r1, #1
 8008c5e:	0052      	lsls	r2, r2, #1
 8008c60:	e7d8      	b.n	8008c14 <_dtoa_r+0x25c>
 8008c62:	bf00      	nop
 8008c64:	f3af 8000 	nop.w
 8008c68:	636f4361 	.word	0x636f4361
 8008c6c:	3fd287a7 	.word	0x3fd287a7
 8008c70:	8b60c8b3 	.word	0x8b60c8b3
 8008c74:	3fc68a28 	.word	0x3fc68a28
 8008c78:	509f79fb 	.word	0x509f79fb
 8008c7c:	3fd34413 	.word	0x3fd34413
 8008c80:	0800c980 	.word	0x0800c980
 8008c84:	0800c997 	.word	0x0800c997
 8008c88:	7ff00000 	.word	0x7ff00000
 8008c8c:	0800c90f 	.word	0x0800c90f
 8008c90:	3ff80000 	.word	0x3ff80000
 8008c94:	0800ca90 	.word	0x0800ca90
 8008c98:	0800c9ef 	.word	0x0800c9ef
 8008c9c:	0800c97c 	.word	0x0800c97c
 8008ca0:	0800c90e 	.word	0x0800c90e
 8008ca4:	f8db 301c 	ldr.w	r3, [fp, #28]
 8008ca8:	6018      	str	r0, [r3, #0]
 8008caa:	9b07      	ldr	r3, [sp, #28]
 8008cac:	2b0e      	cmp	r3, #14
 8008cae:	f200 80a4 	bhi.w	8008dfa <_dtoa_r+0x442>
 8008cb2:	2c00      	cmp	r4, #0
 8008cb4:	f000 80a1 	beq.w	8008dfa <_dtoa_r+0x442>
 8008cb8:	2f00      	cmp	r7, #0
 8008cba:	dd33      	ble.n	8008d24 <_dtoa_r+0x36c>
 8008cbc:	4bad      	ldr	r3, [pc, #692]	@ (8008f74 <_dtoa_r+0x5bc>)
 8008cbe:	f007 020f 	and.w	r2, r7, #15
 8008cc2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008cc6:	ed93 7b00 	vldr	d7, [r3]
 8008cca:	05f8      	lsls	r0, r7, #23
 8008ccc:	ed8d 7b04 	vstr	d7, [sp, #16]
 8008cd0:	ea4f 1427 	mov.w	r4, r7, asr #4
 8008cd4:	d516      	bpl.n	8008d04 <_dtoa_r+0x34c>
 8008cd6:	4ba8      	ldr	r3, [pc, #672]	@ (8008f78 <_dtoa_r+0x5c0>)
 8008cd8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008cdc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8008ce0:	f7f7 fdbc 	bl	800085c <__aeabi_ddiv>
 8008ce4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008ce8:	f004 040f 	and.w	r4, r4, #15
 8008cec:	2603      	movs	r6, #3
 8008cee:	4da2      	ldr	r5, [pc, #648]	@ (8008f78 <_dtoa_r+0x5c0>)
 8008cf0:	b954      	cbnz	r4, 8008d08 <_dtoa_r+0x350>
 8008cf2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8008cf6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008cfa:	f7f7 fdaf 	bl	800085c <__aeabi_ddiv>
 8008cfe:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008d02:	e028      	b.n	8008d56 <_dtoa_r+0x39e>
 8008d04:	2602      	movs	r6, #2
 8008d06:	e7f2      	b.n	8008cee <_dtoa_r+0x336>
 8008d08:	07e1      	lsls	r1, r4, #31
 8008d0a:	d508      	bpl.n	8008d1e <_dtoa_r+0x366>
 8008d0c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008d10:	e9d5 2300 	ldrd	r2, r3, [r5]
 8008d14:	f7f7 fc78 	bl	8000608 <__aeabi_dmul>
 8008d18:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008d1c:	3601      	adds	r6, #1
 8008d1e:	1064      	asrs	r4, r4, #1
 8008d20:	3508      	adds	r5, #8
 8008d22:	e7e5      	b.n	8008cf0 <_dtoa_r+0x338>
 8008d24:	f000 80d2 	beq.w	8008ecc <_dtoa_r+0x514>
 8008d28:	427c      	negs	r4, r7
 8008d2a:	4b92      	ldr	r3, [pc, #584]	@ (8008f74 <_dtoa_r+0x5bc>)
 8008d2c:	4d92      	ldr	r5, [pc, #584]	@ (8008f78 <_dtoa_r+0x5c0>)
 8008d2e:	f004 020f 	and.w	r2, r4, #15
 8008d32:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008d36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d3a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8008d3e:	f7f7 fc63 	bl	8000608 <__aeabi_dmul>
 8008d42:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008d46:	1124      	asrs	r4, r4, #4
 8008d48:	2300      	movs	r3, #0
 8008d4a:	2602      	movs	r6, #2
 8008d4c:	2c00      	cmp	r4, #0
 8008d4e:	f040 80b2 	bne.w	8008eb6 <_dtoa_r+0x4fe>
 8008d52:	2b00      	cmp	r3, #0
 8008d54:	d1d3      	bne.n	8008cfe <_dtoa_r+0x346>
 8008d56:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8008d58:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8008d5c:	2b00      	cmp	r3, #0
 8008d5e:	f000 80b7 	beq.w	8008ed0 <_dtoa_r+0x518>
 8008d62:	4b86      	ldr	r3, [pc, #536]	@ (8008f7c <_dtoa_r+0x5c4>)
 8008d64:	2200      	movs	r2, #0
 8008d66:	4620      	mov	r0, r4
 8008d68:	4629      	mov	r1, r5
 8008d6a:	f7f7 febf 	bl	8000aec <__aeabi_dcmplt>
 8008d6e:	2800      	cmp	r0, #0
 8008d70:	f000 80ae 	beq.w	8008ed0 <_dtoa_r+0x518>
 8008d74:	9b07      	ldr	r3, [sp, #28]
 8008d76:	2b00      	cmp	r3, #0
 8008d78:	f000 80aa 	beq.w	8008ed0 <_dtoa_r+0x518>
 8008d7c:	9b00      	ldr	r3, [sp, #0]
 8008d7e:	2b00      	cmp	r3, #0
 8008d80:	dd37      	ble.n	8008df2 <_dtoa_r+0x43a>
 8008d82:	1e7b      	subs	r3, r7, #1
 8008d84:	9304      	str	r3, [sp, #16]
 8008d86:	4620      	mov	r0, r4
 8008d88:	4b7d      	ldr	r3, [pc, #500]	@ (8008f80 <_dtoa_r+0x5c8>)
 8008d8a:	2200      	movs	r2, #0
 8008d8c:	4629      	mov	r1, r5
 8008d8e:	f7f7 fc3b 	bl	8000608 <__aeabi_dmul>
 8008d92:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008d96:	9c00      	ldr	r4, [sp, #0]
 8008d98:	3601      	adds	r6, #1
 8008d9a:	4630      	mov	r0, r6
 8008d9c:	f7f7 fbca 	bl	8000534 <__aeabi_i2d>
 8008da0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008da4:	f7f7 fc30 	bl	8000608 <__aeabi_dmul>
 8008da8:	4b76      	ldr	r3, [pc, #472]	@ (8008f84 <_dtoa_r+0x5cc>)
 8008daa:	2200      	movs	r2, #0
 8008dac:	f7f7 fa76 	bl	800029c <__adddf3>
 8008db0:	4605      	mov	r5, r0
 8008db2:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8008db6:	2c00      	cmp	r4, #0
 8008db8:	f040 808d 	bne.w	8008ed6 <_dtoa_r+0x51e>
 8008dbc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008dc0:	4b71      	ldr	r3, [pc, #452]	@ (8008f88 <_dtoa_r+0x5d0>)
 8008dc2:	2200      	movs	r2, #0
 8008dc4:	f7f7 fa68 	bl	8000298 <__aeabi_dsub>
 8008dc8:	4602      	mov	r2, r0
 8008dca:	460b      	mov	r3, r1
 8008dcc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008dd0:	462a      	mov	r2, r5
 8008dd2:	4633      	mov	r3, r6
 8008dd4:	f7f7 fea8 	bl	8000b28 <__aeabi_dcmpgt>
 8008dd8:	2800      	cmp	r0, #0
 8008dda:	f040 828b 	bne.w	80092f4 <_dtoa_r+0x93c>
 8008dde:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008de2:	462a      	mov	r2, r5
 8008de4:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8008de8:	f7f7 fe80 	bl	8000aec <__aeabi_dcmplt>
 8008dec:	2800      	cmp	r0, #0
 8008dee:	f040 8128 	bne.w	8009042 <_dtoa_r+0x68a>
 8008df2:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8008df6:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8008dfa:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8008dfc:	2b00      	cmp	r3, #0
 8008dfe:	f2c0 815a 	blt.w	80090b6 <_dtoa_r+0x6fe>
 8008e02:	2f0e      	cmp	r7, #14
 8008e04:	f300 8157 	bgt.w	80090b6 <_dtoa_r+0x6fe>
 8008e08:	4b5a      	ldr	r3, [pc, #360]	@ (8008f74 <_dtoa_r+0x5bc>)
 8008e0a:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8008e0e:	ed93 7b00 	vldr	d7, [r3]
 8008e12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008e14:	2b00      	cmp	r3, #0
 8008e16:	ed8d 7b00 	vstr	d7, [sp]
 8008e1a:	da03      	bge.n	8008e24 <_dtoa_r+0x46c>
 8008e1c:	9b07      	ldr	r3, [sp, #28]
 8008e1e:	2b00      	cmp	r3, #0
 8008e20:	f340 8101 	ble.w	8009026 <_dtoa_r+0x66e>
 8008e24:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8008e28:	4656      	mov	r6, sl
 8008e2a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008e2e:	4620      	mov	r0, r4
 8008e30:	4629      	mov	r1, r5
 8008e32:	f7f7 fd13 	bl	800085c <__aeabi_ddiv>
 8008e36:	f7f7 fe97 	bl	8000b68 <__aeabi_d2iz>
 8008e3a:	4680      	mov	r8, r0
 8008e3c:	f7f7 fb7a 	bl	8000534 <__aeabi_i2d>
 8008e40:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008e44:	f7f7 fbe0 	bl	8000608 <__aeabi_dmul>
 8008e48:	4602      	mov	r2, r0
 8008e4a:	460b      	mov	r3, r1
 8008e4c:	4620      	mov	r0, r4
 8008e4e:	4629      	mov	r1, r5
 8008e50:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8008e54:	f7f7 fa20 	bl	8000298 <__aeabi_dsub>
 8008e58:	f806 4b01 	strb.w	r4, [r6], #1
 8008e5c:	9d07      	ldr	r5, [sp, #28]
 8008e5e:	eba6 040a 	sub.w	r4, r6, sl
 8008e62:	42a5      	cmp	r5, r4
 8008e64:	4602      	mov	r2, r0
 8008e66:	460b      	mov	r3, r1
 8008e68:	f040 8117 	bne.w	800909a <_dtoa_r+0x6e2>
 8008e6c:	f7f7 fa16 	bl	800029c <__adddf3>
 8008e70:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008e74:	4604      	mov	r4, r0
 8008e76:	460d      	mov	r5, r1
 8008e78:	f7f7 fe56 	bl	8000b28 <__aeabi_dcmpgt>
 8008e7c:	2800      	cmp	r0, #0
 8008e7e:	f040 80f9 	bne.w	8009074 <_dtoa_r+0x6bc>
 8008e82:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008e86:	4620      	mov	r0, r4
 8008e88:	4629      	mov	r1, r5
 8008e8a:	f7f7 fe25 	bl	8000ad8 <__aeabi_dcmpeq>
 8008e8e:	b118      	cbz	r0, 8008e98 <_dtoa_r+0x4e0>
 8008e90:	f018 0f01 	tst.w	r8, #1
 8008e94:	f040 80ee 	bne.w	8009074 <_dtoa_r+0x6bc>
 8008e98:	4649      	mov	r1, r9
 8008e9a:	4658      	mov	r0, fp
 8008e9c:	f000 fbda 	bl	8009654 <_Bfree>
 8008ea0:	2300      	movs	r3, #0
 8008ea2:	7033      	strb	r3, [r6, #0]
 8008ea4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008ea6:	3701      	adds	r7, #1
 8008ea8:	601f      	str	r7, [r3, #0]
 8008eaa:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8008eac:	2b00      	cmp	r3, #0
 8008eae:	f000 831d 	beq.w	80094ec <_dtoa_r+0xb34>
 8008eb2:	601e      	str	r6, [r3, #0]
 8008eb4:	e31a      	b.n	80094ec <_dtoa_r+0xb34>
 8008eb6:	07e2      	lsls	r2, r4, #31
 8008eb8:	d505      	bpl.n	8008ec6 <_dtoa_r+0x50e>
 8008eba:	e9d5 2300 	ldrd	r2, r3, [r5]
 8008ebe:	f7f7 fba3 	bl	8000608 <__aeabi_dmul>
 8008ec2:	3601      	adds	r6, #1
 8008ec4:	2301      	movs	r3, #1
 8008ec6:	1064      	asrs	r4, r4, #1
 8008ec8:	3508      	adds	r5, #8
 8008eca:	e73f      	b.n	8008d4c <_dtoa_r+0x394>
 8008ecc:	2602      	movs	r6, #2
 8008ece:	e742      	b.n	8008d56 <_dtoa_r+0x39e>
 8008ed0:	9c07      	ldr	r4, [sp, #28]
 8008ed2:	9704      	str	r7, [sp, #16]
 8008ed4:	e761      	b.n	8008d9a <_dtoa_r+0x3e2>
 8008ed6:	4b27      	ldr	r3, [pc, #156]	@ (8008f74 <_dtoa_r+0x5bc>)
 8008ed8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8008eda:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8008ede:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8008ee2:	4454      	add	r4, sl
 8008ee4:	2900      	cmp	r1, #0
 8008ee6:	d053      	beq.n	8008f90 <_dtoa_r+0x5d8>
 8008ee8:	4928      	ldr	r1, [pc, #160]	@ (8008f8c <_dtoa_r+0x5d4>)
 8008eea:	2000      	movs	r0, #0
 8008eec:	f7f7 fcb6 	bl	800085c <__aeabi_ddiv>
 8008ef0:	4633      	mov	r3, r6
 8008ef2:	462a      	mov	r2, r5
 8008ef4:	f7f7 f9d0 	bl	8000298 <__aeabi_dsub>
 8008ef8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8008efc:	4656      	mov	r6, sl
 8008efe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008f02:	f7f7 fe31 	bl	8000b68 <__aeabi_d2iz>
 8008f06:	4605      	mov	r5, r0
 8008f08:	f7f7 fb14 	bl	8000534 <__aeabi_i2d>
 8008f0c:	4602      	mov	r2, r0
 8008f0e:	460b      	mov	r3, r1
 8008f10:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008f14:	f7f7 f9c0 	bl	8000298 <__aeabi_dsub>
 8008f18:	3530      	adds	r5, #48	@ 0x30
 8008f1a:	4602      	mov	r2, r0
 8008f1c:	460b      	mov	r3, r1
 8008f1e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008f22:	f806 5b01 	strb.w	r5, [r6], #1
 8008f26:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8008f2a:	f7f7 fddf 	bl	8000aec <__aeabi_dcmplt>
 8008f2e:	2800      	cmp	r0, #0
 8008f30:	d171      	bne.n	8009016 <_dtoa_r+0x65e>
 8008f32:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008f36:	4911      	ldr	r1, [pc, #68]	@ (8008f7c <_dtoa_r+0x5c4>)
 8008f38:	2000      	movs	r0, #0
 8008f3a:	f7f7 f9ad 	bl	8000298 <__aeabi_dsub>
 8008f3e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8008f42:	f7f7 fdd3 	bl	8000aec <__aeabi_dcmplt>
 8008f46:	2800      	cmp	r0, #0
 8008f48:	f040 8095 	bne.w	8009076 <_dtoa_r+0x6be>
 8008f4c:	42a6      	cmp	r6, r4
 8008f4e:	f43f af50 	beq.w	8008df2 <_dtoa_r+0x43a>
 8008f52:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8008f56:	4b0a      	ldr	r3, [pc, #40]	@ (8008f80 <_dtoa_r+0x5c8>)
 8008f58:	2200      	movs	r2, #0
 8008f5a:	f7f7 fb55 	bl	8000608 <__aeabi_dmul>
 8008f5e:	4b08      	ldr	r3, [pc, #32]	@ (8008f80 <_dtoa_r+0x5c8>)
 8008f60:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8008f64:	2200      	movs	r2, #0
 8008f66:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008f6a:	f7f7 fb4d 	bl	8000608 <__aeabi_dmul>
 8008f6e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008f72:	e7c4      	b.n	8008efe <_dtoa_r+0x546>
 8008f74:	0800ca90 	.word	0x0800ca90
 8008f78:	0800ca68 	.word	0x0800ca68
 8008f7c:	3ff00000 	.word	0x3ff00000
 8008f80:	40240000 	.word	0x40240000
 8008f84:	401c0000 	.word	0x401c0000
 8008f88:	40140000 	.word	0x40140000
 8008f8c:	3fe00000 	.word	0x3fe00000
 8008f90:	4631      	mov	r1, r6
 8008f92:	4628      	mov	r0, r5
 8008f94:	f7f7 fb38 	bl	8000608 <__aeabi_dmul>
 8008f98:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8008f9c:	9415      	str	r4, [sp, #84]	@ 0x54
 8008f9e:	4656      	mov	r6, sl
 8008fa0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008fa4:	f7f7 fde0 	bl	8000b68 <__aeabi_d2iz>
 8008fa8:	4605      	mov	r5, r0
 8008faa:	f7f7 fac3 	bl	8000534 <__aeabi_i2d>
 8008fae:	4602      	mov	r2, r0
 8008fb0:	460b      	mov	r3, r1
 8008fb2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008fb6:	f7f7 f96f 	bl	8000298 <__aeabi_dsub>
 8008fba:	3530      	adds	r5, #48	@ 0x30
 8008fbc:	f806 5b01 	strb.w	r5, [r6], #1
 8008fc0:	4602      	mov	r2, r0
 8008fc2:	460b      	mov	r3, r1
 8008fc4:	42a6      	cmp	r6, r4
 8008fc6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008fca:	f04f 0200 	mov.w	r2, #0
 8008fce:	d124      	bne.n	800901a <_dtoa_r+0x662>
 8008fd0:	4bac      	ldr	r3, [pc, #688]	@ (8009284 <_dtoa_r+0x8cc>)
 8008fd2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8008fd6:	f7f7 f961 	bl	800029c <__adddf3>
 8008fda:	4602      	mov	r2, r0
 8008fdc:	460b      	mov	r3, r1
 8008fde:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008fe2:	f7f7 fda1 	bl	8000b28 <__aeabi_dcmpgt>
 8008fe6:	2800      	cmp	r0, #0
 8008fe8:	d145      	bne.n	8009076 <_dtoa_r+0x6be>
 8008fea:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8008fee:	49a5      	ldr	r1, [pc, #660]	@ (8009284 <_dtoa_r+0x8cc>)
 8008ff0:	2000      	movs	r0, #0
 8008ff2:	f7f7 f951 	bl	8000298 <__aeabi_dsub>
 8008ff6:	4602      	mov	r2, r0
 8008ff8:	460b      	mov	r3, r1
 8008ffa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008ffe:	f7f7 fd75 	bl	8000aec <__aeabi_dcmplt>
 8009002:	2800      	cmp	r0, #0
 8009004:	f43f aef5 	beq.w	8008df2 <_dtoa_r+0x43a>
 8009008:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800900a:	1e73      	subs	r3, r6, #1
 800900c:	9315      	str	r3, [sp, #84]	@ 0x54
 800900e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8009012:	2b30      	cmp	r3, #48	@ 0x30
 8009014:	d0f8      	beq.n	8009008 <_dtoa_r+0x650>
 8009016:	9f04      	ldr	r7, [sp, #16]
 8009018:	e73e      	b.n	8008e98 <_dtoa_r+0x4e0>
 800901a:	4b9b      	ldr	r3, [pc, #620]	@ (8009288 <_dtoa_r+0x8d0>)
 800901c:	f7f7 faf4 	bl	8000608 <__aeabi_dmul>
 8009020:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009024:	e7bc      	b.n	8008fa0 <_dtoa_r+0x5e8>
 8009026:	d10c      	bne.n	8009042 <_dtoa_r+0x68a>
 8009028:	4b98      	ldr	r3, [pc, #608]	@ (800928c <_dtoa_r+0x8d4>)
 800902a:	2200      	movs	r2, #0
 800902c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8009030:	f7f7 faea 	bl	8000608 <__aeabi_dmul>
 8009034:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8009038:	f7f7 fd6c 	bl	8000b14 <__aeabi_dcmpge>
 800903c:	2800      	cmp	r0, #0
 800903e:	f000 8157 	beq.w	80092f0 <_dtoa_r+0x938>
 8009042:	2400      	movs	r4, #0
 8009044:	4625      	mov	r5, r4
 8009046:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009048:	43db      	mvns	r3, r3
 800904a:	9304      	str	r3, [sp, #16]
 800904c:	4656      	mov	r6, sl
 800904e:	2700      	movs	r7, #0
 8009050:	4621      	mov	r1, r4
 8009052:	4658      	mov	r0, fp
 8009054:	f000 fafe 	bl	8009654 <_Bfree>
 8009058:	2d00      	cmp	r5, #0
 800905a:	d0dc      	beq.n	8009016 <_dtoa_r+0x65e>
 800905c:	b12f      	cbz	r7, 800906a <_dtoa_r+0x6b2>
 800905e:	42af      	cmp	r7, r5
 8009060:	d003      	beq.n	800906a <_dtoa_r+0x6b2>
 8009062:	4639      	mov	r1, r7
 8009064:	4658      	mov	r0, fp
 8009066:	f000 faf5 	bl	8009654 <_Bfree>
 800906a:	4629      	mov	r1, r5
 800906c:	4658      	mov	r0, fp
 800906e:	f000 faf1 	bl	8009654 <_Bfree>
 8009072:	e7d0      	b.n	8009016 <_dtoa_r+0x65e>
 8009074:	9704      	str	r7, [sp, #16]
 8009076:	4633      	mov	r3, r6
 8009078:	461e      	mov	r6, r3
 800907a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800907e:	2a39      	cmp	r2, #57	@ 0x39
 8009080:	d107      	bne.n	8009092 <_dtoa_r+0x6da>
 8009082:	459a      	cmp	sl, r3
 8009084:	d1f8      	bne.n	8009078 <_dtoa_r+0x6c0>
 8009086:	9a04      	ldr	r2, [sp, #16]
 8009088:	3201      	adds	r2, #1
 800908a:	9204      	str	r2, [sp, #16]
 800908c:	2230      	movs	r2, #48	@ 0x30
 800908e:	f88a 2000 	strb.w	r2, [sl]
 8009092:	781a      	ldrb	r2, [r3, #0]
 8009094:	3201      	adds	r2, #1
 8009096:	701a      	strb	r2, [r3, #0]
 8009098:	e7bd      	b.n	8009016 <_dtoa_r+0x65e>
 800909a:	4b7b      	ldr	r3, [pc, #492]	@ (8009288 <_dtoa_r+0x8d0>)
 800909c:	2200      	movs	r2, #0
 800909e:	f7f7 fab3 	bl	8000608 <__aeabi_dmul>
 80090a2:	2200      	movs	r2, #0
 80090a4:	2300      	movs	r3, #0
 80090a6:	4604      	mov	r4, r0
 80090a8:	460d      	mov	r5, r1
 80090aa:	f7f7 fd15 	bl	8000ad8 <__aeabi_dcmpeq>
 80090ae:	2800      	cmp	r0, #0
 80090b0:	f43f aebb 	beq.w	8008e2a <_dtoa_r+0x472>
 80090b4:	e6f0      	b.n	8008e98 <_dtoa_r+0x4e0>
 80090b6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80090b8:	2a00      	cmp	r2, #0
 80090ba:	f000 80db 	beq.w	8009274 <_dtoa_r+0x8bc>
 80090be:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80090c0:	2a01      	cmp	r2, #1
 80090c2:	f300 80bf 	bgt.w	8009244 <_dtoa_r+0x88c>
 80090c6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80090c8:	2a00      	cmp	r2, #0
 80090ca:	f000 80b7 	beq.w	800923c <_dtoa_r+0x884>
 80090ce:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 80090d2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80090d4:	4646      	mov	r6, r8
 80090d6:	9a08      	ldr	r2, [sp, #32]
 80090d8:	2101      	movs	r1, #1
 80090da:	441a      	add	r2, r3
 80090dc:	4658      	mov	r0, fp
 80090de:	4498      	add	r8, r3
 80090e0:	9208      	str	r2, [sp, #32]
 80090e2:	f000 fbb5 	bl	8009850 <__i2b>
 80090e6:	4605      	mov	r5, r0
 80090e8:	b15e      	cbz	r6, 8009102 <_dtoa_r+0x74a>
 80090ea:	9b08      	ldr	r3, [sp, #32]
 80090ec:	2b00      	cmp	r3, #0
 80090ee:	dd08      	ble.n	8009102 <_dtoa_r+0x74a>
 80090f0:	42b3      	cmp	r3, r6
 80090f2:	9a08      	ldr	r2, [sp, #32]
 80090f4:	bfa8      	it	ge
 80090f6:	4633      	movge	r3, r6
 80090f8:	eba8 0803 	sub.w	r8, r8, r3
 80090fc:	1af6      	subs	r6, r6, r3
 80090fe:	1ad3      	subs	r3, r2, r3
 8009100:	9308      	str	r3, [sp, #32]
 8009102:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009104:	b1f3      	cbz	r3, 8009144 <_dtoa_r+0x78c>
 8009106:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009108:	2b00      	cmp	r3, #0
 800910a:	f000 80b7 	beq.w	800927c <_dtoa_r+0x8c4>
 800910e:	b18c      	cbz	r4, 8009134 <_dtoa_r+0x77c>
 8009110:	4629      	mov	r1, r5
 8009112:	4622      	mov	r2, r4
 8009114:	4658      	mov	r0, fp
 8009116:	f000 fc5b 	bl	80099d0 <__pow5mult>
 800911a:	464a      	mov	r2, r9
 800911c:	4601      	mov	r1, r0
 800911e:	4605      	mov	r5, r0
 8009120:	4658      	mov	r0, fp
 8009122:	f000 fbab 	bl	800987c <__multiply>
 8009126:	4649      	mov	r1, r9
 8009128:	9004      	str	r0, [sp, #16]
 800912a:	4658      	mov	r0, fp
 800912c:	f000 fa92 	bl	8009654 <_Bfree>
 8009130:	9b04      	ldr	r3, [sp, #16]
 8009132:	4699      	mov	r9, r3
 8009134:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009136:	1b1a      	subs	r2, r3, r4
 8009138:	d004      	beq.n	8009144 <_dtoa_r+0x78c>
 800913a:	4649      	mov	r1, r9
 800913c:	4658      	mov	r0, fp
 800913e:	f000 fc47 	bl	80099d0 <__pow5mult>
 8009142:	4681      	mov	r9, r0
 8009144:	2101      	movs	r1, #1
 8009146:	4658      	mov	r0, fp
 8009148:	f000 fb82 	bl	8009850 <__i2b>
 800914c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800914e:	4604      	mov	r4, r0
 8009150:	2b00      	cmp	r3, #0
 8009152:	f000 81cf 	beq.w	80094f4 <_dtoa_r+0xb3c>
 8009156:	461a      	mov	r2, r3
 8009158:	4601      	mov	r1, r0
 800915a:	4658      	mov	r0, fp
 800915c:	f000 fc38 	bl	80099d0 <__pow5mult>
 8009160:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009162:	2b01      	cmp	r3, #1
 8009164:	4604      	mov	r4, r0
 8009166:	f300 8095 	bgt.w	8009294 <_dtoa_r+0x8dc>
 800916a:	9b02      	ldr	r3, [sp, #8]
 800916c:	2b00      	cmp	r3, #0
 800916e:	f040 8087 	bne.w	8009280 <_dtoa_r+0x8c8>
 8009172:	9b03      	ldr	r3, [sp, #12]
 8009174:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8009178:	2b00      	cmp	r3, #0
 800917a:	f040 8089 	bne.w	8009290 <_dtoa_r+0x8d8>
 800917e:	9b03      	ldr	r3, [sp, #12]
 8009180:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8009184:	0d1b      	lsrs	r3, r3, #20
 8009186:	051b      	lsls	r3, r3, #20
 8009188:	b12b      	cbz	r3, 8009196 <_dtoa_r+0x7de>
 800918a:	9b08      	ldr	r3, [sp, #32]
 800918c:	3301      	adds	r3, #1
 800918e:	9308      	str	r3, [sp, #32]
 8009190:	f108 0801 	add.w	r8, r8, #1
 8009194:	2301      	movs	r3, #1
 8009196:	930a      	str	r3, [sp, #40]	@ 0x28
 8009198:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800919a:	2b00      	cmp	r3, #0
 800919c:	f000 81b0 	beq.w	8009500 <_dtoa_r+0xb48>
 80091a0:	6923      	ldr	r3, [r4, #16]
 80091a2:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80091a6:	6918      	ldr	r0, [r3, #16]
 80091a8:	f000 fb06 	bl	80097b8 <__hi0bits>
 80091ac:	f1c0 0020 	rsb	r0, r0, #32
 80091b0:	9b08      	ldr	r3, [sp, #32]
 80091b2:	4418      	add	r0, r3
 80091b4:	f010 001f 	ands.w	r0, r0, #31
 80091b8:	d077      	beq.n	80092aa <_dtoa_r+0x8f2>
 80091ba:	f1c0 0320 	rsb	r3, r0, #32
 80091be:	2b04      	cmp	r3, #4
 80091c0:	dd6b      	ble.n	800929a <_dtoa_r+0x8e2>
 80091c2:	9b08      	ldr	r3, [sp, #32]
 80091c4:	f1c0 001c 	rsb	r0, r0, #28
 80091c8:	4403      	add	r3, r0
 80091ca:	4480      	add	r8, r0
 80091cc:	4406      	add	r6, r0
 80091ce:	9308      	str	r3, [sp, #32]
 80091d0:	f1b8 0f00 	cmp.w	r8, #0
 80091d4:	dd05      	ble.n	80091e2 <_dtoa_r+0x82a>
 80091d6:	4649      	mov	r1, r9
 80091d8:	4642      	mov	r2, r8
 80091da:	4658      	mov	r0, fp
 80091dc:	f000 fc52 	bl	8009a84 <__lshift>
 80091e0:	4681      	mov	r9, r0
 80091e2:	9b08      	ldr	r3, [sp, #32]
 80091e4:	2b00      	cmp	r3, #0
 80091e6:	dd05      	ble.n	80091f4 <_dtoa_r+0x83c>
 80091e8:	4621      	mov	r1, r4
 80091ea:	461a      	mov	r2, r3
 80091ec:	4658      	mov	r0, fp
 80091ee:	f000 fc49 	bl	8009a84 <__lshift>
 80091f2:	4604      	mov	r4, r0
 80091f4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80091f6:	2b00      	cmp	r3, #0
 80091f8:	d059      	beq.n	80092ae <_dtoa_r+0x8f6>
 80091fa:	4621      	mov	r1, r4
 80091fc:	4648      	mov	r0, r9
 80091fe:	f000 fcad 	bl	8009b5c <__mcmp>
 8009202:	2800      	cmp	r0, #0
 8009204:	da53      	bge.n	80092ae <_dtoa_r+0x8f6>
 8009206:	1e7b      	subs	r3, r7, #1
 8009208:	9304      	str	r3, [sp, #16]
 800920a:	4649      	mov	r1, r9
 800920c:	2300      	movs	r3, #0
 800920e:	220a      	movs	r2, #10
 8009210:	4658      	mov	r0, fp
 8009212:	f000 fa41 	bl	8009698 <__multadd>
 8009216:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009218:	4681      	mov	r9, r0
 800921a:	2b00      	cmp	r3, #0
 800921c:	f000 8172 	beq.w	8009504 <_dtoa_r+0xb4c>
 8009220:	2300      	movs	r3, #0
 8009222:	4629      	mov	r1, r5
 8009224:	220a      	movs	r2, #10
 8009226:	4658      	mov	r0, fp
 8009228:	f000 fa36 	bl	8009698 <__multadd>
 800922c:	9b00      	ldr	r3, [sp, #0]
 800922e:	2b00      	cmp	r3, #0
 8009230:	4605      	mov	r5, r0
 8009232:	dc67      	bgt.n	8009304 <_dtoa_r+0x94c>
 8009234:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009236:	2b02      	cmp	r3, #2
 8009238:	dc41      	bgt.n	80092be <_dtoa_r+0x906>
 800923a:	e063      	b.n	8009304 <_dtoa_r+0x94c>
 800923c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800923e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8009242:	e746      	b.n	80090d2 <_dtoa_r+0x71a>
 8009244:	9b07      	ldr	r3, [sp, #28]
 8009246:	1e5c      	subs	r4, r3, #1
 8009248:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800924a:	42a3      	cmp	r3, r4
 800924c:	bfbf      	itttt	lt
 800924e:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8009250:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8009252:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8009254:	1ae3      	sublt	r3, r4, r3
 8009256:	bfb4      	ite	lt
 8009258:	18d2      	addlt	r2, r2, r3
 800925a:	1b1c      	subge	r4, r3, r4
 800925c:	9b07      	ldr	r3, [sp, #28]
 800925e:	bfbc      	itt	lt
 8009260:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8009262:	2400      	movlt	r4, #0
 8009264:	2b00      	cmp	r3, #0
 8009266:	bfb5      	itete	lt
 8009268:	eba8 0603 	sublt.w	r6, r8, r3
 800926c:	9b07      	ldrge	r3, [sp, #28]
 800926e:	2300      	movlt	r3, #0
 8009270:	4646      	movge	r6, r8
 8009272:	e730      	b.n	80090d6 <_dtoa_r+0x71e>
 8009274:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8009276:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8009278:	4646      	mov	r6, r8
 800927a:	e735      	b.n	80090e8 <_dtoa_r+0x730>
 800927c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800927e:	e75c      	b.n	800913a <_dtoa_r+0x782>
 8009280:	2300      	movs	r3, #0
 8009282:	e788      	b.n	8009196 <_dtoa_r+0x7de>
 8009284:	3fe00000 	.word	0x3fe00000
 8009288:	40240000 	.word	0x40240000
 800928c:	40140000 	.word	0x40140000
 8009290:	9b02      	ldr	r3, [sp, #8]
 8009292:	e780      	b.n	8009196 <_dtoa_r+0x7de>
 8009294:	2300      	movs	r3, #0
 8009296:	930a      	str	r3, [sp, #40]	@ 0x28
 8009298:	e782      	b.n	80091a0 <_dtoa_r+0x7e8>
 800929a:	d099      	beq.n	80091d0 <_dtoa_r+0x818>
 800929c:	9a08      	ldr	r2, [sp, #32]
 800929e:	331c      	adds	r3, #28
 80092a0:	441a      	add	r2, r3
 80092a2:	4498      	add	r8, r3
 80092a4:	441e      	add	r6, r3
 80092a6:	9208      	str	r2, [sp, #32]
 80092a8:	e792      	b.n	80091d0 <_dtoa_r+0x818>
 80092aa:	4603      	mov	r3, r0
 80092ac:	e7f6      	b.n	800929c <_dtoa_r+0x8e4>
 80092ae:	9b07      	ldr	r3, [sp, #28]
 80092b0:	9704      	str	r7, [sp, #16]
 80092b2:	2b00      	cmp	r3, #0
 80092b4:	dc20      	bgt.n	80092f8 <_dtoa_r+0x940>
 80092b6:	9300      	str	r3, [sp, #0]
 80092b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80092ba:	2b02      	cmp	r3, #2
 80092bc:	dd1e      	ble.n	80092fc <_dtoa_r+0x944>
 80092be:	9b00      	ldr	r3, [sp, #0]
 80092c0:	2b00      	cmp	r3, #0
 80092c2:	f47f aec0 	bne.w	8009046 <_dtoa_r+0x68e>
 80092c6:	4621      	mov	r1, r4
 80092c8:	2205      	movs	r2, #5
 80092ca:	4658      	mov	r0, fp
 80092cc:	f000 f9e4 	bl	8009698 <__multadd>
 80092d0:	4601      	mov	r1, r0
 80092d2:	4604      	mov	r4, r0
 80092d4:	4648      	mov	r0, r9
 80092d6:	f000 fc41 	bl	8009b5c <__mcmp>
 80092da:	2800      	cmp	r0, #0
 80092dc:	f77f aeb3 	ble.w	8009046 <_dtoa_r+0x68e>
 80092e0:	4656      	mov	r6, sl
 80092e2:	2331      	movs	r3, #49	@ 0x31
 80092e4:	f806 3b01 	strb.w	r3, [r6], #1
 80092e8:	9b04      	ldr	r3, [sp, #16]
 80092ea:	3301      	adds	r3, #1
 80092ec:	9304      	str	r3, [sp, #16]
 80092ee:	e6ae      	b.n	800904e <_dtoa_r+0x696>
 80092f0:	9c07      	ldr	r4, [sp, #28]
 80092f2:	9704      	str	r7, [sp, #16]
 80092f4:	4625      	mov	r5, r4
 80092f6:	e7f3      	b.n	80092e0 <_dtoa_r+0x928>
 80092f8:	9b07      	ldr	r3, [sp, #28]
 80092fa:	9300      	str	r3, [sp, #0]
 80092fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80092fe:	2b00      	cmp	r3, #0
 8009300:	f000 8104 	beq.w	800950c <_dtoa_r+0xb54>
 8009304:	2e00      	cmp	r6, #0
 8009306:	dd05      	ble.n	8009314 <_dtoa_r+0x95c>
 8009308:	4629      	mov	r1, r5
 800930a:	4632      	mov	r2, r6
 800930c:	4658      	mov	r0, fp
 800930e:	f000 fbb9 	bl	8009a84 <__lshift>
 8009312:	4605      	mov	r5, r0
 8009314:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009316:	2b00      	cmp	r3, #0
 8009318:	d05a      	beq.n	80093d0 <_dtoa_r+0xa18>
 800931a:	6869      	ldr	r1, [r5, #4]
 800931c:	4658      	mov	r0, fp
 800931e:	f000 f959 	bl	80095d4 <_Balloc>
 8009322:	4606      	mov	r6, r0
 8009324:	b928      	cbnz	r0, 8009332 <_dtoa_r+0x97a>
 8009326:	4b84      	ldr	r3, [pc, #528]	@ (8009538 <_dtoa_r+0xb80>)
 8009328:	4602      	mov	r2, r0
 800932a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800932e:	f7ff bb5a 	b.w	80089e6 <_dtoa_r+0x2e>
 8009332:	692a      	ldr	r2, [r5, #16]
 8009334:	3202      	adds	r2, #2
 8009336:	0092      	lsls	r2, r2, #2
 8009338:	f105 010c 	add.w	r1, r5, #12
 800933c:	300c      	adds	r0, #12
 800933e:	f7ff fa7e 	bl	800883e <memcpy>
 8009342:	2201      	movs	r2, #1
 8009344:	4631      	mov	r1, r6
 8009346:	4658      	mov	r0, fp
 8009348:	f000 fb9c 	bl	8009a84 <__lshift>
 800934c:	f10a 0301 	add.w	r3, sl, #1
 8009350:	9307      	str	r3, [sp, #28]
 8009352:	9b00      	ldr	r3, [sp, #0]
 8009354:	4453      	add	r3, sl
 8009356:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009358:	9b02      	ldr	r3, [sp, #8]
 800935a:	f003 0301 	and.w	r3, r3, #1
 800935e:	462f      	mov	r7, r5
 8009360:	930a      	str	r3, [sp, #40]	@ 0x28
 8009362:	4605      	mov	r5, r0
 8009364:	9b07      	ldr	r3, [sp, #28]
 8009366:	4621      	mov	r1, r4
 8009368:	3b01      	subs	r3, #1
 800936a:	4648      	mov	r0, r9
 800936c:	9300      	str	r3, [sp, #0]
 800936e:	f7ff fa99 	bl	80088a4 <quorem>
 8009372:	4639      	mov	r1, r7
 8009374:	9002      	str	r0, [sp, #8]
 8009376:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800937a:	4648      	mov	r0, r9
 800937c:	f000 fbee 	bl	8009b5c <__mcmp>
 8009380:	462a      	mov	r2, r5
 8009382:	9008      	str	r0, [sp, #32]
 8009384:	4621      	mov	r1, r4
 8009386:	4658      	mov	r0, fp
 8009388:	f000 fc04 	bl	8009b94 <__mdiff>
 800938c:	68c2      	ldr	r2, [r0, #12]
 800938e:	4606      	mov	r6, r0
 8009390:	bb02      	cbnz	r2, 80093d4 <_dtoa_r+0xa1c>
 8009392:	4601      	mov	r1, r0
 8009394:	4648      	mov	r0, r9
 8009396:	f000 fbe1 	bl	8009b5c <__mcmp>
 800939a:	4602      	mov	r2, r0
 800939c:	4631      	mov	r1, r6
 800939e:	4658      	mov	r0, fp
 80093a0:	920e      	str	r2, [sp, #56]	@ 0x38
 80093a2:	f000 f957 	bl	8009654 <_Bfree>
 80093a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80093a8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80093aa:	9e07      	ldr	r6, [sp, #28]
 80093ac:	ea43 0102 	orr.w	r1, r3, r2
 80093b0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80093b2:	4319      	orrs	r1, r3
 80093b4:	d110      	bne.n	80093d8 <_dtoa_r+0xa20>
 80093b6:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80093ba:	d029      	beq.n	8009410 <_dtoa_r+0xa58>
 80093bc:	9b08      	ldr	r3, [sp, #32]
 80093be:	2b00      	cmp	r3, #0
 80093c0:	dd02      	ble.n	80093c8 <_dtoa_r+0xa10>
 80093c2:	9b02      	ldr	r3, [sp, #8]
 80093c4:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 80093c8:	9b00      	ldr	r3, [sp, #0]
 80093ca:	f883 8000 	strb.w	r8, [r3]
 80093ce:	e63f      	b.n	8009050 <_dtoa_r+0x698>
 80093d0:	4628      	mov	r0, r5
 80093d2:	e7bb      	b.n	800934c <_dtoa_r+0x994>
 80093d4:	2201      	movs	r2, #1
 80093d6:	e7e1      	b.n	800939c <_dtoa_r+0x9e4>
 80093d8:	9b08      	ldr	r3, [sp, #32]
 80093da:	2b00      	cmp	r3, #0
 80093dc:	db04      	blt.n	80093e8 <_dtoa_r+0xa30>
 80093de:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80093e0:	430b      	orrs	r3, r1
 80093e2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80093e4:	430b      	orrs	r3, r1
 80093e6:	d120      	bne.n	800942a <_dtoa_r+0xa72>
 80093e8:	2a00      	cmp	r2, #0
 80093ea:	dded      	ble.n	80093c8 <_dtoa_r+0xa10>
 80093ec:	4649      	mov	r1, r9
 80093ee:	2201      	movs	r2, #1
 80093f0:	4658      	mov	r0, fp
 80093f2:	f000 fb47 	bl	8009a84 <__lshift>
 80093f6:	4621      	mov	r1, r4
 80093f8:	4681      	mov	r9, r0
 80093fa:	f000 fbaf 	bl	8009b5c <__mcmp>
 80093fe:	2800      	cmp	r0, #0
 8009400:	dc03      	bgt.n	800940a <_dtoa_r+0xa52>
 8009402:	d1e1      	bne.n	80093c8 <_dtoa_r+0xa10>
 8009404:	f018 0f01 	tst.w	r8, #1
 8009408:	d0de      	beq.n	80093c8 <_dtoa_r+0xa10>
 800940a:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800940e:	d1d8      	bne.n	80093c2 <_dtoa_r+0xa0a>
 8009410:	9a00      	ldr	r2, [sp, #0]
 8009412:	2339      	movs	r3, #57	@ 0x39
 8009414:	7013      	strb	r3, [r2, #0]
 8009416:	4633      	mov	r3, r6
 8009418:	461e      	mov	r6, r3
 800941a:	3b01      	subs	r3, #1
 800941c:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8009420:	2a39      	cmp	r2, #57	@ 0x39
 8009422:	d052      	beq.n	80094ca <_dtoa_r+0xb12>
 8009424:	3201      	adds	r2, #1
 8009426:	701a      	strb	r2, [r3, #0]
 8009428:	e612      	b.n	8009050 <_dtoa_r+0x698>
 800942a:	2a00      	cmp	r2, #0
 800942c:	dd07      	ble.n	800943e <_dtoa_r+0xa86>
 800942e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8009432:	d0ed      	beq.n	8009410 <_dtoa_r+0xa58>
 8009434:	9a00      	ldr	r2, [sp, #0]
 8009436:	f108 0301 	add.w	r3, r8, #1
 800943a:	7013      	strb	r3, [r2, #0]
 800943c:	e608      	b.n	8009050 <_dtoa_r+0x698>
 800943e:	9b07      	ldr	r3, [sp, #28]
 8009440:	9a07      	ldr	r2, [sp, #28]
 8009442:	f803 8c01 	strb.w	r8, [r3, #-1]
 8009446:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009448:	4293      	cmp	r3, r2
 800944a:	d028      	beq.n	800949e <_dtoa_r+0xae6>
 800944c:	4649      	mov	r1, r9
 800944e:	2300      	movs	r3, #0
 8009450:	220a      	movs	r2, #10
 8009452:	4658      	mov	r0, fp
 8009454:	f000 f920 	bl	8009698 <__multadd>
 8009458:	42af      	cmp	r7, r5
 800945a:	4681      	mov	r9, r0
 800945c:	f04f 0300 	mov.w	r3, #0
 8009460:	f04f 020a 	mov.w	r2, #10
 8009464:	4639      	mov	r1, r7
 8009466:	4658      	mov	r0, fp
 8009468:	d107      	bne.n	800947a <_dtoa_r+0xac2>
 800946a:	f000 f915 	bl	8009698 <__multadd>
 800946e:	4607      	mov	r7, r0
 8009470:	4605      	mov	r5, r0
 8009472:	9b07      	ldr	r3, [sp, #28]
 8009474:	3301      	adds	r3, #1
 8009476:	9307      	str	r3, [sp, #28]
 8009478:	e774      	b.n	8009364 <_dtoa_r+0x9ac>
 800947a:	f000 f90d 	bl	8009698 <__multadd>
 800947e:	4629      	mov	r1, r5
 8009480:	4607      	mov	r7, r0
 8009482:	2300      	movs	r3, #0
 8009484:	220a      	movs	r2, #10
 8009486:	4658      	mov	r0, fp
 8009488:	f000 f906 	bl	8009698 <__multadd>
 800948c:	4605      	mov	r5, r0
 800948e:	e7f0      	b.n	8009472 <_dtoa_r+0xaba>
 8009490:	9b00      	ldr	r3, [sp, #0]
 8009492:	2b00      	cmp	r3, #0
 8009494:	bfcc      	ite	gt
 8009496:	461e      	movgt	r6, r3
 8009498:	2601      	movle	r6, #1
 800949a:	4456      	add	r6, sl
 800949c:	2700      	movs	r7, #0
 800949e:	4649      	mov	r1, r9
 80094a0:	2201      	movs	r2, #1
 80094a2:	4658      	mov	r0, fp
 80094a4:	f000 faee 	bl	8009a84 <__lshift>
 80094a8:	4621      	mov	r1, r4
 80094aa:	4681      	mov	r9, r0
 80094ac:	f000 fb56 	bl	8009b5c <__mcmp>
 80094b0:	2800      	cmp	r0, #0
 80094b2:	dcb0      	bgt.n	8009416 <_dtoa_r+0xa5e>
 80094b4:	d102      	bne.n	80094bc <_dtoa_r+0xb04>
 80094b6:	f018 0f01 	tst.w	r8, #1
 80094ba:	d1ac      	bne.n	8009416 <_dtoa_r+0xa5e>
 80094bc:	4633      	mov	r3, r6
 80094be:	461e      	mov	r6, r3
 80094c0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80094c4:	2a30      	cmp	r2, #48	@ 0x30
 80094c6:	d0fa      	beq.n	80094be <_dtoa_r+0xb06>
 80094c8:	e5c2      	b.n	8009050 <_dtoa_r+0x698>
 80094ca:	459a      	cmp	sl, r3
 80094cc:	d1a4      	bne.n	8009418 <_dtoa_r+0xa60>
 80094ce:	9b04      	ldr	r3, [sp, #16]
 80094d0:	3301      	adds	r3, #1
 80094d2:	9304      	str	r3, [sp, #16]
 80094d4:	2331      	movs	r3, #49	@ 0x31
 80094d6:	f88a 3000 	strb.w	r3, [sl]
 80094da:	e5b9      	b.n	8009050 <_dtoa_r+0x698>
 80094dc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80094de:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800953c <_dtoa_r+0xb84>
 80094e2:	b11b      	cbz	r3, 80094ec <_dtoa_r+0xb34>
 80094e4:	f10a 0308 	add.w	r3, sl, #8
 80094e8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80094ea:	6013      	str	r3, [r2, #0]
 80094ec:	4650      	mov	r0, sl
 80094ee:	b019      	add	sp, #100	@ 0x64
 80094f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80094f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80094f6:	2b01      	cmp	r3, #1
 80094f8:	f77f ae37 	ble.w	800916a <_dtoa_r+0x7b2>
 80094fc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80094fe:	930a      	str	r3, [sp, #40]	@ 0x28
 8009500:	2001      	movs	r0, #1
 8009502:	e655      	b.n	80091b0 <_dtoa_r+0x7f8>
 8009504:	9b00      	ldr	r3, [sp, #0]
 8009506:	2b00      	cmp	r3, #0
 8009508:	f77f aed6 	ble.w	80092b8 <_dtoa_r+0x900>
 800950c:	4656      	mov	r6, sl
 800950e:	4621      	mov	r1, r4
 8009510:	4648      	mov	r0, r9
 8009512:	f7ff f9c7 	bl	80088a4 <quorem>
 8009516:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800951a:	f806 8b01 	strb.w	r8, [r6], #1
 800951e:	9b00      	ldr	r3, [sp, #0]
 8009520:	eba6 020a 	sub.w	r2, r6, sl
 8009524:	4293      	cmp	r3, r2
 8009526:	ddb3      	ble.n	8009490 <_dtoa_r+0xad8>
 8009528:	4649      	mov	r1, r9
 800952a:	2300      	movs	r3, #0
 800952c:	220a      	movs	r2, #10
 800952e:	4658      	mov	r0, fp
 8009530:	f000 f8b2 	bl	8009698 <__multadd>
 8009534:	4681      	mov	r9, r0
 8009536:	e7ea      	b.n	800950e <_dtoa_r+0xb56>
 8009538:	0800c9ef 	.word	0x0800c9ef
 800953c:	0800c973 	.word	0x0800c973

08009540 <_free_r>:
 8009540:	b538      	push	{r3, r4, r5, lr}
 8009542:	4605      	mov	r5, r0
 8009544:	2900      	cmp	r1, #0
 8009546:	d041      	beq.n	80095cc <_free_r+0x8c>
 8009548:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800954c:	1f0c      	subs	r4, r1, #4
 800954e:	2b00      	cmp	r3, #0
 8009550:	bfb8      	it	lt
 8009552:	18e4      	addlt	r4, r4, r3
 8009554:	f7fe f854 	bl	8007600 <__malloc_lock>
 8009558:	4a1d      	ldr	r2, [pc, #116]	@ (80095d0 <_free_r+0x90>)
 800955a:	6813      	ldr	r3, [r2, #0]
 800955c:	b933      	cbnz	r3, 800956c <_free_r+0x2c>
 800955e:	6063      	str	r3, [r4, #4]
 8009560:	6014      	str	r4, [r2, #0]
 8009562:	4628      	mov	r0, r5
 8009564:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009568:	f7fe b850 	b.w	800760c <__malloc_unlock>
 800956c:	42a3      	cmp	r3, r4
 800956e:	d908      	bls.n	8009582 <_free_r+0x42>
 8009570:	6820      	ldr	r0, [r4, #0]
 8009572:	1821      	adds	r1, r4, r0
 8009574:	428b      	cmp	r3, r1
 8009576:	bf01      	itttt	eq
 8009578:	6819      	ldreq	r1, [r3, #0]
 800957a:	685b      	ldreq	r3, [r3, #4]
 800957c:	1809      	addeq	r1, r1, r0
 800957e:	6021      	streq	r1, [r4, #0]
 8009580:	e7ed      	b.n	800955e <_free_r+0x1e>
 8009582:	461a      	mov	r2, r3
 8009584:	685b      	ldr	r3, [r3, #4]
 8009586:	b10b      	cbz	r3, 800958c <_free_r+0x4c>
 8009588:	42a3      	cmp	r3, r4
 800958a:	d9fa      	bls.n	8009582 <_free_r+0x42>
 800958c:	6811      	ldr	r1, [r2, #0]
 800958e:	1850      	adds	r0, r2, r1
 8009590:	42a0      	cmp	r0, r4
 8009592:	d10b      	bne.n	80095ac <_free_r+0x6c>
 8009594:	6820      	ldr	r0, [r4, #0]
 8009596:	4401      	add	r1, r0
 8009598:	1850      	adds	r0, r2, r1
 800959a:	4283      	cmp	r3, r0
 800959c:	6011      	str	r1, [r2, #0]
 800959e:	d1e0      	bne.n	8009562 <_free_r+0x22>
 80095a0:	6818      	ldr	r0, [r3, #0]
 80095a2:	685b      	ldr	r3, [r3, #4]
 80095a4:	6053      	str	r3, [r2, #4]
 80095a6:	4408      	add	r0, r1
 80095a8:	6010      	str	r0, [r2, #0]
 80095aa:	e7da      	b.n	8009562 <_free_r+0x22>
 80095ac:	d902      	bls.n	80095b4 <_free_r+0x74>
 80095ae:	230c      	movs	r3, #12
 80095b0:	602b      	str	r3, [r5, #0]
 80095b2:	e7d6      	b.n	8009562 <_free_r+0x22>
 80095b4:	6820      	ldr	r0, [r4, #0]
 80095b6:	1821      	adds	r1, r4, r0
 80095b8:	428b      	cmp	r3, r1
 80095ba:	bf04      	itt	eq
 80095bc:	6819      	ldreq	r1, [r3, #0]
 80095be:	685b      	ldreq	r3, [r3, #4]
 80095c0:	6063      	str	r3, [r4, #4]
 80095c2:	bf04      	itt	eq
 80095c4:	1809      	addeq	r1, r1, r0
 80095c6:	6021      	streq	r1, [r4, #0]
 80095c8:	6054      	str	r4, [r2, #4]
 80095ca:	e7ca      	b.n	8009562 <_free_r+0x22>
 80095cc:	bd38      	pop	{r3, r4, r5, pc}
 80095ce:	bf00      	nop
 80095d0:	200009d0 	.word	0x200009d0

080095d4 <_Balloc>:
 80095d4:	b570      	push	{r4, r5, r6, lr}
 80095d6:	69c6      	ldr	r6, [r0, #28]
 80095d8:	4604      	mov	r4, r0
 80095da:	460d      	mov	r5, r1
 80095dc:	b976      	cbnz	r6, 80095fc <_Balloc+0x28>
 80095de:	2010      	movs	r0, #16
 80095e0:	f7fd ff64 	bl	80074ac <malloc>
 80095e4:	4602      	mov	r2, r0
 80095e6:	61e0      	str	r0, [r4, #28]
 80095e8:	b920      	cbnz	r0, 80095f4 <_Balloc+0x20>
 80095ea:	4b18      	ldr	r3, [pc, #96]	@ (800964c <_Balloc+0x78>)
 80095ec:	4818      	ldr	r0, [pc, #96]	@ (8009650 <_Balloc+0x7c>)
 80095ee:	216b      	movs	r1, #107	@ 0x6b
 80095f0:	f7ff f93a 	bl	8008868 <__assert_func>
 80095f4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80095f8:	6006      	str	r6, [r0, #0]
 80095fa:	60c6      	str	r6, [r0, #12]
 80095fc:	69e6      	ldr	r6, [r4, #28]
 80095fe:	68f3      	ldr	r3, [r6, #12]
 8009600:	b183      	cbz	r3, 8009624 <_Balloc+0x50>
 8009602:	69e3      	ldr	r3, [r4, #28]
 8009604:	68db      	ldr	r3, [r3, #12]
 8009606:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800960a:	b9b8      	cbnz	r0, 800963c <_Balloc+0x68>
 800960c:	2101      	movs	r1, #1
 800960e:	fa01 f605 	lsl.w	r6, r1, r5
 8009612:	1d72      	adds	r2, r6, #5
 8009614:	0092      	lsls	r2, r2, #2
 8009616:	4620      	mov	r0, r4
 8009618:	f001 ff2d 	bl	800b476 <_calloc_r>
 800961c:	b160      	cbz	r0, 8009638 <_Balloc+0x64>
 800961e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8009622:	e00e      	b.n	8009642 <_Balloc+0x6e>
 8009624:	2221      	movs	r2, #33	@ 0x21
 8009626:	2104      	movs	r1, #4
 8009628:	4620      	mov	r0, r4
 800962a:	f001 ff24 	bl	800b476 <_calloc_r>
 800962e:	69e3      	ldr	r3, [r4, #28]
 8009630:	60f0      	str	r0, [r6, #12]
 8009632:	68db      	ldr	r3, [r3, #12]
 8009634:	2b00      	cmp	r3, #0
 8009636:	d1e4      	bne.n	8009602 <_Balloc+0x2e>
 8009638:	2000      	movs	r0, #0
 800963a:	bd70      	pop	{r4, r5, r6, pc}
 800963c:	6802      	ldr	r2, [r0, #0]
 800963e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8009642:	2300      	movs	r3, #0
 8009644:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8009648:	e7f7      	b.n	800963a <_Balloc+0x66>
 800964a:	bf00      	nop
 800964c:	0800c980 	.word	0x0800c980
 8009650:	0800ca00 	.word	0x0800ca00

08009654 <_Bfree>:
 8009654:	b570      	push	{r4, r5, r6, lr}
 8009656:	69c6      	ldr	r6, [r0, #28]
 8009658:	4605      	mov	r5, r0
 800965a:	460c      	mov	r4, r1
 800965c:	b976      	cbnz	r6, 800967c <_Bfree+0x28>
 800965e:	2010      	movs	r0, #16
 8009660:	f7fd ff24 	bl	80074ac <malloc>
 8009664:	4602      	mov	r2, r0
 8009666:	61e8      	str	r0, [r5, #28]
 8009668:	b920      	cbnz	r0, 8009674 <_Bfree+0x20>
 800966a:	4b09      	ldr	r3, [pc, #36]	@ (8009690 <_Bfree+0x3c>)
 800966c:	4809      	ldr	r0, [pc, #36]	@ (8009694 <_Bfree+0x40>)
 800966e:	218f      	movs	r1, #143	@ 0x8f
 8009670:	f7ff f8fa 	bl	8008868 <__assert_func>
 8009674:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8009678:	6006      	str	r6, [r0, #0]
 800967a:	60c6      	str	r6, [r0, #12]
 800967c:	b13c      	cbz	r4, 800968e <_Bfree+0x3a>
 800967e:	69eb      	ldr	r3, [r5, #28]
 8009680:	6862      	ldr	r2, [r4, #4]
 8009682:	68db      	ldr	r3, [r3, #12]
 8009684:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8009688:	6021      	str	r1, [r4, #0]
 800968a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800968e:	bd70      	pop	{r4, r5, r6, pc}
 8009690:	0800c980 	.word	0x0800c980
 8009694:	0800ca00 	.word	0x0800ca00

08009698 <__multadd>:
 8009698:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800969c:	690d      	ldr	r5, [r1, #16]
 800969e:	4607      	mov	r7, r0
 80096a0:	460c      	mov	r4, r1
 80096a2:	461e      	mov	r6, r3
 80096a4:	f101 0c14 	add.w	ip, r1, #20
 80096a8:	2000      	movs	r0, #0
 80096aa:	f8dc 3000 	ldr.w	r3, [ip]
 80096ae:	b299      	uxth	r1, r3
 80096b0:	fb02 6101 	mla	r1, r2, r1, r6
 80096b4:	0c1e      	lsrs	r6, r3, #16
 80096b6:	0c0b      	lsrs	r3, r1, #16
 80096b8:	fb02 3306 	mla	r3, r2, r6, r3
 80096bc:	b289      	uxth	r1, r1
 80096be:	3001      	adds	r0, #1
 80096c0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80096c4:	4285      	cmp	r5, r0
 80096c6:	f84c 1b04 	str.w	r1, [ip], #4
 80096ca:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80096ce:	dcec      	bgt.n	80096aa <__multadd+0x12>
 80096d0:	b30e      	cbz	r6, 8009716 <__multadd+0x7e>
 80096d2:	68a3      	ldr	r3, [r4, #8]
 80096d4:	42ab      	cmp	r3, r5
 80096d6:	dc19      	bgt.n	800970c <__multadd+0x74>
 80096d8:	6861      	ldr	r1, [r4, #4]
 80096da:	4638      	mov	r0, r7
 80096dc:	3101      	adds	r1, #1
 80096de:	f7ff ff79 	bl	80095d4 <_Balloc>
 80096e2:	4680      	mov	r8, r0
 80096e4:	b928      	cbnz	r0, 80096f2 <__multadd+0x5a>
 80096e6:	4602      	mov	r2, r0
 80096e8:	4b0c      	ldr	r3, [pc, #48]	@ (800971c <__multadd+0x84>)
 80096ea:	480d      	ldr	r0, [pc, #52]	@ (8009720 <__multadd+0x88>)
 80096ec:	21ba      	movs	r1, #186	@ 0xba
 80096ee:	f7ff f8bb 	bl	8008868 <__assert_func>
 80096f2:	6922      	ldr	r2, [r4, #16]
 80096f4:	3202      	adds	r2, #2
 80096f6:	f104 010c 	add.w	r1, r4, #12
 80096fa:	0092      	lsls	r2, r2, #2
 80096fc:	300c      	adds	r0, #12
 80096fe:	f7ff f89e 	bl	800883e <memcpy>
 8009702:	4621      	mov	r1, r4
 8009704:	4638      	mov	r0, r7
 8009706:	f7ff ffa5 	bl	8009654 <_Bfree>
 800970a:	4644      	mov	r4, r8
 800970c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8009710:	3501      	adds	r5, #1
 8009712:	615e      	str	r6, [r3, #20]
 8009714:	6125      	str	r5, [r4, #16]
 8009716:	4620      	mov	r0, r4
 8009718:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800971c:	0800c9ef 	.word	0x0800c9ef
 8009720:	0800ca00 	.word	0x0800ca00

08009724 <__s2b>:
 8009724:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009728:	460c      	mov	r4, r1
 800972a:	4615      	mov	r5, r2
 800972c:	461f      	mov	r7, r3
 800972e:	2209      	movs	r2, #9
 8009730:	3308      	adds	r3, #8
 8009732:	4606      	mov	r6, r0
 8009734:	fb93 f3f2 	sdiv	r3, r3, r2
 8009738:	2100      	movs	r1, #0
 800973a:	2201      	movs	r2, #1
 800973c:	429a      	cmp	r2, r3
 800973e:	db09      	blt.n	8009754 <__s2b+0x30>
 8009740:	4630      	mov	r0, r6
 8009742:	f7ff ff47 	bl	80095d4 <_Balloc>
 8009746:	b940      	cbnz	r0, 800975a <__s2b+0x36>
 8009748:	4602      	mov	r2, r0
 800974a:	4b19      	ldr	r3, [pc, #100]	@ (80097b0 <__s2b+0x8c>)
 800974c:	4819      	ldr	r0, [pc, #100]	@ (80097b4 <__s2b+0x90>)
 800974e:	21d3      	movs	r1, #211	@ 0xd3
 8009750:	f7ff f88a 	bl	8008868 <__assert_func>
 8009754:	0052      	lsls	r2, r2, #1
 8009756:	3101      	adds	r1, #1
 8009758:	e7f0      	b.n	800973c <__s2b+0x18>
 800975a:	9b08      	ldr	r3, [sp, #32]
 800975c:	6143      	str	r3, [r0, #20]
 800975e:	2d09      	cmp	r5, #9
 8009760:	f04f 0301 	mov.w	r3, #1
 8009764:	6103      	str	r3, [r0, #16]
 8009766:	dd16      	ble.n	8009796 <__s2b+0x72>
 8009768:	f104 0909 	add.w	r9, r4, #9
 800976c:	46c8      	mov	r8, r9
 800976e:	442c      	add	r4, r5
 8009770:	f818 3b01 	ldrb.w	r3, [r8], #1
 8009774:	4601      	mov	r1, r0
 8009776:	3b30      	subs	r3, #48	@ 0x30
 8009778:	220a      	movs	r2, #10
 800977a:	4630      	mov	r0, r6
 800977c:	f7ff ff8c 	bl	8009698 <__multadd>
 8009780:	45a0      	cmp	r8, r4
 8009782:	d1f5      	bne.n	8009770 <__s2b+0x4c>
 8009784:	f1a5 0408 	sub.w	r4, r5, #8
 8009788:	444c      	add	r4, r9
 800978a:	1b2d      	subs	r5, r5, r4
 800978c:	1963      	adds	r3, r4, r5
 800978e:	42bb      	cmp	r3, r7
 8009790:	db04      	blt.n	800979c <__s2b+0x78>
 8009792:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009796:	340a      	adds	r4, #10
 8009798:	2509      	movs	r5, #9
 800979a:	e7f6      	b.n	800978a <__s2b+0x66>
 800979c:	f814 3b01 	ldrb.w	r3, [r4], #1
 80097a0:	4601      	mov	r1, r0
 80097a2:	3b30      	subs	r3, #48	@ 0x30
 80097a4:	220a      	movs	r2, #10
 80097a6:	4630      	mov	r0, r6
 80097a8:	f7ff ff76 	bl	8009698 <__multadd>
 80097ac:	e7ee      	b.n	800978c <__s2b+0x68>
 80097ae:	bf00      	nop
 80097b0:	0800c9ef 	.word	0x0800c9ef
 80097b4:	0800ca00 	.word	0x0800ca00

080097b8 <__hi0bits>:
 80097b8:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80097bc:	4603      	mov	r3, r0
 80097be:	bf36      	itet	cc
 80097c0:	0403      	lslcc	r3, r0, #16
 80097c2:	2000      	movcs	r0, #0
 80097c4:	2010      	movcc	r0, #16
 80097c6:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80097ca:	bf3c      	itt	cc
 80097cc:	021b      	lslcc	r3, r3, #8
 80097ce:	3008      	addcc	r0, #8
 80097d0:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80097d4:	bf3c      	itt	cc
 80097d6:	011b      	lslcc	r3, r3, #4
 80097d8:	3004      	addcc	r0, #4
 80097da:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80097de:	bf3c      	itt	cc
 80097e0:	009b      	lslcc	r3, r3, #2
 80097e2:	3002      	addcc	r0, #2
 80097e4:	2b00      	cmp	r3, #0
 80097e6:	db05      	blt.n	80097f4 <__hi0bits+0x3c>
 80097e8:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80097ec:	f100 0001 	add.w	r0, r0, #1
 80097f0:	bf08      	it	eq
 80097f2:	2020      	moveq	r0, #32
 80097f4:	4770      	bx	lr

080097f6 <__lo0bits>:
 80097f6:	6803      	ldr	r3, [r0, #0]
 80097f8:	4602      	mov	r2, r0
 80097fa:	f013 0007 	ands.w	r0, r3, #7
 80097fe:	d00b      	beq.n	8009818 <__lo0bits+0x22>
 8009800:	07d9      	lsls	r1, r3, #31
 8009802:	d421      	bmi.n	8009848 <__lo0bits+0x52>
 8009804:	0798      	lsls	r0, r3, #30
 8009806:	bf49      	itett	mi
 8009808:	085b      	lsrmi	r3, r3, #1
 800980a:	089b      	lsrpl	r3, r3, #2
 800980c:	2001      	movmi	r0, #1
 800980e:	6013      	strmi	r3, [r2, #0]
 8009810:	bf5c      	itt	pl
 8009812:	6013      	strpl	r3, [r2, #0]
 8009814:	2002      	movpl	r0, #2
 8009816:	4770      	bx	lr
 8009818:	b299      	uxth	r1, r3
 800981a:	b909      	cbnz	r1, 8009820 <__lo0bits+0x2a>
 800981c:	0c1b      	lsrs	r3, r3, #16
 800981e:	2010      	movs	r0, #16
 8009820:	b2d9      	uxtb	r1, r3
 8009822:	b909      	cbnz	r1, 8009828 <__lo0bits+0x32>
 8009824:	3008      	adds	r0, #8
 8009826:	0a1b      	lsrs	r3, r3, #8
 8009828:	0719      	lsls	r1, r3, #28
 800982a:	bf04      	itt	eq
 800982c:	091b      	lsreq	r3, r3, #4
 800982e:	3004      	addeq	r0, #4
 8009830:	0799      	lsls	r1, r3, #30
 8009832:	bf04      	itt	eq
 8009834:	089b      	lsreq	r3, r3, #2
 8009836:	3002      	addeq	r0, #2
 8009838:	07d9      	lsls	r1, r3, #31
 800983a:	d403      	bmi.n	8009844 <__lo0bits+0x4e>
 800983c:	085b      	lsrs	r3, r3, #1
 800983e:	f100 0001 	add.w	r0, r0, #1
 8009842:	d003      	beq.n	800984c <__lo0bits+0x56>
 8009844:	6013      	str	r3, [r2, #0]
 8009846:	4770      	bx	lr
 8009848:	2000      	movs	r0, #0
 800984a:	4770      	bx	lr
 800984c:	2020      	movs	r0, #32
 800984e:	4770      	bx	lr

08009850 <__i2b>:
 8009850:	b510      	push	{r4, lr}
 8009852:	460c      	mov	r4, r1
 8009854:	2101      	movs	r1, #1
 8009856:	f7ff febd 	bl	80095d4 <_Balloc>
 800985a:	4602      	mov	r2, r0
 800985c:	b928      	cbnz	r0, 800986a <__i2b+0x1a>
 800985e:	4b05      	ldr	r3, [pc, #20]	@ (8009874 <__i2b+0x24>)
 8009860:	4805      	ldr	r0, [pc, #20]	@ (8009878 <__i2b+0x28>)
 8009862:	f240 1145 	movw	r1, #325	@ 0x145
 8009866:	f7fe ffff 	bl	8008868 <__assert_func>
 800986a:	2301      	movs	r3, #1
 800986c:	6144      	str	r4, [r0, #20]
 800986e:	6103      	str	r3, [r0, #16]
 8009870:	bd10      	pop	{r4, pc}
 8009872:	bf00      	nop
 8009874:	0800c9ef 	.word	0x0800c9ef
 8009878:	0800ca00 	.word	0x0800ca00

0800987c <__multiply>:
 800987c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009880:	4614      	mov	r4, r2
 8009882:	690a      	ldr	r2, [r1, #16]
 8009884:	6923      	ldr	r3, [r4, #16]
 8009886:	429a      	cmp	r2, r3
 8009888:	bfa8      	it	ge
 800988a:	4623      	movge	r3, r4
 800988c:	460f      	mov	r7, r1
 800988e:	bfa4      	itt	ge
 8009890:	460c      	movge	r4, r1
 8009892:	461f      	movge	r7, r3
 8009894:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8009898:	f8d7 9010 	ldr.w	r9, [r7, #16]
 800989c:	68a3      	ldr	r3, [r4, #8]
 800989e:	6861      	ldr	r1, [r4, #4]
 80098a0:	eb0a 0609 	add.w	r6, sl, r9
 80098a4:	42b3      	cmp	r3, r6
 80098a6:	b085      	sub	sp, #20
 80098a8:	bfb8      	it	lt
 80098aa:	3101      	addlt	r1, #1
 80098ac:	f7ff fe92 	bl	80095d4 <_Balloc>
 80098b0:	b930      	cbnz	r0, 80098c0 <__multiply+0x44>
 80098b2:	4602      	mov	r2, r0
 80098b4:	4b44      	ldr	r3, [pc, #272]	@ (80099c8 <__multiply+0x14c>)
 80098b6:	4845      	ldr	r0, [pc, #276]	@ (80099cc <__multiply+0x150>)
 80098b8:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80098bc:	f7fe ffd4 	bl	8008868 <__assert_func>
 80098c0:	f100 0514 	add.w	r5, r0, #20
 80098c4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80098c8:	462b      	mov	r3, r5
 80098ca:	2200      	movs	r2, #0
 80098cc:	4543      	cmp	r3, r8
 80098ce:	d321      	bcc.n	8009914 <__multiply+0x98>
 80098d0:	f107 0114 	add.w	r1, r7, #20
 80098d4:	f104 0214 	add.w	r2, r4, #20
 80098d8:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 80098dc:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 80098e0:	9302      	str	r3, [sp, #8]
 80098e2:	1b13      	subs	r3, r2, r4
 80098e4:	3b15      	subs	r3, #21
 80098e6:	f023 0303 	bic.w	r3, r3, #3
 80098ea:	3304      	adds	r3, #4
 80098ec:	f104 0715 	add.w	r7, r4, #21
 80098f0:	42ba      	cmp	r2, r7
 80098f2:	bf38      	it	cc
 80098f4:	2304      	movcc	r3, #4
 80098f6:	9301      	str	r3, [sp, #4]
 80098f8:	9b02      	ldr	r3, [sp, #8]
 80098fa:	9103      	str	r1, [sp, #12]
 80098fc:	428b      	cmp	r3, r1
 80098fe:	d80c      	bhi.n	800991a <__multiply+0x9e>
 8009900:	2e00      	cmp	r6, #0
 8009902:	dd03      	ble.n	800990c <__multiply+0x90>
 8009904:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8009908:	2b00      	cmp	r3, #0
 800990a:	d05b      	beq.n	80099c4 <__multiply+0x148>
 800990c:	6106      	str	r6, [r0, #16]
 800990e:	b005      	add	sp, #20
 8009910:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009914:	f843 2b04 	str.w	r2, [r3], #4
 8009918:	e7d8      	b.n	80098cc <__multiply+0x50>
 800991a:	f8b1 a000 	ldrh.w	sl, [r1]
 800991e:	f1ba 0f00 	cmp.w	sl, #0
 8009922:	d024      	beq.n	800996e <__multiply+0xf2>
 8009924:	f104 0e14 	add.w	lr, r4, #20
 8009928:	46a9      	mov	r9, r5
 800992a:	f04f 0c00 	mov.w	ip, #0
 800992e:	f85e 7b04 	ldr.w	r7, [lr], #4
 8009932:	f8d9 3000 	ldr.w	r3, [r9]
 8009936:	fa1f fb87 	uxth.w	fp, r7
 800993a:	b29b      	uxth	r3, r3
 800993c:	fb0a 330b 	mla	r3, sl, fp, r3
 8009940:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8009944:	f8d9 7000 	ldr.w	r7, [r9]
 8009948:	4463      	add	r3, ip
 800994a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800994e:	fb0a c70b 	mla	r7, sl, fp, ip
 8009952:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8009956:	b29b      	uxth	r3, r3
 8009958:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800995c:	4572      	cmp	r2, lr
 800995e:	f849 3b04 	str.w	r3, [r9], #4
 8009962:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8009966:	d8e2      	bhi.n	800992e <__multiply+0xb2>
 8009968:	9b01      	ldr	r3, [sp, #4]
 800996a:	f845 c003 	str.w	ip, [r5, r3]
 800996e:	9b03      	ldr	r3, [sp, #12]
 8009970:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8009974:	3104      	adds	r1, #4
 8009976:	f1b9 0f00 	cmp.w	r9, #0
 800997a:	d021      	beq.n	80099c0 <__multiply+0x144>
 800997c:	682b      	ldr	r3, [r5, #0]
 800997e:	f104 0c14 	add.w	ip, r4, #20
 8009982:	46ae      	mov	lr, r5
 8009984:	f04f 0a00 	mov.w	sl, #0
 8009988:	f8bc b000 	ldrh.w	fp, [ip]
 800998c:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8009990:	fb09 770b 	mla	r7, r9, fp, r7
 8009994:	4457      	add	r7, sl
 8009996:	b29b      	uxth	r3, r3
 8009998:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800999c:	f84e 3b04 	str.w	r3, [lr], #4
 80099a0:	f85c 3b04 	ldr.w	r3, [ip], #4
 80099a4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80099a8:	f8be 3000 	ldrh.w	r3, [lr]
 80099ac:	fb09 330a 	mla	r3, r9, sl, r3
 80099b0:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 80099b4:	4562      	cmp	r2, ip
 80099b6:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80099ba:	d8e5      	bhi.n	8009988 <__multiply+0x10c>
 80099bc:	9f01      	ldr	r7, [sp, #4]
 80099be:	51eb      	str	r3, [r5, r7]
 80099c0:	3504      	adds	r5, #4
 80099c2:	e799      	b.n	80098f8 <__multiply+0x7c>
 80099c4:	3e01      	subs	r6, #1
 80099c6:	e79b      	b.n	8009900 <__multiply+0x84>
 80099c8:	0800c9ef 	.word	0x0800c9ef
 80099cc:	0800ca00 	.word	0x0800ca00

080099d0 <__pow5mult>:
 80099d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80099d4:	4615      	mov	r5, r2
 80099d6:	f012 0203 	ands.w	r2, r2, #3
 80099da:	4607      	mov	r7, r0
 80099dc:	460e      	mov	r6, r1
 80099de:	d007      	beq.n	80099f0 <__pow5mult+0x20>
 80099e0:	4c25      	ldr	r4, [pc, #148]	@ (8009a78 <__pow5mult+0xa8>)
 80099e2:	3a01      	subs	r2, #1
 80099e4:	2300      	movs	r3, #0
 80099e6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80099ea:	f7ff fe55 	bl	8009698 <__multadd>
 80099ee:	4606      	mov	r6, r0
 80099f0:	10ad      	asrs	r5, r5, #2
 80099f2:	d03d      	beq.n	8009a70 <__pow5mult+0xa0>
 80099f4:	69fc      	ldr	r4, [r7, #28]
 80099f6:	b97c      	cbnz	r4, 8009a18 <__pow5mult+0x48>
 80099f8:	2010      	movs	r0, #16
 80099fa:	f7fd fd57 	bl	80074ac <malloc>
 80099fe:	4602      	mov	r2, r0
 8009a00:	61f8      	str	r0, [r7, #28]
 8009a02:	b928      	cbnz	r0, 8009a10 <__pow5mult+0x40>
 8009a04:	4b1d      	ldr	r3, [pc, #116]	@ (8009a7c <__pow5mult+0xac>)
 8009a06:	481e      	ldr	r0, [pc, #120]	@ (8009a80 <__pow5mult+0xb0>)
 8009a08:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8009a0c:	f7fe ff2c 	bl	8008868 <__assert_func>
 8009a10:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8009a14:	6004      	str	r4, [r0, #0]
 8009a16:	60c4      	str	r4, [r0, #12]
 8009a18:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8009a1c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8009a20:	b94c      	cbnz	r4, 8009a36 <__pow5mult+0x66>
 8009a22:	f240 2171 	movw	r1, #625	@ 0x271
 8009a26:	4638      	mov	r0, r7
 8009a28:	f7ff ff12 	bl	8009850 <__i2b>
 8009a2c:	2300      	movs	r3, #0
 8009a2e:	f8c8 0008 	str.w	r0, [r8, #8]
 8009a32:	4604      	mov	r4, r0
 8009a34:	6003      	str	r3, [r0, #0]
 8009a36:	f04f 0900 	mov.w	r9, #0
 8009a3a:	07eb      	lsls	r3, r5, #31
 8009a3c:	d50a      	bpl.n	8009a54 <__pow5mult+0x84>
 8009a3e:	4631      	mov	r1, r6
 8009a40:	4622      	mov	r2, r4
 8009a42:	4638      	mov	r0, r7
 8009a44:	f7ff ff1a 	bl	800987c <__multiply>
 8009a48:	4631      	mov	r1, r6
 8009a4a:	4680      	mov	r8, r0
 8009a4c:	4638      	mov	r0, r7
 8009a4e:	f7ff fe01 	bl	8009654 <_Bfree>
 8009a52:	4646      	mov	r6, r8
 8009a54:	106d      	asrs	r5, r5, #1
 8009a56:	d00b      	beq.n	8009a70 <__pow5mult+0xa0>
 8009a58:	6820      	ldr	r0, [r4, #0]
 8009a5a:	b938      	cbnz	r0, 8009a6c <__pow5mult+0x9c>
 8009a5c:	4622      	mov	r2, r4
 8009a5e:	4621      	mov	r1, r4
 8009a60:	4638      	mov	r0, r7
 8009a62:	f7ff ff0b 	bl	800987c <__multiply>
 8009a66:	6020      	str	r0, [r4, #0]
 8009a68:	f8c0 9000 	str.w	r9, [r0]
 8009a6c:	4604      	mov	r4, r0
 8009a6e:	e7e4      	b.n	8009a3a <__pow5mult+0x6a>
 8009a70:	4630      	mov	r0, r6
 8009a72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009a76:	bf00      	nop
 8009a78:	0800ca5c 	.word	0x0800ca5c
 8009a7c:	0800c980 	.word	0x0800c980
 8009a80:	0800ca00 	.word	0x0800ca00

08009a84 <__lshift>:
 8009a84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009a88:	460c      	mov	r4, r1
 8009a8a:	6849      	ldr	r1, [r1, #4]
 8009a8c:	6923      	ldr	r3, [r4, #16]
 8009a8e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8009a92:	68a3      	ldr	r3, [r4, #8]
 8009a94:	4607      	mov	r7, r0
 8009a96:	4691      	mov	r9, r2
 8009a98:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8009a9c:	f108 0601 	add.w	r6, r8, #1
 8009aa0:	42b3      	cmp	r3, r6
 8009aa2:	db0b      	blt.n	8009abc <__lshift+0x38>
 8009aa4:	4638      	mov	r0, r7
 8009aa6:	f7ff fd95 	bl	80095d4 <_Balloc>
 8009aaa:	4605      	mov	r5, r0
 8009aac:	b948      	cbnz	r0, 8009ac2 <__lshift+0x3e>
 8009aae:	4602      	mov	r2, r0
 8009ab0:	4b28      	ldr	r3, [pc, #160]	@ (8009b54 <__lshift+0xd0>)
 8009ab2:	4829      	ldr	r0, [pc, #164]	@ (8009b58 <__lshift+0xd4>)
 8009ab4:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8009ab8:	f7fe fed6 	bl	8008868 <__assert_func>
 8009abc:	3101      	adds	r1, #1
 8009abe:	005b      	lsls	r3, r3, #1
 8009ac0:	e7ee      	b.n	8009aa0 <__lshift+0x1c>
 8009ac2:	2300      	movs	r3, #0
 8009ac4:	f100 0114 	add.w	r1, r0, #20
 8009ac8:	f100 0210 	add.w	r2, r0, #16
 8009acc:	4618      	mov	r0, r3
 8009ace:	4553      	cmp	r3, sl
 8009ad0:	db33      	blt.n	8009b3a <__lshift+0xb6>
 8009ad2:	6920      	ldr	r0, [r4, #16]
 8009ad4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8009ad8:	f104 0314 	add.w	r3, r4, #20
 8009adc:	f019 091f 	ands.w	r9, r9, #31
 8009ae0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8009ae4:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8009ae8:	d02b      	beq.n	8009b42 <__lshift+0xbe>
 8009aea:	f1c9 0e20 	rsb	lr, r9, #32
 8009aee:	468a      	mov	sl, r1
 8009af0:	2200      	movs	r2, #0
 8009af2:	6818      	ldr	r0, [r3, #0]
 8009af4:	fa00 f009 	lsl.w	r0, r0, r9
 8009af8:	4310      	orrs	r0, r2
 8009afa:	f84a 0b04 	str.w	r0, [sl], #4
 8009afe:	f853 2b04 	ldr.w	r2, [r3], #4
 8009b02:	459c      	cmp	ip, r3
 8009b04:	fa22 f20e 	lsr.w	r2, r2, lr
 8009b08:	d8f3      	bhi.n	8009af2 <__lshift+0x6e>
 8009b0a:	ebac 0304 	sub.w	r3, ip, r4
 8009b0e:	3b15      	subs	r3, #21
 8009b10:	f023 0303 	bic.w	r3, r3, #3
 8009b14:	3304      	adds	r3, #4
 8009b16:	f104 0015 	add.w	r0, r4, #21
 8009b1a:	4584      	cmp	ip, r0
 8009b1c:	bf38      	it	cc
 8009b1e:	2304      	movcc	r3, #4
 8009b20:	50ca      	str	r2, [r1, r3]
 8009b22:	b10a      	cbz	r2, 8009b28 <__lshift+0xa4>
 8009b24:	f108 0602 	add.w	r6, r8, #2
 8009b28:	3e01      	subs	r6, #1
 8009b2a:	4638      	mov	r0, r7
 8009b2c:	612e      	str	r6, [r5, #16]
 8009b2e:	4621      	mov	r1, r4
 8009b30:	f7ff fd90 	bl	8009654 <_Bfree>
 8009b34:	4628      	mov	r0, r5
 8009b36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b3a:	f842 0f04 	str.w	r0, [r2, #4]!
 8009b3e:	3301      	adds	r3, #1
 8009b40:	e7c5      	b.n	8009ace <__lshift+0x4a>
 8009b42:	3904      	subs	r1, #4
 8009b44:	f853 2b04 	ldr.w	r2, [r3], #4
 8009b48:	f841 2f04 	str.w	r2, [r1, #4]!
 8009b4c:	459c      	cmp	ip, r3
 8009b4e:	d8f9      	bhi.n	8009b44 <__lshift+0xc0>
 8009b50:	e7ea      	b.n	8009b28 <__lshift+0xa4>
 8009b52:	bf00      	nop
 8009b54:	0800c9ef 	.word	0x0800c9ef
 8009b58:	0800ca00 	.word	0x0800ca00

08009b5c <__mcmp>:
 8009b5c:	690a      	ldr	r2, [r1, #16]
 8009b5e:	4603      	mov	r3, r0
 8009b60:	6900      	ldr	r0, [r0, #16]
 8009b62:	1a80      	subs	r0, r0, r2
 8009b64:	b530      	push	{r4, r5, lr}
 8009b66:	d10e      	bne.n	8009b86 <__mcmp+0x2a>
 8009b68:	3314      	adds	r3, #20
 8009b6a:	3114      	adds	r1, #20
 8009b6c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8009b70:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8009b74:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8009b78:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8009b7c:	4295      	cmp	r5, r2
 8009b7e:	d003      	beq.n	8009b88 <__mcmp+0x2c>
 8009b80:	d205      	bcs.n	8009b8e <__mcmp+0x32>
 8009b82:	f04f 30ff 	mov.w	r0, #4294967295
 8009b86:	bd30      	pop	{r4, r5, pc}
 8009b88:	42a3      	cmp	r3, r4
 8009b8a:	d3f3      	bcc.n	8009b74 <__mcmp+0x18>
 8009b8c:	e7fb      	b.n	8009b86 <__mcmp+0x2a>
 8009b8e:	2001      	movs	r0, #1
 8009b90:	e7f9      	b.n	8009b86 <__mcmp+0x2a>
	...

08009b94 <__mdiff>:
 8009b94:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b98:	4689      	mov	r9, r1
 8009b9a:	4606      	mov	r6, r0
 8009b9c:	4611      	mov	r1, r2
 8009b9e:	4648      	mov	r0, r9
 8009ba0:	4614      	mov	r4, r2
 8009ba2:	f7ff ffdb 	bl	8009b5c <__mcmp>
 8009ba6:	1e05      	subs	r5, r0, #0
 8009ba8:	d112      	bne.n	8009bd0 <__mdiff+0x3c>
 8009baa:	4629      	mov	r1, r5
 8009bac:	4630      	mov	r0, r6
 8009bae:	f7ff fd11 	bl	80095d4 <_Balloc>
 8009bb2:	4602      	mov	r2, r0
 8009bb4:	b928      	cbnz	r0, 8009bc2 <__mdiff+0x2e>
 8009bb6:	4b3f      	ldr	r3, [pc, #252]	@ (8009cb4 <__mdiff+0x120>)
 8009bb8:	f240 2137 	movw	r1, #567	@ 0x237
 8009bbc:	483e      	ldr	r0, [pc, #248]	@ (8009cb8 <__mdiff+0x124>)
 8009bbe:	f7fe fe53 	bl	8008868 <__assert_func>
 8009bc2:	2301      	movs	r3, #1
 8009bc4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8009bc8:	4610      	mov	r0, r2
 8009bca:	b003      	add	sp, #12
 8009bcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009bd0:	bfbc      	itt	lt
 8009bd2:	464b      	movlt	r3, r9
 8009bd4:	46a1      	movlt	r9, r4
 8009bd6:	4630      	mov	r0, r6
 8009bd8:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8009bdc:	bfba      	itte	lt
 8009bde:	461c      	movlt	r4, r3
 8009be0:	2501      	movlt	r5, #1
 8009be2:	2500      	movge	r5, #0
 8009be4:	f7ff fcf6 	bl	80095d4 <_Balloc>
 8009be8:	4602      	mov	r2, r0
 8009bea:	b918      	cbnz	r0, 8009bf4 <__mdiff+0x60>
 8009bec:	4b31      	ldr	r3, [pc, #196]	@ (8009cb4 <__mdiff+0x120>)
 8009bee:	f240 2145 	movw	r1, #581	@ 0x245
 8009bf2:	e7e3      	b.n	8009bbc <__mdiff+0x28>
 8009bf4:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8009bf8:	6926      	ldr	r6, [r4, #16]
 8009bfa:	60c5      	str	r5, [r0, #12]
 8009bfc:	f109 0310 	add.w	r3, r9, #16
 8009c00:	f109 0514 	add.w	r5, r9, #20
 8009c04:	f104 0e14 	add.w	lr, r4, #20
 8009c08:	f100 0b14 	add.w	fp, r0, #20
 8009c0c:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8009c10:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8009c14:	9301      	str	r3, [sp, #4]
 8009c16:	46d9      	mov	r9, fp
 8009c18:	f04f 0c00 	mov.w	ip, #0
 8009c1c:	9b01      	ldr	r3, [sp, #4]
 8009c1e:	f85e 0b04 	ldr.w	r0, [lr], #4
 8009c22:	f853 af04 	ldr.w	sl, [r3, #4]!
 8009c26:	9301      	str	r3, [sp, #4]
 8009c28:	fa1f f38a 	uxth.w	r3, sl
 8009c2c:	4619      	mov	r1, r3
 8009c2e:	b283      	uxth	r3, r0
 8009c30:	1acb      	subs	r3, r1, r3
 8009c32:	0c00      	lsrs	r0, r0, #16
 8009c34:	4463      	add	r3, ip
 8009c36:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8009c3a:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8009c3e:	b29b      	uxth	r3, r3
 8009c40:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8009c44:	4576      	cmp	r6, lr
 8009c46:	f849 3b04 	str.w	r3, [r9], #4
 8009c4a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8009c4e:	d8e5      	bhi.n	8009c1c <__mdiff+0x88>
 8009c50:	1b33      	subs	r3, r6, r4
 8009c52:	3b15      	subs	r3, #21
 8009c54:	f023 0303 	bic.w	r3, r3, #3
 8009c58:	3415      	adds	r4, #21
 8009c5a:	3304      	adds	r3, #4
 8009c5c:	42a6      	cmp	r6, r4
 8009c5e:	bf38      	it	cc
 8009c60:	2304      	movcc	r3, #4
 8009c62:	441d      	add	r5, r3
 8009c64:	445b      	add	r3, fp
 8009c66:	461e      	mov	r6, r3
 8009c68:	462c      	mov	r4, r5
 8009c6a:	4544      	cmp	r4, r8
 8009c6c:	d30e      	bcc.n	8009c8c <__mdiff+0xf8>
 8009c6e:	f108 0103 	add.w	r1, r8, #3
 8009c72:	1b49      	subs	r1, r1, r5
 8009c74:	f021 0103 	bic.w	r1, r1, #3
 8009c78:	3d03      	subs	r5, #3
 8009c7a:	45a8      	cmp	r8, r5
 8009c7c:	bf38      	it	cc
 8009c7e:	2100      	movcc	r1, #0
 8009c80:	440b      	add	r3, r1
 8009c82:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8009c86:	b191      	cbz	r1, 8009cae <__mdiff+0x11a>
 8009c88:	6117      	str	r7, [r2, #16]
 8009c8a:	e79d      	b.n	8009bc8 <__mdiff+0x34>
 8009c8c:	f854 1b04 	ldr.w	r1, [r4], #4
 8009c90:	46e6      	mov	lr, ip
 8009c92:	0c08      	lsrs	r0, r1, #16
 8009c94:	fa1c fc81 	uxtah	ip, ip, r1
 8009c98:	4471      	add	r1, lr
 8009c9a:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8009c9e:	b289      	uxth	r1, r1
 8009ca0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8009ca4:	f846 1b04 	str.w	r1, [r6], #4
 8009ca8:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8009cac:	e7dd      	b.n	8009c6a <__mdiff+0xd6>
 8009cae:	3f01      	subs	r7, #1
 8009cb0:	e7e7      	b.n	8009c82 <__mdiff+0xee>
 8009cb2:	bf00      	nop
 8009cb4:	0800c9ef 	.word	0x0800c9ef
 8009cb8:	0800ca00 	.word	0x0800ca00

08009cbc <__ulp>:
 8009cbc:	b082      	sub	sp, #8
 8009cbe:	ed8d 0b00 	vstr	d0, [sp]
 8009cc2:	9a01      	ldr	r2, [sp, #4]
 8009cc4:	4b0f      	ldr	r3, [pc, #60]	@ (8009d04 <__ulp+0x48>)
 8009cc6:	4013      	ands	r3, r2
 8009cc8:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8009ccc:	2b00      	cmp	r3, #0
 8009cce:	dc08      	bgt.n	8009ce2 <__ulp+0x26>
 8009cd0:	425b      	negs	r3, r3
 8009cd2:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8009cd6:	ea4f 5223 	mov.w	r2, r3, asr #20
 8009cda:	da04      	bge.n	8009ce6 <__ulp+0x2a>
 8009cdc:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8009ce0:	4113      	asrs	r3, r2
 8009ce2:	2200      	movs	r2, #0
 8009ce4:	e008      	b.n	8009cf8 <__ulp+0x3c>
 8009ce6:	f1a2 0314 	sub.w	r3, r2, #20
 8009cea:	2b1e      	cmp	r3, #30
 8009cec:	bfda      	itte	le
 8009cee:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8009cf2:	40da      	lsrle	r2, r3
 8009cf4:	2201      	movgt	r2, #1
 8009cf6:	2300      	movs	r3, #0
 8009cf8:	4619      	mov	r1, r3
 8009cfa:	4610      	mov	r0, r2
 8009cfc:	ec41 0b10 	vmov	d0, r0, r1
 8009d00:	b002      	add	sp, #8
 8009d02:	4770      	bx	lr
 8009d04:	7ff00000 	.word	0x7ff00000

08009d08 <__b2d>:
 8009d08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009d0c:	6906      	ldr	r6, [r0, #16]
 8009d0e:	f100 0814 	add.w	r8, r0, #20
 8009d12:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8009d16:	1f37      	subs	r7, r6, #4
 8009d18:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8009d1c:	4610      	mov	r0, r2
 8009d1e:	f7ff fd4b 	bl	80097b8 <__hi0bits>
 8009d22:	f1c0 0320 	rsb	r3, r0, #32
 8009d26:	280a      	cmp	r0, #10
 8009d28:	600b      	str	r3, [r1, #0]
 8009d2a:	491b      	ldr	r1, [pc, #108]	@ (8009d98 <__b2d+0x90>)
 8009d2c:	dc15      	bgt.n	8009d5a <__b2d+0x52>
 8009d2e:	f1c0 0c0b 	rsb	ip, r0, #11
 8009d32:	fa22 f30c 	lsr.w	r3, r2, ip
 8009d36:	45b8      	cmp	r8, r7
 8009d38:	ea43 0501 	orr.w	r5, r3, r1
 8009d3c:	bf34      	ite	cc
 8009d3e:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8009d42:	2300      	movcs	r3, #0
 8009d44:	3015      	adds	r0, #21
 8009d46:	fa02 f000 	lsl.w	r0, r2, r0
 8009d4a:	fa23 f30c 	lsr.w	r3, r3, ip
 8009d4e:	4303      	orrs	r3, r0
 8009d50:	461c      	mov	r4, r3
 8009d52:	ec45 4b10 	vmov	d0, r4, r5
 8009d56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009d5a:	45b8      	cmp	r8, r7
 8009d5c:	bf3a      	itte	cc
 8009d5e:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8009d62:	f1a6 0708 	subcc.w	r7, r6, #8
 8009d66:	2300      	movcs	r3, #0
 8009d68:	380b      	subs	r0, #11
 8009d6a:	d012      	beq.n	8009d92 <__b2d+0x8a>
 8009d6c:	f1c0 0120 	rsb	r1, r0, #32
 8009d70:	fa23 f401 	lsr.w	r4, r3, r1
 8009d74:	4082      	lsls	r2, r0
 8009d76:	4322      	orrs	r2, r4
 8009d78:	4547      	cmp	r7, r8
 8009d7a:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 8009d7e:	bf8c      	ite	hi
 8009d80:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8009d84:	2200      	movls	r2, #0
 8009d86:	4083      	lsls	r3, r0
 8009d88:	40ca      	lsrs	r2, r1
 8009d8a:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 8009d8e:	4313      	orrs	r3, r2
 8009d90:	e7de      	b.n	8009d50 <__b2d+0x48>
 8009d92:	ea42 0501 	orr.w	r5, r2, r1
 8009d96:	e7db      	b.n	8009d50 <__b2d+0x48>
 8009d98:	3ff00000 	.word	0x3ff00000

08009d9c <__d2b>:
 8009d9c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009da0:	460f      	mov	r7, r1
 8009da2:	2101      	movs	r1, #1
 8009da4:	ec59 8b10 	vmov	r8, r9, d0
 8009da8:	4616      	mov	r6, r2
 8009daa:	f7ff fc13 	bl	80095d4 <_Balloc>
 8009dae:	4604      	mov	r4, r0
 8009db0:	b930      	cbnz	r0, 8009dc0 <__d2b+0x24>
 8009db2:	4602      	mov	r2, r0
 8009db4:	4b23      	ldr	r3, [pc, #140]	@ (8009e44 <__d2b+0xa8>)
 8009db6:	4824      	ldr	r0, [pc, #144]	@ (8009e48 <__d2b+0xac>)
 8009db8:	f240 310f 	movw	r1, #783	@ 0x30f
 8009dbc:	f7fe fd54 	bl	8008868 <__assert_func>
 8009dc0:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8009dc4:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8009dc8:	b10d      	cbz	r5, 8009dce <__d2b+0x32>
 8009dca:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8009dce:	9301      	str	r3, [sp, #4]
 8009dd0:	f1b8 0300 	subs.w	r3, r8, #0
 8009dd4:	d023      	beq.n	8009e1e <__d2b+0x82>
 8009dd6:	4668      	mov	r0, sp
 8009dd8:	9300      	str	r3, [sp, #0]
 8009dda:	f7ff fd0c 	bl	80097f6 <__lo0bits>
 8009dde:	e9dd 1200 	ldrd	r1, r2, [sp]
 8009de2:	b1d0      	cbz	r0, 8009e1a <__d2b+0x7e>
 8009de4:	f1c0 0320 	rsb	r3, r0, #32
 8009de8:	fa02 f303 	lsl.w	r3, r2, r3
 8009dec:	430b      	orrs	r3, r1
 8009dee:	40c2      	lsrs	r2, r0
 8009df0:	6163      	str	r3, [r4, #20]
 8009df2:	9201      	str	r2, [sp, #4]
 8009df4:	9b01      	ldr	r3, [sp, #4]
 8009df6:	61a3      	str	r3, [r4, #24]
 8009df8:	2b00      	cmp	r3, #0
 8009dfa:	bf0c      	ite	eq
 8009dfc:	2201      	moveq	r2, #1
 8009dfe:	2202      	movne	r2, #2
 8009e00:	6122      	str	r2, [r4, #16]
 8009e02:	b1a5      	cbz	r5, 8009e2e <__d2b+0x92>
 8009e04:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8009e08:	4405      	add	r5, r0
 8009e0a:	603d      	str	r5, [r7, #0]
 8009e0c:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8009e10:	6030      	str	r0, [r6, #0]
 8009e12:	4620      	mov	r0, r4
 8009e14:	b003      	add	sp, #12
 8009e16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009e1a:	6161      	str	r1, [r4, #20]
 8009e1c:	e7ea      	b.n	8009df4 <__d2b+0x58>
 8009e1e:	a801      	add	r0, sp, #4
 8009e20:	f7ff fce9 	bl	80097f6 <__lo0bits>
 8009e24:	9b01      	ldr	r3, [sp, #4]
 8009e26:	6163      	str	r3, [r4, #20]
 8009e28:	3020      	adds	r0, #32
 8009e2a:	2201      	movs	r2, #1
 8009e2c:	e7e8      	b.n	8009e00 <__d2b+0x64>
 8009e2e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8009e32:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8009e36:	6038      	str	r0, [r7, #0]
 8009e38:	6918      	ldr	r0, [r3, #16]
 8009e3a:	f7ff fcbd 	bl	80097b8 <__hi0bits>
 8009e3e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8009e42:	e7e5      	b.n	8009e10 <__d2b+0x74>
 8009e44:	0800c9ef 	.word	0x0800c9ef
 8009e48:	0800ca00 	.word	0x0800ca00

08009e4c <__ratio>:
 8009e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e50:	b085      	sub	sp, #20
 8009e52:	e9cd 1000 	strd	r1, r0, [sp]
 8009e56:	a902      	add	r1, sp, #8
 8009e58:	f7ff ff56 	bl	8009d08 <__b2d>
 8009e5c:	9800      	ldr	r0, [sp, #0]
 8009e5e:	a903      	add	r1, sp, #12
 8009e60:	ec55 4b10 	vmov	r4, r5, d0
 8009e64:	f7ff ff50 	bl	8009d08 <__b2d>
 8009e68:	9b01      	ldr	r3, [sp, #4]
 8009e6a:	6919      	ldr	r1, [r3, #16]
 8009e6c:	9b00      	ldr	r3, [sp, #0]
 8009e6e:	691b      	ldr	r3, [r3, #16]
 8009e70:	1ac9      	subs	r1, r1, r3
 8009e72:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8009e76:	1a9b      	subs	r3, r3, r2
 8009e78:	ec5b ab10 	vmov	sl, fp, d0
 8009e7c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8009e80:	2b00      	cmp	r3, #0
 8009e82:	bfce      	itee	gt
 8009e84:	462a      	movgt	r2, r5
 8009e86:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8009e8a:	465a      	movle	r2, fp
 8009e8c:	462f      	mov	r7, r5
 8009e8e:	46d9      	mov	r9, fp
 8009e90:	bfcc      	ite	gt
 8009e92:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8009e96:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8009e9a:	464b      	mov	r3, r9
 8009e9c:	4652      	mov	r2, sl
 8009e9e:	4620      	mov	r0, r4
 8009ea0:	4639      	mov	r1, r7
 8009ea2:	f7f6 fcdb 	bl	800085c <__aeabi_ddiv>
 8009ea6:	ec41 0b10 	vmov	d0, r0, r1
 8009eaa:	b005      	add	sp, #20
 8009eac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009eb0 <__copybits>:
 8009eb0:	3901      	subs	r1, #1
 8009eb2:	b570      	push	{r4, r5, r6, lr}
 8009eb4:	1149      	asrs	r1, r1, #5
 8009eb6:	6914      	ldr	r4, [r2, #16]
 8009eb8:	3101      	adds	r1, #1
 8009eba:	f102 0314 	add.w	r3, r2, #20
 8009ebe:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8009ec2:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8009ec6:	1f05      	subs	r5, r0, #4
 8009ec8:	42a3      	cmp	r3, r4
 8009eca:	d30c      	bcc.n	8009ee6 <__copybits+0x36>
 8009ecc:	1aa3      	subs	r3, r4, r2
 8009ece:	3b11      	subs	r3, #17
 8009ed0:	f023 0303 	bic.w	r3, r3, #3
 8009ed4:	3211      	adds	r2, #17
 8009ed6:	42a2      	cmp	r2, r4
 8009ed8:	bf88      	it	hi
 8009eda:	2300      	movhi	r3, #0
 8009edc:	4418      	add	r0, r3
 8009ede:	2300      	movs	r3, #0
 8009ee0:	4288      	cmp	r0, r1
 8009ee2:	d305      	bcc.n	8009ef0 <__copybits+0x40>
 8009ee4:	bd70      	pop	{r4, r5, r6, pc}
 8009ee6:	f853 6b04 	ldr.w	r6, [r3], #4
 8009eea:	f845 6f04 	str.w	r6, [r5, #4]!
 8009eee:	e7eb      	b.n	8009ec8 <__copybits+0x18>
 8009ef0:	f840 3b04 	str.w	r3, [r0], #4
 8009ef4:	e7f4      	b.n	8009ee0 <__copybits+0x30>

08009ef6 <__any_on>:
 8009ef6:	f100 0214 	add.w	r2, r0, #20
 8009efa:	6900      	ldr	r0, [r0, #16]
 8009efc:	114b      	asrs	r3, r1, #5
 8009efe:	4298      	cmp	r0, r3
 8009f00:	b510      	push	{r4, lr}
 8009f02:	db11      	blt.n	8009f28 <__any_on+0x32>
 8009f04:	dd0a      	ble.n	8009f1c <__any_on+0x26>
 8009f06:	f011 011f 	ands.w	r1, r1, #31
 8009f0a:	d007      	beq.n	8009f1c <__any_on+0x26>
 8009f0c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8009f10:	fa24 f001 	lsr.w	r0, r4, r1
 8009f14:	fa00 f101 	lsl.w	r1, r0, r1
 8009f18:	428c      	cmp	r4, r1
 8009f1a:	d10b      	bne.n	8009f34 <__any_on+0x3e>
 8009f1c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8009f20:	4293      	cmp	r3, r2
 8009f22:	d803      	bhi.n	8009f2c <__any_on+0x36>
 8009f24:	2000      	movs	r0, #0
 8009f26:	bd10      	pop	{r4, pc}
 8009f28:	4603      	mov	r3, r0
 8009f2a:	e7f7      	b.n	8009f1c <__any_on+0x26>
 8009f2c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8009f30:	2900      	cmp	r1, #0
 8009f32:	d0f5      	beq.n	8009f20 <__any_on+0x2a>
 8009f34:	2001      	movs	r0, #1
 8009f36:	e7f6      	b.n	8009f26 <__any_on+0x30>

08009f38 <sulp>:
 8009f38:	b570      	push	{r4, r5, r6, lr}
 8009f3a:	4604      	mov	r4, r0
 8009f3c:	460d      	mov	r5, r1
 8009f3e:	ec45 4b10 	vmov	d0, r4, r5
 8009f42:	4616      	mov	r6, r2
 8009f44:	f7ff feba 	bl	8009cbc <__ulp>
 8009f48:	ec51 0b10 	vmov	r0, r1, d0
 8009f4c:	b17e      	cbz	r6, 8009f6e <sulp+0x36>
 8009f4e:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8009f52:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8009f56:	2b00      	cmp	r3, #0
 8009f58:	dd09      	ble.n	8009f6e <sulp+0x36>
 8009f5a:	051b      	lsls	r3, r3, #20
 8009f5c:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8009f60:	2400      	movs	r4, #0
 8009f62:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8009f66:	4622      	mov	r2, r4
 8009f68:	462b      	mov	r3, r5
 8009f6a:	f7f6 fb4d 	bl	8000608 <__aeabi_dmul>
 8009f6e:	ec41 0b10 	vmov	d0, r0, r1
 8009f72:	bd70      	pop	{r4, r5, r6, pc}
 8009f74:	0000      	movs	r0, r0
	...

08009f78 <_strtod_l>:
 8009f78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f7c:	b09f      	sub	sp, #124	@ 0x7c
 8009f7e:	460c      	mov	r4, r1
 8009f80:	9217      	str	r2, [sp, #92]	@ 0x5c
 8009f82:	2200      	movs	r2, #0
 8009f84:	921a      	str	r2, [sp, #104]	@ 0x68
 8009f86:	9005      	str	r0, [sp, #20]
 8009f88:	f04f 0a00 	mov.w	sl, #0
 8009f8c:	f04f 0b00 	mov.w	fp, #0
 8009f90:	460a      	mov	r2, r1
 8009f92:	9219      	str	r2, [sp, #100]	@ 0x64
 8009f94:	7811      	ldrb	r1, [r2, #0]
 8009f96:	292b      	cmp	r1, #43	@ 0x2b
 8009f98:	d04a      	beq.n	800a030 <_strtod_l+0xb8>
 8009f9a:	d838      	bhi.n	800a00e <_strtod_l+0x96>
 8009f9c:	290d      	cmp	r1, #13
 8009f9e:	d832      	bhi.n	800a006 <_strtod_l+0x8e>
 8009fa0:	2908      	cmp	r1, #8
 8009fa2:	d832      	bhi.n	800a00a <_strtod_l+0x92>
 8009fa4:	2900      	cmp	r1, #0
 8009fa6:	d03b      	beq.n	800a020 <_strtod_l+0xa8>
 8009fa8:	2200      	movs	r2, #0
 8009faa:	920b      	str	r2, [sp, #44]	@ 0x2c
 8009fac:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8009fae:	782a      	ldrb	r2, [r5, #0]
 8009fb0:	2a30      	cmp	r2, #48	@ 0x30
 8009fb2:	f040 80b3 	bne.w	800a11c <_strtod_l+0x1a4>
 8009fb6:	786a      	ldrb	r2, [r5, #1]
 8009fb8:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8009fbc:	2a58      	cmp	r2, #88	@ 0x58
 8009fbe:	d16e      	bne.n	800a09e <_strtod_l+0x126>
 8009fc0:	9302      	str	r3, [sp, #8]
 8009fc2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009fc4:	9301      	str	r3, [sp, #4]
 8009fc6:	ab1a      	add	r3, sp, #104	@ 0x68
 8009fc8:	9300      	str	r3, [sp, #0]
 8009fca:	4a8e      	ldr	r2, [pc, #568]	@ (800a204 <_strtod_l+0x28c>)
 8009fcc:	9805      	ldr	r0, [sp, #20]
 8009fce:	ab1b      	add	r3, sp, #108	@ 0x6c
 8009fd0:	a919      	add	r1, sp, #100	@ 0x64
 8009fd2:	f001 facb 	bl	800b56c <__gethex>
 8009fd6:	f010 060f 	ands.w	r6, r0, #15
 8009fda:	4604      	mov	r4, r0
 8009fdc:	d005      	beq.n	8009fea <_strtod_l+0x72>
 8009fde:	2e06      	cmp	r6, #6
 8009fe0:	d128      	bne.n	800a034 <_strtod_l+0xbc>
 8009fe2:	3501      	adds	r5, #1
 8009fe4:	2300      	movs	r3, #0
 8009fe6:	9519      	str	r5, [sp, #100]	@ 0x64
 8009fe8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009fea:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8009fec:	2b00      	cmp	r3, #0
 8009fee:	f040 858e 	bne.w	800ab0e <_strtod_l+0xb96>
 8009ff2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009ff4:	b1cb      	cbz	r3, 800a02a <_strtod_l+0xb2>
 8009ff6:	4652      	mov	r2, sl
 8009ff8:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 8009ffc:	ec43 2b10 	vmov	d0, r2, r3
 800a000:	b01f      	add	sp, #124	@ 0x7c
 800a002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a006:	2920      	cmp	r1, #32
 800a008:	d1ce      	bne.n	8009fa8 <_strtod_l+0x30>
 800a00a:	3201      	adds	r2, #1
 800a00c:	e7c1      	b.n	8009f92 <_strtod_l+0x1a>
 800a00e:	292d      	cmp	r1, #45	@ 0x2d
 800a010:	d1ca      	bne.n	8009fa8 <_strtod_l+0x30>
 800a012:	2101      	movs	r1, #1
 800a014:	910b      	str	r1, [sp, #44]	@ 0x2c
 800a016:	1c51      	adds	r1, r2, #1
 800a018:	9119      	str	r1, [sp, #100]	@ 0x64
 800a01a:	7852      	ldrb	r2, [r2, #1]
 800a01c:	2a00      	cmp	r2, #0
 800a01e:	d1c5      	bne.n	8009fac <_strtod_l+0x34>
 800a020:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800a022:	9419      	str	r4, [sp, #100]	@ 0x64
 800a024:	2b00      	cmp	r3, #0
 800a026:	f040 8570 	bne.w	800ab0a <_strtod_l+0xb92>
 800a02a:	4652      	mov	r2, sl
 800a02c:	465b      	mov	r3, fp
 800a02e:	e7e5      	b.n	8009ffc <_strtod_l+0x84>
 800a030:	2100      	movs	r1, #0
 800a032:	e7ef      	b.n	800a014 <_strtod_l+0x9c>
 800a034:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800a036:	b13a      	cbz	r2, 800a048 <_strtod_l+0xd0>
 800a038:	2135      	movs	r1, #53	@ 0x35
 800a03a:	a81c      	add	r0, sp, #112	@ 0x70
 800a03c:	f7ff ff38 	bl	8009eb0 <__copybits>
 800a040:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800a042:	9805      	ldr	r0, [sp, #20]
 800a044:	f7ff fb06 	bl	8009654 <_Bfree>
 800a048:	3e01      	subs	r6, #1
 800a04a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800a04c:	2e04      	cmp	r6, #4
 800a04e:	d806      	bhi.n	800a05e <_strtod_l+0xe6>
 800a050:	e8df f006 	tbb	[pc, r6]
 800a054:	201d0314 	.word	0x201d0314
 800a058:	14          	.byte	0x14
 800a059:	00          	.byte	0x00
 800a05a:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 800a05e:	05e1      	lsls	r1, r4, #23
 800a060:	bf48      	it	mi
 800a062:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 800a066:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800a06a:	0d1b      	lsrs	r3, r3, #20
 800a06c:	051b      	lsls	r3, r3, #20
 800a06e:	2b00      	cmp	r3, #0
 800a070:	d1bb      	bne.n	8009fea <_strtod_l+0x72>
 800a072:	f7fe fbb7 	bl	80087e4 <__errno>
 800a076:	2322      	movs	r3, #34	@ 0x22
 800a078:	6003      	str	r3, [r0, #0]
 800a07a:	e7b6      	b.n	8009fea <_strtod_l+0x72>
 800a07c:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 800a080:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 800a084:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 800a088:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800a08c:	e7e7      	b.n	800a05e <_strtod_l+0xe6>
 800a08e:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 800a20c <_strtod_l+0x294>
 800a092:	e7e4      	b.n	800a05e <_strtod_l+0xe6>
 800a094:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 800a098:	f04f 3aff 	mov.w	sl, #4294967295
 800a09c:	e7df      	b.n	800a05e <_strtod_l+0xe6>
 800a09e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800a0a0:	1c5a      	adds	r2, r3, #1
 800a0a2:	9219      	str	r2, [sp, #100]	@ 0x64
 800a0a4:	785b      	ldrb	r3, [r3, #1]
 800a0a6:	2b30      	cmp	r3, #48	@ 0x30
 800a0a8:	d0f9      	beq.n	800a09e <_strtod_l+0x126>
 800a0aa:	2b00      	cmp	r3, #0
 800a0ac:	d09d      	beq.n	8009fea <_strtod_l+0x72>
 800a0ae:	2301      	movs	r3, #1
 800a0b0:	9309      	str	r3, [sp, #36]	@ 0x24
 800a0b2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800a0b4:	930c      	str	r3, [sp, #48]	@ 0x30
 800a0b6:	2300      	movs	r3, #0
 800a0b8:	9308      	str	r3, [sp, #32]
 800a0ba:	930a      	str	r3, [sp, #40]	@ 0x28
 800a0bc:	461f      	mov	r7, r3
 800a0be:	220a      	movs	r2, #10
 800a0c0:	9819      	ldr	r0, [sp, #100]	@ 0x64
 800a0c2:	7805      	ldrb	r5, [r0, #0]
 800a0c4:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 800a0c8:	b2d9      	uxtb	r1, r3
 800a0ca:	2909      	cmp	r1, #9
 800a0cc:	d928      	bls.n	800a120 <_strtod_l+0x1a8>
 800a0ce:	494e      	ldr	r1, [pc, #312]	@ (800a208 <_strtod_l+0x290>)
 800a0d0:	2201      	movs	r2, #1
 800a0d2:	f001 f98b 	bl	800b3ec <strncmp>
 800a0d6:	2800      	cmp	r0, #0
 800a0d8:	d032      	beq.n	800a140 <_strtod_l+0x1c8>
 800a0da:	2000      	movs	r0, #0
 800a0dc:	462a      	mov	r2, r5
 800a0de:	4681      	mov	r9, r0
 800a0e0:	463d      	mov	r5, r7
 800a0e2:	4603      	mov	r3, r0
 800a0e4:	2a65      	cmp	r2, #101	@ 0x65
 800a0e6:	d001      	beq.n	800a0ec <_strtod_l+0x174>
 800a0e8:	2a45      	cmp	r2, #69	@ 0x45
 800a0ea:	d114      	bne.n	800a116 <_strtod_l+0x19e>
 800a0ec:	b91d      	cbnz	r5, 800a0f6 <_strtod_l+0x17e>
 800a0ee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a0f0:	4302      	orrs	r2, r0
 800a0f2:	d095      	beq.n	800a020 <_strtod_l+0xa8>
 800a0f4:	2500      	movs	r5, #0
 800a0f6:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 800a0f8:	1c62      	adds	r2, r4, #1
 800a0fa:	9219      	str	r2, [sp, #100]	@ 0x64
 800a0fc:	7862      	ldrb	r2, [r4, #1]
 800a0fe:	2a2b      	cmp	r2, #43	@ 0x2b
 800a100:	d077      	beq.n	800a1f2 <_strtod_l+0x27a>
 800a102:	2a2d      	cmp	r2, #45	@ 0x2d
 800a104:	d07b      	beq.n	800a1fe <_strtod_l+0x286>
 800a106:	f04f 0c00 	mov.w	ip, #0
 800a10a:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 800a10e:	2909      	cmp	r1, #9
 800a110:	f240 8082 	bls.w	800a218 <_strtod_l+0x2a0>
 800a114:	9419      	str	r4, [sp, #100]	@ 0x64
 800a116:	f04f 0800 	mov.w	r8, #0
 800a11a:	e0a2      	b.n	800a262 <_strtod_l+0x2ea>
 800a11c:	2300      	movs	r3, #0
 800a11e:	e7c7      	b.n	800a0b0 <_strtod_l+0x138>
 800a120:	2f08      	cmp	r7, #8
 800a122:	bfd5      	itete	le
 800a124:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 800a126:	9908      	ldrgt	r1, [sp, #32]
 800a128:	fb02 3301 	mlale	r3, r2, r1, r3
 800a12c:	fb02 3301 	mlagt	r3, r2, r1, r3
 800a130:	f100 0001 	add.w	r0, r0, #1
 800a134:	bfd4      	ite	le
 800a136:	930a      	strle	r3, [sp, #40]	@ 0x28
 800a138:	9308      	strgt	r3, [sp, #32]
 800a13a:	3701      	adds	r7, #1
 800a13c:	9019      	str	r0, [sp, #100]	@ 0x64
 800a13e:	e7bf      	b.n	800a0c0 <_strtod_l+0x148>
 800a140:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800a142:	1c5a      	adds	r2, r3, #1
 800a144:	9219      	str	r2, [sp, #100]	@ 0x64
 800a146:	785a      	ldrb	r2, [r3, #1]
 800a148:	b37f      	cbz	r7, 800a1aa <_strtod_l+0x232>
 800a14a:	4681      	mov	r9, r0
 800a14c:	463d      	mov	r5, r7
 800a14e:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 800a152:	2b09      	cmp	r3, #9
 800a154:	d912      	bls.n	800a17c <_strtod_l+0x204>
 800a156:	2301      	movs	r3, #1
 800a158:	e7c4      	b.n	800a0e4 <_strtod_l+0x16c>
 800a15a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800a15c:	1c5a      	adds	r2, r3, #1
 800a15e:	9219      	str	r2, [sp, #100]	@ 0x64
 800a160:	785a      	ldrb	r2, [r3, #1]
 800a162:	3001      	adds	r0, #1
 800a164:	2a30      	cmp	r2, #48	@ 0x30
 800a166:	d0f8      	beq.n	800a15a <_strtod_l+0x1e2>
 800a168:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 800a16c:	2b08      	cmp	r3, #8
 800a16e:	f200 84d3 	bhi.w	800ab18 <_strtod_l+0xba0>
 800a172:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800a174:	930c      	str	r3, [sp, #48]	@ 0x30
 800a176:	4681      	mov	r9, r0
 800a178:	2000      	movs	r0, #0
 800a17a:	4605      	mov	r5, r0
 800a17c:	3a30      	subs	r2, #48	@ 0x30
 800a17e:	f100 0301 	add.w	r3, r0, #1
 800a182:	d02a      	beq.n	800a1da <_strtod_l+0x262>
 800a184:	4499      	add	r9, r3
 800a186:	eb00 0c05 	add.w	ip, r0, r5
 800a18a:	462b      	mov	r3, r5
 800a18c:	210a      	movs	r1, #10
 800a18e:	4563      	cmp	r3, ip
 800a190:	d10d      	bne.n	800a1ae <_strtod_l+0x236>
 800a192:	1c69      	adds	r1, r5, #1
 800a194:	4401      	add	r1, r0
 800a196:	4428      	add	r0, r5
 800a198:	2808      	cmp	r0, #8
 800a19a:	dc16      	bgt.n	800a1ca <_strtod_l+0x252>
 800a19c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800a19e:	230a      	movs	r3, #10
 800a1a0:	fb03 2300 	mla	r3, r3, r0, r2
 800a1a4:	930a      	str	r3, [sp, #40]	@ 0x28
 800a1a6:	2300      	movs	r3, #0
 800a1a8:	e018      	b.n	800a1dc <_strtod_l+0x264>
 800a1aa:	4638      	mov	r0, r7
 800a1ac:	e7da      	b.n	800a164 <_strtod_l+0x1ec>
 800a1ae:	2b08      	cmp	r3, #8
 800a1b0:	f103 0301 	add.w	r3, r3, #1
 800a1b4:	dc03      	bgt.n	800a1be <_strtod_l+0x246>
 800a1b6:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800a1b8:	434e      	muls	r6, r1
 800a1ba:	960a      	str	r6, [sp, #40]	@ 0x28
 800a1bc:	e7e7      	b.n	800a18e <_strtod_l+0x216>
 800a1be:	2b10      	cmp	r3, #16
 800a1c0:	bfde      	ittt	le
 800a1c2:	9e08      	ldrle	r6, [sp, #32]
 800a1c4:	434e      	mulle	r6, r1
 800a1c6:	9608      	strle	r6, [sp, #32]
 800a1c8:	e7e1      	b.n	800a18e <_strtod_l+0x216>
 800a1ca:	280f      	cmp	r0, #15
 800a1cc:	dceb      	bgt.n	800a1a6 <_strtod_l+0x22e>
 800a1ce:	9808      	ldr	r0, [sp, #32]
 800a1d0:	230a      	movs	r3, #10
 800a1d2:	fb03 2300 	mla	r3, r3, r0, r2
 800a1d6:	9308      	str	r3, [sp, #32]
 800a1d8:	e7e5      	b.n	800a1a6 <_strtod_l+0x22e>
 800a1da:	4629      	mov	r1, r5
 800a1dc:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800a1de:	1c50      	adds	r0, r2, #1
 800a1e0:	9019      	str	r0, [sp, #100]	@ 0x64
 800a1e2:	7852      	ldrb	r2, [r2, #1]
 800a1e4:	4618      	mov	r0, r3
 800a1e6:	460d      	mov	r5, r1
 800a1e8:	e7b1      	b.n	800a14e <_strtod_l+0x1d6>
 800a1ea:	f04f 0900 	mov.w	r9, #0
 800a1ee:	2301      	movs	r3, #1
 800a1f0:	e77d      	b.n	800a0ee <_strtod_l+0x176>
 800a1f2:	f04f 0c00 	mov.w	ip, #0
 800a1f6:	1ca2      	adds	r2, r4, #2
 800a1f8:	9219      	str	r2, [sp, #100]	@ 0x64
 800a1fa:	78a2      	ldrb	r2, [r4, #2]
 800a1fc:	e785      	b.n	800a10a <_strtod_l+0x192>
 800a1fe:	f04f 0c01 	mov.w	ip, #1
 800a202:	e7f8      	b.n	800a1f6 <_strtod_l+0x27e>
 800a204:	0800cb70 	.word	0x0800cb70
 800a208:	0800cb58 	.word	0x0800cb58
 800a20c:	7ff00000 	.word	0x7ff00000
 800a210:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800a212:	1c51      	adds	r1, r2, #1
 800a214:	9119      	str	r1, [sp, #100]	@ 0x64
 800a216:	7852      	ldrb	r2, [r2, #1]
 800a218:	2a30      	cmp	r2, #48	@ 0x30
 800a21a:	d0f9      	beq.n	800a210 <_strtod_l+0x298>
 800a21c:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 800a220:	2908      	cmp	r1, #8
 800a222:	f63f af78 	bhi.w	800a116 <_strtod_l+0x19e>
 800a226:	3a30      	subs	r2, #48	@ 0x30
 800a228:	920e      	str	r2, [sp, #56]	@ 0x38
 800a22a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800a22c:	920f      	str	r2, [sp, #60]	@ 0x3c
 800a22e:	f04f 080a 	mov.w	r8, #10
 800a232:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800a234:	1c56      	adds	r6, r2, #1
 800a236:	9619      	str	r6, [sp, #100]	@ 0x64
 800a238:	7852      	ldrb	r2, [r2, #1]
 800a23a:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 800a23e:	f1be 0f09 	cmp.w	lr, #9
 800a242:	d939      	bls.n	800a2b8 <_strtod_l+0x340>
 800a244:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800a246:	1a76      	subs	r6, r6, r1
 800a248:	2e08      	cmp	r6, #8
 800a24a:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 800a24e:	dc03      	bgt.n	800a258 <_strtod_l+0x2e0>
 800a250:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800a252:	4588      	cmp	r8, r1
 800a254:	bfa8      	it	ge
 800a256:	4688      	movge	r8, r1
 800a258:	f1bc 0f00 	cmp.w	ip, #0
 800a25c:	d001      	beq.n	800a262 <_strtod_l+0x2ea>
 800a25e:	f1c8 0800 	rsb	r8, r8, #0
 800a262:	2d00      	cmp	r5, #0
 800a264:	d14e      	bne.n	800a304 <_strtod_l+0x38c>
 800a266:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800a268:	4308      	orrs	r0, r1
 800a26a:	f47f aebe 	bne.w	8009fea <_strtod_l+0x72>
 800a26e:	2b00      	cmp	r3, #0
 800a270:	f47f aed6 	bne.w	800a020 <_strtod_l+0xa8>
 800a274:	2a69      	cmp	r2, #105	@ 0x69
 800a276:	d028      	beq.n	800a2ca <_strtod_l+0x352>
 800a278:	dc25      	bgt.n	800a2c6 <_strtod_l+0x34e>
 800a27a:	2a49      	cmp	r2, #73	@ 0x49
 800a27c:	d025      	beq.n	800a2ca <_strtod_l+0x352>
 800a27e:	2a4e      	cmp	r2, #78	@ 0x4e
 800a280:	f47f aece 	bne.w	800a020 <_strtod_l+0xa8>
 800a284:	499b      	ldr	r1, [pc, #620]	@ (800a4f4 <_strtod_l+0x57c>)
 800a286:	a819      	add	r0, sp, #100	@ 0x64
 800a288:	f001 fb92 	bl	800b9b0 <__match>
 800a28c:	2800      	cmp	r0, #0
 800a28e:	f43f aec7 	beq.w	800a020 <_strtod_l+0xa8>
 800a292:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800a294:	781b      	ldrb	r3, [r3, #0]
 800a296:	2b28      	cmp	r3, #40	@ 0x28
 800a298:	d12e      	bne.n	800a2f8 <_strtod_l+0x380>
 800a29a:	4997      	ldr	r1, [pc, #604]	@ (800a4f8 <_strtod_l+0x580>)
 800a29c:	aa1c      	add	r2, sp, #112	@ 0x70
 800a29e:	a819      	add	r0, sp, #100	@ 0x64
 800a2a0:	f001 fb9a 	bl	800b9d8 <__hexnan>
 800a2a4:	2805      	cmp	r0, #5
 800a2a6:	d127      	bne.n	800a2f8 <_strtod_l+0x380>
 800a2a8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800a2aa:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 800a2ae:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 800a2b2:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 800a2b6:	e698      	b.n	8009fea <_strtod_l+0x72>
 800a2b8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800a2ba:	fb08 2101 	mla	r1, r8, r1, r2
 800a2be:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 800a2c2:	920e      	str	r2, [sp, #56]	@ 0x38
 800a2c4:	e7b5      	b.n	800a232 <_strtod_l+0x2ba>
 800a2c6:	2a6e      	cmp	r2, #110	@ 0x6e
 800a2c8:	e7da      	b.n	800a280 <_strtod_l+0x308>
 800a2ca:	498c      	ldr	r1, [pc, #560]	@ (800a4fc <_strtod_l+0x584>)
 800a2cc:	a819      	add	r0, sp, #100	@ 0x64
 800a2ce:	f001 fb6f 	bl	800b9b0 <__match>
 800a2d2:	2800      	cmp	r0, #0
 800a2d4:	f43f aea4 	beq.w	800a020 <_strtod_l+0xa8>
 800a2d8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800a2da:	4989      	ldr	r1, [pc, #548]	@ (800a500 <_strtod_l+0x588>)
 800a2dc:	3b01      	subs	r3, #1
 800a2de:	a819      	add	r0, sp, #100	@ 0x64
 800a2e0:	9319      	str	r3, [sp, #100]	@ 0x64
 800a2e2:	f001 fb65 	bl	800b9b0 <__match>
 800a2e6:	b910      	cbnz	r0, 800a2ee <_strtod_l+0x376>
 800a2e8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800a2ea:	3301      	adds	r3, #1
 800a2ec:	9319      	str	r3, [sp, #100]	@ 0x64
 800a2ee:	f8df b220 	ldr.w	fp, [pc, #544]	@ 800a510 <_strtod_l+0x598>
 800a2f2:	f04f 0a00 	mov.w	sl, #0
 800a2f6:	e678      	b.n	8009fea <_strtod_l+0x72>
 800a2f8:	4882      	ldr	r0, [pc, #520]	@ (800a504 <_strtod_l+0x58c>)
 800a2fa:	f001 f8ad 	bl	800b458 <nan>
 800a2fe:	ec5b ab10 	vmov	sl, fp, d0
 800a302:	e672      	b.n	8009fea <_strtod_l+0x72>
 800a304:	eba8 0309 	sub.w	r3, r8, r9
 800a308:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800a30a:	9309      	str	r3, [sp, #36]	@ 0x24
 800a30c:	2f00      	cmp	r7, #0
 800a30e:	bf08      	it	eq
 800a310:	462f      	moveq	r7, r5
 800a312:	2d10      	cmp	r5, #16
 800a314:	462c      	mov	r4, r5
 800a316:	bfa8      	it	ge
 800a318:	2410      	movge	r4, #16
 800a31a:	f7f6 f8fb 	bl	8000514 <__aeabi_ui2d>
 800a31e:	2d09      	cmp	r5, #9
 800a320:	4682      	mov	sl, r0
 800a322:	468b      	mov	fp, r1
 800a324:	dc13      	bgt.n	800a34e <_strtod_l+0x3d6>
 800a326:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a328:	2b00      	cmp	r3, #0
 800a32a:	f43f ae5e 	beq.w	8009fea <_strtod_l+0x72>
 800a32e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a330:	dd78      	ble.n	800a424 <_strtod_l+0x4ac>
 800a332:	2b16      	cmp	r3, #22
 800a334:	dc5f      	bgt.n	800a3f6 <_strtod_l+0x47e>
 800a336:	4974      	ldr	r1, [pc, #464]	@ (800a508 <_strtod_l+0x590>)
 800a338:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800a33c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800a340:	4652      	mov	r2, sl
 800a342:	465b      	mov	r3, fp
 800a344:	f7f6 f960 	bl	8000608 <__aeabi_dmul>
 800a348:	4682      	mov	sl, r0
 800a34a:	468b      	mov	fp, r1
 800a34c:	e64d      	b.n	8009fea <_strtod_l+0x72>
 800a34e:	4b6e      	ldr	r3, [pc, #440]	@ (800a508 <_strtod_l+0x590>)
 800a350:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800a354:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 800a358:	f7f6 f956 	bl	8000608 <__aeabi_dmul>
 800a35c:	4682      	mov	sl, r0
 800a35e:	9808      	ldr	r0, [sp, #32]
 800a360:	468b      	mov	fp, r1
 800a362:	f7f6 f8d7 	bl	8000514 <__aeabi_ui2d>
 800a366:	4602      	mov	r2, r0
 800a368:	460b      	mov	r3, r1
 800a36a:	4650      	mov	r0, sl
 800a36c:	4659      	mov	r1, fp
 800a36e:	f7f5 ff95 	bl	800029c <__adddf3>
 800a372:	2d0f      	cmp	r5, #15
 800a374:	4682      	mov	sl, r0
 800a376:	468b      	mov	fp, r1
 800a378:	ddd5      	ble.n	800a326 <_strtod_l+0x3ae>
 800a37a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a37c:	1b2c      	subs	r4, r5, r4
 800a37e:	441c      	add	r4, r3
 800a380:	2c00      	cmp	r4, #0
 800a382:	f340 8096 	ble.w	800a4b2 <_strtod_l+0x53a>
 800a386:	f014 030f 	ands.w	r3, r4, #15
 800a38a:	d00a      	beq.n	800a3a2 <_strtod_l+0x42a>
 800a38c:	495e      	ldr	r1, [pc, #376]	@ (800a508 <_strtod_l+0x590>)
 800a38e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800a392:	4652      	mov	r2, sl
 800a394:	465b      	mov	r3, fp
 800a396:	e9d1 0100 	ldrd	r0, r1, [r1]
 800a39a:	f7f6 f935 	bl	8000608 <__aeabi_dmul>
 800a39e:	4682      	mov	sl, r0
 800a3a0:	468b      	mov	fp, r1
 800a3a2:	f034 040f 	bics.w	r4, r4, #15
 800a3a6:	d073      	beq.n	800a490 <_strtod_l+0x518>
 800a3a8:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 800a3ac:	dd48      	ble.n	800a440 <_strtod_l+0x4c8>
 800a3ae:	2400      	movs	r4, #0
 800a3b0:	46a0      	mov	r8, r4
 800a3b2:	940a      	str	r4, [sp, #40]	@ 0x28
 800a3b4:	46a1      	mov	r9, r4
 800a3b6:	9a05      	ldr	r2, [sp, #20]
 800a3b8:	f8df b154 	ldr.w	fp, [pc, #340]	@ 800a510 <_strtod_l+0x598>
 800a3bc:	2322      	movs	r3, #34	@ 0x22
 800a3be:	6013      	str	r3, [r2, #0]
 800a3c0:	f04f 0a00 	mov.w	sl, #0
 800a3c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a3c6:	2b00      	cmp	r3, #0
 800a3c8:	f43f ae0f 	beq.w	8009fea <_strtod_l+0x72>
 800a3cc:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800a3ce:	9805      	ldr	r0, [sp, #20]
 800a3d0:	f7ff f940 	bl	8009654 <_Bfree>
 800a3d4:	9805      	ldr	r0, [sp, #20]
 800a3d6:	4649      	mov	r1, r9
 800a3d8:	f7ff f93c 	bl	8009654 <_Bfree>
 800a3dc:	9805      	ldr	r0, [sp, #20]
 800a3de:	4641      	mov	r1, r8
 800a3e0:	f7ff f938 	bl	8009654 <_Bfree>
 800a3e4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800a3e6:	9805      	ldr	r0, [sp, #20]
 800a3e8:	f7ff f934 	bl	8009654 <_Bfree>
 800a3ec:	9805      	ldr	r0, [sp, #20]
 800a3ee:	4621      	mov	r1, r4
 800a3f0:	f7ff f930 	bl	8009654 <_Bfree>
 800a3f4:	e5f9      	b.n	8009fea <_strtod_l+0x72>
 800a3f6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a3f8:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 800a3fc:	4293      	cmp	r3, r2
 800a3fe:	dbbc      	blt.n	800a37a <_strtod_l+0x402>
 800a400:	4c41      	ldr	r4, [pc, #260]	@ (800a508 <_strtod_l+0x590>)
 800a402:	f1c5 050f 	rsb	r5, r5, #15
 800a406:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800a40a:	4652      	mov	r2, sl
 800a40c:	465b      	mov	r3, fp
 800a40e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800a412:	f7f6 f8f9 	bl	8000608 <__aeabi_dmul>
 800a416:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a418:	1b5d      	subs	r5, r3, r5
 800a41a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800a41e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800a422:	e78f      	b.n	800a344 <_strtod_l+0x3cc>
 800a424:	3316      	adds	r3, #22
 800a426:	dba8      	blt.n	800a37a <_strtod_l+0x402>
 800a428:	4b37      	ldr	r3, [pc, #220]	@ (800a508 <_strtod_l+0x590>)
 800a42a:	eba9 0808 	sub.w	r8, r9, r8
 800a42e:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 800a432:	e9d8 2300 	ldrd	r2, r3, [r8]
 800a436:	4650      	mov	r0, sl
 800a438:	4659      	mov	r1, fp
 800a43a:	f7f6 fa0f 	bl	800085c <__aeabi_ddiv>
 800a43e:	e783      	b.n	800a348 <_strtod_l+0x3d0>
 800a440:	4b32      	ldr	r3, [pc, #200]	@ (800a50c <_strtod_l+0x594>)
 800a442:	9308      	str	r3, [sp, #32]
 800a444:	2300      	movs	r3, #0
 800a446:	1124      	asrs	r4, r4, #4
 800a448:	4650      	mov	r0, sl
 800a44a:	4659      	mov	r1, fp
 800a44c:	461e      	mov	r6, r3
 800a44e:	2c01      	cmp	r4, #1
 800a450:	dc21      	bgt.n	800a496 <_strtod_l+0x51e>
 800a452:	b10b      	cbz	r3, 800a458 <_strtod_l+0x4e0>
 800a454:	4682      	mov	sl, r0
 800a456:	468b      	mov	fp, r1
 800a458:	492c      	ldr	r1, [pc, #176]	@ (800a50c <_strtod_l+0x594>)
 800a45a:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 800a45e:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800a462:	4652      	mov	r2, sl
 800a464:	465b      	mov	r3, fp
 800a466:	e9d1 0100 	ldrd	r0, r1, [r1]
 800a46a:	f7f6 f8cd 	bl	8000608 <__aeabi_dmul>
 800a46e:	4b28      	ldr	r3, [pc, #160]	@ (800a510 <_strtod_l+0x598>)
 800a470:	460a      	mov	r2, r1
 800a472:	400b      	ands	r3, r1
 800a474:	4927      	ldr	r1, [pc, #156]	@ (800a514 <_strtod_l+0x59c>)
 800a476:	428b      	cmp	r3, r1
 800a478:	4682      	mov	sl, r0
 800a47a:	d898      	bhi.n	800a3ae <_strtod_l+0x436>
 800a47c:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 800a480:	428b      	cmp	r3, r1
 800a482:	bf86      	itte	hi
 800a484:	f8df b090 	ldrhi.w	fp, [pc, #144]	@ 800a518 <_strtod_l+0x5a0>
 800a488:	f04f 3aff 	movhi.w	sl, #4294967295
 800a48c:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 800a490:	2300      	movs	r3, #0
 800a492:	9308      	str	r3, [sp, #32]
 800a494:	e07a      	b.n	800a58c <_strtod_l+0x614>
 800a496:	07e2      	lsls	r2, r4, #31
 800a498:	d505      	bpl.n	800a4a6 <_strtod_l+0x52e>
 800a49a:	9b08      	ldr	r3, [sp, #32]
 800a49c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a4a0:	f7f6 f8b2 	bl	8000608 <__aeabi_dmul>
 800a4a4:	2301      	movs	r3, #1
 800a4a6:	9a08      	ldr	r2, [sp, #32]
 800a4a8:	3208      	adds	r2, #8
 800a4aa:	3601      	adds	r6, #1
 800a4ac:	1064      	asrs	r4, r4, #1
 800a4ae:	9208      	str	r2, [sp, #32]
 800a4b0:	e7cd      	b.n	800a44e <_strtod_l+0x4d6>
 800a4b2:	d0ed      	beq.n	800a490 <_strtod_l+0x518>
 800a4b4:	4264      	negs	r4, r4
 800a4b6:	f014 020f 	ands.w	r2, r4, #15
 800a4ba:	d00a      	beq.n	800a4d2 <_strtod_l+0x55a>
 800a4bc:	4b12      	ldr	r3, [pc, #72]	@ (800a508 <_strtod_l+0x590>)
 800a4be:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800a4c2:	4650      	mov	r0, sl
 800a4c4:	4659      	mov	r1, fp
 800a4c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a4ca:	f7f6 f9c7 	bl	800085c <__aeabi_ddiv>
 800a4ce:	4682      	mov	sl, r0
 800a4d0:	468b      	mov	fp, r1
 800a4d2:	1124      	asrs	r4, r4, #4
 800a4d4:	d0dc      	beq.n	800a490 <_strtod_l+0x518>
 800a4d6:	2c1f      	cmp	r4, #31
 800a4d8:	dd20      	ble.n	800a51c <_strtod_l+0x5a4>
 800a4da:	2400      	movs	r4, #0
 800a4dc:	46a0      	mov	r8, r4
 800a4de:	940a      	str	r4, [sp, #40]	@ 0x28
 800a4e0:	46a1      	mov	r9, r4
 800a4e2:	9a05      	ldr	r2, [sp, #20]
 800a4e4:	2322      	movs	r3, #34	@ 0x22
 800a4e6:	f04f 0a00 	mov.w	sl, #0
 800a4ea:	f04f 0b00 	mov.w	fp, #0
 800a4ee:	6013      	str	r3, [r2, #0]
 800a4f0:	e768      	b.n	800a3c4 <_strtod_l+0x44c>
 800a4f2:	bf00      	nop
 800a4f4:	0800c90b 	.word	0x0800c90b
 800a4f8:	0800cb5c 	.word	0x0800cb5c
 800a4fc:	0800c903 	.word	0x0800c903
 800a500:	0800c976 	.word	0x0800c976
 800a504:	0800c972 	.word	0x0800c972
 800a508:	0800ca90 	.word	0x0800ca90
 800a50c:	0800ca68 	.word	0x0800ca68
 800a510:	7ff00000 	.word	0x7ff00000
 800a514:	7ca00000 	.word	0x7ca00000
 800a518:	7fefffff 	.word	0x7fefffff
 800a51c:	f014 0310 	ands.w	r3, r4, #16
 800a520:	bf18      	it	ne
 800a522:	236a      	movne	r3, #106	@ 0x6a
 800a524:	4ea9      	ldr	r6, [pc, #676]	@ (800a7cc <_strtod_l+0x854>)
 800a526:	9308      	str	r3, [sp, #32]
 800a528:	4650      	mov	r0, sl
 800a52a:	4659      	mov	r1, fp
 800a52c:	2300      	movs	r3, #0
 800a52e:	07e2      	lsls	r2, r4, #31
 800a530:	d504      	bpl.n	800a53c <_strtod_l+0x5c4>
 800a532:	e9d6 2300 	ldrd	r2, r3, [r6]
 800a536:	f7f6 f867 	bl	8000608 <__aeabi_dmul>
 800a53a:	2301      	movs	r3, #1
 800a53c:	1064      	asrs	r4, r4, #1
 800a53e:	f106 0608 	add.w	r6, r6, #8
 800a542:	d1f4      	bne.n	800a52e <_strtod_l+0x5b6>
 800a544:	b10b      	cbz	r3, 800a54a <_strtod_l+0x5d2>
 800a546:	4682      	mov	sl, r0
 800a548:	468b      	mov	fp, r1
 800a54a:	9b08      	ldr	r3, [sp, #32]
 800a54c:	b1b3      	cbz	r3, 800a57c <_strtod_l+0x604>
 800a54e:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800a552:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 800a556:	2b00      	cmp	r3, #0
 800a558:	4659      	mov	r1, fp
 800a55a:	dd0f      	ble.n	800a57c <_strtod_l+0x604>
 800a55c:	2b1f      	cmp	r3, #31
 800a55e:	dd55      	ble.n	800a60c <_strtod_l+0x694>
 800a560:	2b34      	cmp	r3, #52	@ 0x34
 800a562:	bfde      	ittt	le
 800a564:	f04f 33ff 	movle.w	r3, #4294967295
 800a568:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 800a56c:	4093      	lslle	r3, r2
 800a56e:	f04f 0a00 	mov.w	sl, #0
 800a572:	bfcc      	ite	gt
 800a574:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 800a578:	ea03 0b01 	andle.w	fp, r3, r1
 800a57c:	2200      	movs	r2, #0
 800a57e:	2300      	movs	r3, #0
 800a580:	4650      	mov	r0, sl
 800a582:	4659      	mov	r1, fp
 800a584:	f7f6 faa8 	bl	8000ad8 <__aeabi_dcmpeq>
 800a588:	2800      	cmp	r0, #0
 800a58a:	d1a6      	bne.n	800a4da <_strtod_l+0x562>
 800a58c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a58e:	9300      	str	r3, [sp, #0]
 800a590:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800a592:	9805      	ldr	r0, [sp, #20]
 800a594:	462b      	mov	r3, r5
 800a596:	463a      	mov	r2, r7
 800a598:	f7ff f8c4 	bl	8009724 <__s2b>
 800a59c:	900a      	str	r0, [sp, #40]	@ 0x28
 800a59e:	2800      	cmp	r0, #0
 800a5a0:	f43f af05 	beq.w	800a3ae <_strtod_l+0x436>
 800a5a4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a5a6:	2a00      	cmp	r2, #0
 800a5a8:	eba9 0308 	sub.w	r3, r9, r8
 800a5ac:	bfa8      	it	ge
 800a5ae:	2300      	movge	r3, #0
 800a5b0:	9312      	str	r3, [sp, #72]	@ 0x48
 800a5b2:	2400      	movs	r4, #0
 800a5b4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800a5b8:	9316      	str	r3, [sp, #88]	@ 0x58
 800a5ba:	46a0      	mov	r8, r4
 800a5bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a5be:	9805      	ldr	r0, [sp, #20]
 800a5c0:	6859      	ldr	r1, [r3, #4]
 800a5c2:	f7ff f807 	bl	80095d4 <_Balloc>
 800a5c6:	4681      	mov	r9, r0
 800a5c8:	2800      	cmp	r0, #0
 800a5ca:	f43f aef4 	beq.w	800a3b6 <_strtod_l+0x43e>
 800a5ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800a5d0:	691a      	ldr	r2, [r3, #16]
 800a5d2:	3202      	adds	r2, #2
 800a5d4:	f103 010c 	add.w	r1, r3, #12
 800a5d8:	0092      	lsls	r2, r2, #2
 800a5da:	300c      	adds	r0, #12
 800a5dc:	f7fe f92f 	bl	800883e <memcpy>
 800a5e0:	ec4b ab10 	vmov	d0, sl, fp
 800a5e4:	9805      	ldr	r0, [sp, #20]
 800a5e6:	aa1c      	add	r2, sp, #112	@ 0x70
 800a5e8:	a91b      	add	r1, sp, #108	@ 0x6c
 800a5ea:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 800a5ee:	f7ff fbd5 	bl	8009d9c <__d2b>
 800a5f2:	901a      	str	r0, [sp, #104]	@ 0x68
 800a5f4:	2800      	cmp	r0, #0
 800a5f6:	f43f aede 	beq.w	800a3b6 <_strtod_l+0x43e>
 800a5fa:	9805      	ldr	r0, [sp, #20]
 800a5fc:	2101      	movs	r1, #1
 800a5fe:	f7ff f927 	bl	8009850 <__i2b>
 800a602:	4680      	mov	r8, r0
 800a604:	b948      	cbnz	r0, 800a61a <_strtod_l+0x6a2>
 800a606:	f04f 0800 	mov.w	r8, #0
 800a60a:	e6d4      	b.n	800a3b6 <_strtod_l+0x43e>
 800a60c:	f04f 32ff 	mov.w	r2, #4294967295
 800a610:	fa02 f303 	lsl.w	r3, r2, r3
 800a614:	ea03 0a0a 	and.w	sl, r3, sl
 800a618:	e7b0      	b.n	800a57c <_strtod_l+0x604>
 800a61a:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 800a61c:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800a61e:	2d00      	cmp	r5, #0
 800a620:	bfab      	itete	ge
 800a622:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 800a624:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 800a626:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 800a628:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 800a62a:	bfac      	ite	ge
 800a62c:	18ef      	addge	r7, r5, r3
 800a62e:	1b5e      	sublt	r6, r3, r5
 800a630:	9b08      	ldr	r3, [sp, #32]
 800a632:	1aed      	subs	r5, r5, r3
 800a634:	4415      	add	r5, r2
 800a636:	4b66      	ldr	r3, [pc, #408]	@ (800a7d0 <_strtod_l+0x858>)
 800a638:	3d01      	subs	r5, #1
 800a63a:	429d      	cmp	r5, r3
 800a63c:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 800a640:	da50      	bge.n	800a6e4 <_strtod_l+0x76c>
 800a642:	1b5b      	subs	r3, r3, r5
 800a644:	2b1f      	cmp	r3, #31
 800a646:	eba2 0203 	sub.w	r2, r2, r3
 800a64a:	f04f 0101 	mov.w	r1, #1
 800a64e:	dc3d      	bgt.n	800a6cc <_strtod_l+0x754>
 800a650:	fa01 f303 	lsl.w	r3, r1, r3
 800a654:	9313      	str	r3, [sp, #76]	@ 0x4c
 800a656:	2300      	movs	r3, #0
 800a658:	9310      	str	r3, [sp, #64]	@ 0x40
 800a65a:	18bd      	adds	r5, r7, r2
 800a65c:	9b08      	ldr	r3, [sp, #32]
 800a65e:	42af      	cmp	r7, r5
 800a660:	4416      	add	r6, r2
 800a662:	441e      	add	r6, r3
 800a664:	463b      	mov	r3, r7
 800a666:	bfa8      	it	ge
 800a668:	462b      	movge	r3, r5
 800a66a:	42b3      	cmp	r3, r6
 800a66c:	bfa8      	it	ge
 800a66e:	4633      	movge	r3, r6
 800a670:	2b00      	cmp	r3, #0
 800a672:	bfc2      	ittt	gt
 800a674:	1aed      	subgt	r5, r5, r3
 800a676:	1af6      	subgt	r6, r6, r3
 800a678:	1aff      	subgt	r7, r7, r3
 800a67a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800a67c:	2b00      	cmp	r3, #0
 800a67e:	dd16      	ble.n	800a6ae <_strtod_l+0x736>
 800a680:	4641      	mov	r1, r8
 800a682:	9805      	ldr	r0, [sp, #20]
 800a684:	461a      	mov	r2, r3
 800a686:	f7ff f9a3 	bl	80099d0 <__pow5mult>
 800a68a:	4680      	mov	r8, r0
 800a68c:	2800      	cmp	r0, #0
 800a68e:	d0ba      	beq.n	800a606 <_strtod_l+0x68e>
 800a690:	4601      	mov	r1, r0
 800a692:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800a694:	9805      	ldr	r0, [sp, #20]
 800a696:	f7ff f8f1 	bl	800987c <__multiply>
 800a69a:	900e      	str	r0, [sp, #56]	@ 0x38
 800a69c:	2800      	cmp	r0, #0
 800a69e:	f43f ae8a 	beq.w	800a3b6 <_strtod_l+0x43e>
 800a6a2:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800a6a4:	9805      	ldr	r0, [sp, #20]
 800a6a6:	f7fe ffd5 	bl	8009654 <_Bfree>
 800a6aa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a6ac:	931a      	str	r3, [sp, #104]	@ 0x68
 800a6ae:	2d00      	cmp	r5, #0
 800a6b0:	dc1d      	bgt.n	800a6ee <_strtod_l+0x776>
 800a6b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a6b4:	2b00      	cmp	r3, #0
 800a6b6:	dd23      	ble.n	800a700 <_strtod_l+0x788>
 800a6b8:	4649      	mov	r1, r9
 800a6ba:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800a6bc:	9805      	ldr	r0, [sp, #20]
 800a6be:	f7ff f987 	bl	80099d0 <__pow5mult>
 800a6c2:	4681      	mov	r9, r0
 800a6c4:	b9e0      	cbnz	r0, 800a700 <_strtod_l+0x788>
 800a6c6:	f04f 0900 	mov.w	r9, #0
 800a6ca:	e674      	b.n	800a3b6 <_strtod_l+0x43e>
 800a6cc:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 800a6d0:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 800a6d4:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 800a6d8:	35e2      	adds	r5, #226	@ 0xe2
 800a6da:	fa01 f305 	lsl.w	r3, r1, r5
 800a6de:	9310      	str	r3, [sp, #64]	@ 0x40
 800a6e0:	9113      	str	r1, [sp, #76]	@ 0x4c
 800a6e2:	e7ba      	b.n	800a65a <_strtod_l+0x6e2>
 800a6e4:	2300      	movs	r3, #0
 800a6e6:	9310      	str	r3, [sp, #64]	@ 0x40
 800a6e8:	2301      	movs	r3, #1
 800a6ea:	9313      	str	r3, [sp, #76]	@ 0x4c
 800a6ec:	e7b5      	b.n	800a65a <_strtod_l+0x6e2>
 800a6ee:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800a6f0:	9805      	ldr	r0, [sp, #20]
 800a6f2:	462a      	mov	r2, r5
 800a6f4:	f7ff f9c6 	bl	8009a84 <__lshift>
 800a6f8:	901a      	str	r0, [sp, #104]	@ 0x68
 800a6fa:	2800      	cmp	r0, #0
 800a6fc:	d1d9      	bne.n	800a6b2 <_strtod_l+0x73a>
 800a6fe:	e65a      	b.n	800a3b6 <_strtod_l+0x43e>
 800a700:	2e00      	cmp	r6, #0
 800a702:	dd07      	ble.n	800a714 <_strtod_l+0x79c>
 800a704:	4649      	mov	r1, r9
 800a706:	9805      	ldr	r0, [sp, #20]
 800a708:	4632      	mov	r2, r6
 800a70a:	f7ff f9bb 	bl	8009a84 <__lshift>
 800a70e:	4681      	mov	r9, r0
 800a710:	2800      	cmp	r0, #0
 800a712:	d0d8      	beq.n	800a6c6 <_strtod_l+0x74e>
 800a714:	2f00      	cmp	r7, #0
 800a716:	dd08      	ble.n	800a72a <_strtod_l+0x7b2>
 800a718:	4641      	mov	r1, r8
 800a71a:	9805      	ldr	r0, [sp, #20]
 800a71c:	463a      	mov	r2, r7
 800a71e:	f7ff f9b1 	bl	8009a84 <__lshift>
 800a722:	4680      	mov	r8, r0
 800a724:	2800      	cmp	r0, #0
 800a726:	f43f ae46 	beq.w	800a3b6 <_strtod_l+0x43e>
 800a72a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800a72c:	9805      	ldr	r0, [sp, #20]
 800a72e:	464a      	mov	r2, r9
 800a730:	f7ff fa30 	bl	8009b94 <__mdiff>
 800a734:	4604      	mov	r4, r0
 800a736:	2800      	cmp	r0, #0
 800a738:	f43f ae3d 	beq.w	800a3b6 <_strtod_l+0x43e>
 800a73c:	68c3      	ldr	r3, [r0, #12]
 800a73e:	930f      	str	r3, [sp, #60]	@ 0x3c
 800a740:	2300      	movs	r3, #0
 800a742:	60c3      	str	r3, [r0, #12]
 800a744:	4641      	mov	r1, r8
 800a746:	f7ff fa09 	bl	8009b5c <__mcmp>
 800a74a:	2800      	cmp	r0, #0
 800a74c:	da46      	bge.n	800a7dc <_strtod_l+0x864>
 800a74e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a750:	ea53 030a 	orrs.w	r3, r3, sl
 800a754:	d16c      	bne.n	800a830 <_strtod_l+0x8b8>
 800a756:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800a75a:	2b00      	cmp	r3, #0
 800a75c:	d168      	bne.n	800a830 <_strtod_l+0x8b8>
 800a75e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800a762:	0d1b      	lsrs	r3, r3, #20
 800a764:	051b      	lsls	r3, r3, #20
 800a766:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800a76a:	d961      	bls.n	800a830 <_strtod_l+0x8b8>
 800a76c:	6963      	ldr	r3, [r4, #20]
 800a76e:	b913      	cbnz	r3, 800a776 <_strtod_l+0x7fe>
 800a770:	6923      	ldr	r3, [r4, #16]
 800a772:	2b01      	cmp	r3, #1
 800a774:	dd5c      	ble.n	800a830 <_strtod_l+0x8b8>
 800a776:	4621      	mov	r1, r4
 800a778:	2201      	movs	r2, #1
 800a77a:	9805      	ldr	r0, [sp, #20]
 800a77c:	f7ff f982 	bl	8009a84 <__lshift>
 800a780:	4641      	mov	r1, r8
 800a782:	4604      	mov	r4, r0
 800a784:	f7ff f9ea 	bl	8009b5c <__mcmp>
 800a788:	2800      	cmp	r0, #0
 800a78a:	dd51      	ble.n	800a830 <_strtod_l+0x8b8>
 800a78c:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800a790:	9a08      	ldr	r2, [sp, #32]
 800a792:	0d1b      	lsrs	r3, r3, #20
 800a794:	051b      	lsls	r3, r3, #20
 800a796:	2a00      	cmp	r2, #0
 800a798:	d06b      	beq.n	800a872 <_strtod_l+0x8fa>
 800a79a:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800a79e:	d868      	bhi.n	800a872 <_strtod_l+0x8fa>
 800a7a0:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 800a7a4:	f67f ae9d 	bls.w	800a4e2 <_strtod_l+0x56a>
 800a7a8:	4b0a      	ldr	r3, [pc, #40]	@ (800a7d4 <_strtod_l+0x85c>)
 800a7aa:	4650      	mov	r0, sl
 800a7ac:	4659      	mov	r1, fp
 800a7ae:	2200      	movs	r2, #0
 800a7b0:	f7f5 ff2a 	bl	8000608 <__aeabi_dmul>
 800a7b4:	4b08      	ldr	r3, [pc, #32]	@ (800a7d8 <_strtod_l+0x860>)
 800a7b6:	400b      	ands	r3, r1
 800a7b8:	4682      	mov	sl, r0
 800a7ba:	468b      	mov	fp, r1
 800a7bc:	2b00      	cmp	r3, #0
 800a7be:	f47f ae05 	bne.w	800a3cc <_strtod_l+0x454>
 800a7c2:	9a05      	ldr	r2, [sp, #20]
 800a7c4:	2322      	movs	r3, #34	@ 0x22
 800a7c6:	6013      	str	r3, [r2, #0]
 800a7c8:	e600      	b.n	800a3cc <_strtod_l+0x454>
 800a7ca:	bf00      	nop
 800a7cc:	0800cb88 	.word	0x0800cb88
 800a7d0:	fffffc02 	.word	0xfffffc02
 800a7d4:	39500000 	.word	0x39500000
 800a7d8:	7ff00000 	.word	0x7ff00000
 800a7dc:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800a7e0:	d165      	bne.n	800a8ae <_strtod_l+0x936>
 800a7e2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800a7e4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800a7e8:	b35a      	cbz	r2, 800a842 <_strtod_l+0x8ca>
 800a7ea:	4a9f      	ldr	r2, [pc, #636]	@ (800aa68 <_strtod_l+0xaf0>)
 800a7ec:	4293      	cmp	r3, r2
 800a7ee:	d12b      	bne.n	800a848 <_strtod_l+0x8d0>
 800a7f0:	9b08      	ldr	r3, [sp, #32]
 800a7f2:	4651      	mov	r1, sl
 800a7f4:	b303      	cbz	r3, 800a838 <_strtod_l+0x8c0>
 800a7f6:	4b9d      	ldr	r3, [pc, #628]	@ (800aa6c <_strtod_l+0xaf4>)
 800a7f8:	465a      	mov	r2, fp
 800a7fa:	4013      	ands	r3, r2
 800a7fc:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 800a800:	f04f 32ff 	mov.w	r2, #4294967295
 800a804:	d81b      	bhi.n	800a83e <_strtod_l+0x8c6>
 800a806:	0d1b      	lsrs	r3, r3, #20
 800a808:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800a80c:	fa02 f303 	lsl.w	r3, r2, r3
 800a810:	4299      	cmp	r1, r3
 800a812:	d119      	bne.n	800a848 <_strtod_l+0x8d0>
 800a814:	4b96      	ldr	r3, [pc, #600]	@ (800aa70 <_strtod_l+0xaf8>)
 800a816:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800a818:	429a      	cmp	r2, r3
 800a81a:	d102      	bne.n	800a822 <_strtod_l+0x8aa>
 800a81c:	3101      	adds	r1, #1
 800a81e:	f43f adca 	beq.w	800a3b6 <_strtod_l+0x43e>
 800a822:	4b92      	ldr	r3, [pc, #584]	@ (800aa6c <_strtod_l+0xaf4>)
 800a824:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800a826:	401a      	ands	r2, r3
 800a828:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 800a82c:	f04f 0a00 	mov.w	sl, #0
 800a830:	9b08      	ldr	r3, [sp, #32]
 800a832:	2b00      	cmp	r3, #0
 800a834:	d1b8      	bne.n	800a7a8 <_strtod_l+0x830>
 800a836:	e5c9      	b.n	800a3cc <_strtod_l+0x454>
 800a838:	f04f 33ff 	mov.w	r3, #4294967295
 800a83c:	e7e8      	b.n	800a810 <_strtod_l+0x898>
 800a83e:	4613      	mov	r3, r2
 800a840:	e7e6      	b.n	800a810 <_strtod_l+0x898>
 800a842:	ea53 030a 	orrs.w	r3, r3, sl
 800a846:	d0a1      	beq.n	800a78c <_strtod_l+0x814>
 800a848:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800a84a:	b1db      	cbz	r3, 800a884 <_strtod_l+0x90c>
 800a84c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800a84e:	4213      	tst	r3, r2
 800a850:	d0ee      	beq.n	800a830 <_strtod_l+0x8b8>
 800a852:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a854:	9a08      	ldr	r2, [sp, #32]
 800a856:	4650      	mov	r0, sl
 800a858:	4659      	mov	r1, fp
 800a85a:	b1bb      	cbz	r3, 800a88c <_strtod_l+0x914>
 800a85c:	f7ff fb6c 	bl	8009f38 <sulp>
 800a860:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800a864:	ec53 2b10 	vmov	r2, r3, d0
 800a868:	f7f5 fd18 	bl	800029c <__adddf3>
 800a86c:	4682      	mov	sl, r0
 800a86e:	468b      	mov	fp, r1
 800a870:	e7de      	b.n	800a830 <_strtod_l+0x8b8>
 800a872:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 800a876:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800a87a:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800a87e:	f04f 3aff 	mov.w	sl, #4294967295
 800a882:	e7d5      	b.n	800a830 <_strtod_l+0x8b8>
 800a884:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800a886:	ea13 0f0a 	tst.w	r3, sl
 800a88a:	e7e1      	b.n	800a850 <_strtod_l+0x8d8>
 800a88c:	f7ff fb54 	bl	8009f38 <sulp>
 800a890:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800a894:	ec53 2b10 	vmov	r2, r3, d0
 800a898:	f7f5 fcfe 	bl	8000298 <__aeabi_dsub>
 800a89c:	2200      	movs	r2, #0
 800a89e:	2300      	movs	r3, #0
 800a8a0:	4682      	mov	sl, r0
 800a8a2:	468b      	mov	fp, r1
 800a8a4:	f7f6 f918 	bl	8000ad8 <__aeabi_dcmpeq>
 800a8a8:	2800      	cmp	r0, #0
 800a8aa:	d0c1      	beq.n	800a830 <_strtod_l+0x8b8>
 800a8ac:	e619      	b.n	800a4e2 <_strtod_l+0x56a>
 800a8ae:	4641      	mov	r1, r8
 800a8b0:	4620      	mov	r0, r4
 800a8b2:	f7ff facb 	bl	8009e4c <__ratio>
 800a8b6:	ec57 6b10 	vmov	r6, r7, d0
 800a8ba:	2200      	movs	r2, #0
 800a8bc:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800a8c0:	4630      	mov	r0, r6
 800a8c2:	4639      	mov	r1, r7
 800a8c4:	f7f6 f91c 	bl	8000b00 <__aeabi_dcmple>
 800a8c8:	2800      	cmp	r0, #0
 800a8ca:	d06f      	beq.n	800a9ac <_strtod_l+0xa34>
 800a8cc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a8ce:	2b00      	cmp	r3, #0
 800a8d0:	d17a      	bne.n	800a9c8 <_strtod_l+0xa50>
 800a8d2:	f1ba 0f00 	cmp.w	sl, #0
 800a8d6:	d158      	bne.n	800a98a <_strtod_l+0xa12>
 800a8d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a8da:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800a8de:	2b00      	cmp	r3, #0
 800a8e0:	d15a      	bne.n	800a998 <_strtod_l+0xa20>
 800a8e2:	4b64      	ldr	r3, [pc, #400]	@ (800aa74 <_strtod_l+0xafc>)
 800a8e4:	2200      	movs	r2, #0
 800a8e6:	4630      	mov	r0, r6
 800a8e8:	4639      	mov	r1, r7
 800a8ea:	f7f6 f8ff 	bl	8000aec <__aeabi_dcmplt>
 800a8ee:	2800      	cmp	r0, #0
 800a8f0:	d159      	bne.n	800a9a6 <_strtod_l+0xa2e>
 800a8f2:	4630      	mov	r0, r6
 800a8f4:	4639      	mov	r1, r7
 800a8f6:	4b60      	ldr	r3, [pc, #384]	@ (800aa78 <_strtod_l+0xb00>)
 800a8f8:	2200      	movs	r2, #0
 800a8fa:	f7f5 fe85 	bl	8000608 <__aeabi_dmul>
 800a8fe:	4606      	mov	r6, r0
 800a900:	460f      	mov	r7, r1
 800a902:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 800a906:	9606      	str	r6, [sp, #24]
 800a908:	9307      	str	r3, [sp, #28]
 800a90a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800a90e:	4d57      	ldr	r5, [pc, #348]	@ (800aa6c <_strtod_l+0xaf4>)
 800a910:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800a914:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a916:	401d      	ands	r5, r3
 800a918:	4b58      	ldr	r3, [pc, #352]	@ (800aa7c <_strtod_l+0xb04>)
 800a91a:	429d      	cmp	r5, r3
 800a91c:	f040 80b2 	bne.w	800aa84 <_strtod_l+0xb0c>
 800a920:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a922:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 800a926:	ec4b ab10 	vmov	d0, sl, fp
 800a92a:	f7ff f9c7 	bl	8009cbc <__ulp>
 800a92e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800a932:	ec51 0b10 	vmov	r0, r1, d0
 800a936:	f7f5 fe67 	bl	8000608 <__aeabi_dmul>
 800a93a:	4652      	mov	r2, sl
 800a93c:	465b      	mov	r3, fp
 800a93e:	f7f5 fcad 	bl	800029c <__adddf3>
 800a942:	460b      	mov	r3, r1
 800a944:	4949      	ldr	r1, [pc, #292]	@ (800aa6c <_strtod_l+0xaf4>)
 800a946:	4a4e      	ldr	r2, [pc, #312]	@ (800aa80 <_strtod_l+0xb08>)
 800a948:	4019      	ands	r1, r3
 800a94a:	4291      	cmp	r1, r2
 800a94c:	4682      	mov	sl, r0
 800a94e:	d942      	bls.n	800a9d6 <_strtod_l+0xa5e>
 800a950:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800a952:	4b47      	ldr	r3, [pc, #284]	@ (800aa70 <_strtod_l+0xaf8>)
 800a954:	429a      	cmp	r2, r3
 800a956:	d103      	bne.n	800a960 <_strtod_l+0x9e8>
 800a958:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800a95a:	3301      	adds	r3, #1
 800a95c:	f43f ad2b 	beq.w	800a3b6 <_strtod_l+0x43e>
 800a960:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 800aa70 <_strtod_l+0xaf8>
 800a964:	f04f 3aff 	mov.w	sl, #4294967295
 800a968:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800a96a:	9805      	ldr	r0, [sp, #20]
 800a96c:	f7fe fe72 	bl	8009654 <_Bfree>
 800a970:	9805      	ldr	r0, [sp, #20]
 800a972:	4649      	mov	r1, r9
 800a974:	f7fe fe6e 	bl	8009654 <_Bfree>
 800a978:	9805      	ldr	r0, [sp, #20]
 800a97a:	4641      	mov	r1, r8
 800a97c:	f7fe fe6a 	bl	8009654 <_Bfree>
 800a980:	9805      	ldr	r0, [sp, #20]
 800a982:	4621      	mov	r1, r4
 800a984:	f7fe fe66 	bl	8009654 <_Bfree>
 800a988:	e618      	b.n	800a5bc <_strtod_l+0x644>
 800a98a:	f1ba 0f01 	cmp.w	sl, #1
 800a98e:	d103      	bne.n	800a998 <_strtod_l+0xa20>
 800a990:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a992:	2b00      	cmp	r3, #0
 800a994:	f43f ada5 	beq.w	800a4e2 <_strtod_l+0x56a>
 800a998:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 800aa48 <_strtod_l+0xad0>
 800a99c:	4f35      	ldr	r7, [pc, #212]	@ (800aa74 <_strtod_l+0xafc>)
 800a99e:	ed8d 7b06 	vstr	d7, [sp, #24]
 800a9a2:	2600      	movs	r6, #0
 800a9a4:	e7b1      	b.n	800a90a <_strtod_l+0x992>
 800a9a6:	4f34      	ldr	r7, [pc, #208]	@ (800aa78 <_strtod_l+0xb00>)
 800a9a8:	2600      	movs	r6, #0
 800a9aa:	e7aa      	b.n	800a902 <_strtod_l+0x98a>
 800a9ac:	4b32      	ldr	r3, [pc, #200]	@ (800aa78 <_strtod_l+0xb00>)
 800a9ae:	4630      	mov	r0, r6
 800a9b0:	4639      	mov	r1, r7
 800a9b2:	2200      	movs	r2, #0
 800a9b4:	f7f5 fe28 	bl	8000608 <__aeabi_dmul>
 800a9b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800a9ba:	4606      	mov	r6, r0
 800a9bc:	460f      	mov	r7, r1
 800a9be:	2b00      	cmp	r3, #0
 800a9c0:	d09f      	beq.n	800a902 <_strtod_l+0x98a>
 800a9c2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 800a9c6:	e7a0      	b.n	800a90a <_strtod_l+0x992>
 800a9c8:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 800aa50 <_strtod_l+0xad8>
 800a9cc:	ed8d 7b06 	vstr	d7, [sp, #24]
 800a9d0:	ec57 6b17 	vmov	r6, r7, d7
 800a9d4:	e799      	b.n	800a90a <_strtod_l+0x992>
 800a9d6:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800a9da:	9b08      	ldr	r3, [sp, #32]
 800a9dc:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800a9e0:	2b00      	cmp	r3, #0
 800a9e2:	d1c1      	bne.n	800a968 <_strtod_l+0x9f0>
 800a9e4:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800a9e8:	0d1b      	lsrs	r3, r3, #20
 800a9ea:	051b      	lsls	r3, r3, #20
 800a9ec:	429d      	cmp	r5, r3
 800a9ee:	d1bb      	bne.n	800a968 <_strtod_l+0x9f0>
 800a9f0:	4630      	mov	r0, r6
 800a9f2:	4639      	mov	r1, r7
 800a9f4:	f7f6 fa76 	bl	8000ee4 <__aeabi_d2lz>
 800a9f8:	f7f5 fdd8 	bl	80005ac <__aeabi_l2d>
 800a9fc:	4602      	mov	r2, r0
 800a9fe:	460b      	mov	r3, r1
 800aa00:	4630      	mov	r0, r6
 800aa02:	4639      	mov	r1, r7
 800aa04:	f7f5 fc48 	bl	8000298 <__aeabi_dsub>
 800aa08:	460b      	mov	r3, r1
 800aa0a:	4602      	mov	r2, r0
 800aa0c:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800aa10:	f3cb 0613 	ubfx	r6, fp, #0, #20
 800aa14:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800aa16:	ea46 060a 	orr.w	r6, r6, sl
 800aa1a:	431e      	orrs	r6, r3
 800aa1c:	d06f      	beq.n	800aafe <_strtod_l+0xb86>
 800aa1e:	a30e      	add	r3, pc, #56	@ (adr r3, 800aa58 <_strtod_l+0xae0>)
 800aa20:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa24:	f7f6 f862 	bl	8000aec <__aeabi_dcmplt>
 800aa28:	2800      	cmp	r0, #0
 800aa2a:	f47f accf 	bne.w	800a3cc <_strtod_l+0x454>
 800aa2e:	a30c      	add	r3, pc, #48	@ (adr r3, 800aa60 <_strtod_l+0xae8>)
 800aa30:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa34:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800aa38:	f7f6 f876 	bl	8000b28 <__aeabi_dcmpgt>
 800aa3c:	2800      	cmp	r0, #0
 800aa3e:	d093      	beq.n	800a968 <_strtod_l+0x9f0>
 800aa40:	e4c4      	b.n	800a3cc <_strtod_l+0x454>
 800aa42:	bf00      	nop
 800aa44:	f3af 8000 	nop.w
 800aa48:	00000000 	.word	0x00000000
 800aa4c:	bff00000 	.word	0xbff00000
 800aa50:	00000000 	.word	0x00000000
 800aa54:	3ff00000 	.word	0x3ff00000
 800aa58:	94a03595 	.word	0x94a03595
 800aa5c:	3fdfffff 	.word	0x3fdfffff
 800aa60:	35afe535 	.word	0x35afe535
 800aa64:	3fe00000 	.word	0x3fe00000
 800aa68:	000fffff 	.word	0x000fffff
 800aa6c:	7ff00000 	.word	0x7ff00000
 800aa70:	7fefffff 	.word	0x7fefffff
 800aa74:	3ff00000 	.word	0x3ff00000
 800aa78:	3fe00000 	.word	0x3fe00000
 800aa7c:	7fe00000 	.word	0x7fe00000
 800aa80:	7c9fffff 	.word	0x7c9fffff
 800aa84:	9b08      	ldr	r3, [sp, #32]
 800aa86:	b323      	cbz	r3, 800aad2 <_strtod_l+0xb5a>
 800aa88:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 800aa8c:	d821      	bhi.n	800aad2 <_strtod_l+0xb5a>
 800aa8e:	a328      	add	r3, pc, #160	@ (adr r3, 800ab30 <_strtod_l+0xbb8>)
 800aa90:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa94:	4630      	mov	r0, r6
 800aa96:	4639      	mov	r1, r7
 800aa98:	f7f6 f832 	bl	8000b00 <__aeabi_dcmple>
 800aa9c:	b1a0      	cbz	r0, 800aac8 <_strtod_l+0xb50>
 800aa9e:	4639      	mov	r1, r7
 800aaa0:	4630      	mov	r0, r6
 800aaa2:	f7f6 f889 	bl	8000bb8 <__aeabi_d2uiz>
 800aaa6:	2801      	cmp	r0, #1
 800aaa8:	bf38      	it	cc
 800aaaa:	2001      	movcc	r0, #1
 800aaac:	f7f5 fd32 	bl	8000514 <__aeabi_ui2d>
 800aab0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800aab2:	4606      	mov	r6, r0
 800aab4:	460f      	mov	r7, r1
 800aab6:	b9fb      	cbnz	r3, 800aaf8 <_strtod_l+0xb80>
 800aab8:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800aabc:	9014      	str	r0, [sp, #80]	@ 0x50
 800aabe:	9315      	str	r3, [sp, #84]	@ 0x54
 800aac0:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 800aac4:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800aac8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800aaca:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800aace:	1b5b      	subs	r3, r3, r5
 800aad0:	9311      	str	r3, [sp, #68]	@ 0x44
 800aad2:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800aad6:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800aada:	f7ff f8ef 	bl	8009cbc <__ulp>
 800aade:	4650      	mov	r0, sl
 800aae0:	ec53 2b10 	vmov	r2, r3, d0
 800aae4:	4659      	mov	r1, fp
 800aae6:	f7f5 fd8f 	bl	8000608 <__aeabi_dmul>
 800aaea:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800aaee:	f7f5 fbd5 	bl	800029c <__adddf3>
 800aaf2:	4682      	mov	sl, r0
 800aaf4:	468b      	mov	fp, r1
 800aaf6:	e770      	b.n	800a9da <_strtod_l+0xa62>
 800aaf8:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 800aafc:	e7e0      	b.n	800aac0 <_strtod_l+0xb48>
 800aafe:	a30e      	add	r3, pc, #56	@ (adr r3, 800ab38 <_strtod_l+0xbc0>)
 800ab00:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab04:	f7f5 fff2 	bl	8000aec <__aeabi_dcmplt>
 800ab08:	e798      	b.n	800aa3c <_strtod_l+0xac4>
 800ab0a:	2300      	movs	r3, #0
 800ab0c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ab0e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 800ab10:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800ab12:	6013      	str	r3, [r2, #0]
 800ab14:	f7ff ba6d 	b.w	8009ff2 <_strtod_l+0x7a>
 800ab18:	2a65      	cmp	r2, #101	@ 0x65
 800ab1a:	f43f ab66 	beq.w	800a1ea <_strtod_l+0x272>
 800ab1e:	2a45      	cmp	r2, #69	@ 0x45
 800ab20:	f43f ab63 	beq.w	800a1ea <_strtod_l+0x272>
 800ab24:	2301      	movs	r3, #1
 800ab26:	f7ff bb9e 	b.w	800a266 <_strtod_l+0x2ee>
 800ab2a:	bf00      	nop
 800ab2c:	f3af 8000 	nop.w
 800ab30:	ffc00000 	.word	0xffc00000
 800ab34:	41dfffff 	.word	0x41dfffff
 800ab38:	94a03595 	.word	0x94a03595
 800ab3c:	3fcfffff 	.word	0x3fcfffff

0800ab40 <_strtod_r>:
 800ab40:	4b01      	ldr	r3, [pc, #4]	@ (800ab48 <_strtod_r+0x8>)
 800ab42:	f7ff ba19 	b.w	8009f78 <_strtod_l>
 800ab46:	bf00      	nop
 800ab48:	200005d8 	.word	0x200005d8

0800ab4c <_strtol_l.constprop.0>:
 800ab4c:	2b24      	cmp	r3, #36	@ 0x24
 800ab4e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ab52:	4686      	mov	lr, r0
 800ab54:	4690      	mov	r8, r2
 800ab56:	d801      	bhi.n	800ab5c <_strtol_l.constprop.0+0x10>
 800ab58:	2b01      	cmp	r3, #1
 800ab5a:	d106      	bne.n	800ab6a <_strtol_l.constprop.0+0x1e>
 800ab5c:	f7fd fe42 	bl	80087e4 <__errno>
 800ab60:	2316      	movs	r3, #22
 800ab62:	6003      	str	r3, [r0, #0]
 800ab64:	2000      	movs	r0, #0
 800ab66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ab6a:	4834      	ldr	r0, [pc, #208]	@ (800ac3c <_strtol_l.constprop.0+0xf0>)
 800ab6c:	460d      	mov	r5, r1
 800ab6e:	462a      	mov	r2, r5
 800ab70:	f815 4b01 	ldrb.w	r4, [r5], #1
 800ab74:	5d06      	ldrb	r6, [r0, r4]
 800ab76:	f016 0608 	ands.w	r6, r6, #8
 800ab7a:	d1f8      	bne.n	800ab6e <_strtol_l.constprop.0+0x22>
 800ab7c:	2c2d      	cmp	r4, #45	@ 0x2d
 800ab7e:	d12d      	bne.n	800abdc <_strtol_l.constprop.0+0x90>
 800ab80:	782c      	ldrb	r4, [r5, #0]
 800ab82:	2601      	movs	r6, #1
 800ab84:	1c95      	adds	r5, r2, #2
 800ab86:	f033 0210 	bics.w	r2, r3, #16
 800ab8a:	d109      	bne.n	800aba0 <_strtol_l.constprop.0+0x54>
 800ab8c:	2c30      	cmp	r4, #48	@ 0x30
 800ab8e:	d12a      	bne.n	800abe6 <_strtol_l.constprop.0+0x9a>
 800ab90:	782a      	ldrb	r2, [r5, #0]
 800ab92:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800ab96:	2a58      	cmp	r2, #88	@ 0x58
 800ab98:	d125      	bne.n	800abe6 <_strtol_l.constprop.0+0x9a>
 800ab9a:	786c      	ldrb	r4, [r5, #1]
 800ab9c:	2310      	movs	r3, #16
 800ab9e:	3502      	adds	r5, #2
 800aba0:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 800aba4:	f10c 3cff 	add.w	ip, ip, #4294967295
 800aba8:	2200      	movs	r2, #0
 800abaa:	fbbc f9f3 	udiv	r9, ip, r3
 800abae:	4610      	mov	r0, r2
 800abb0:	fb03 ca19 	mls	sl, r3, r9, ip
 800abb4:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 800abb8:	2f09      	cmp	r7, #9
 800abba:	d81b      	bhi.n	800abf4 <_strtol_l.constprop.0+0xa8>
 800abbc:	463c      	mov	r4, r7
 800abbe:	42a3      	cmp	r3, r4
 800abc0:	dd27      	ble.n	800ac12 <_strtol_l.constprop.0+0xc6>
 800abc2:	1c57      	adds	r7, r2, #1
 800abc4:	d007      	beq.n	800abd6 <_strtol_l.constprop.0+0x8a>
 800abc6:	4581      	cmp	r9, r0
 800abc8:	d320      	bcc.n	800ac0c <_strtol_l.constprop.0+0xc0>
 800abca:	d101      	bne.n	800abd0 <_strtol_l.constprop.0+0x84>
 800abcc:	45a2      	cmp	sl, r4
 800abce:	db1d      	blt.n	800ac0c <_strtol_l.constprop.0+0xc0>
 800abd0:	fb00 4003 	mla	r0, r0, r3, r4
 800abd4:	2201      	movs	r2, #1
 800abd6:	f815 4b01 	ldrb.w	r4, [r5], #1
 800abda:	e7eb      	b.n	800abb4 <_strtol_l.constprop.0+0x68>
 800abdc:	2c2b      	cmp	r4, #43	@ 0x2b
 800abde:	bf04      	itt	eq
 800abe0:	782c      	ldrbeq	r4, [r5, #0]
 800abe2:	1c95      	addeq	r5, r2, #2
 800abe4:	e7cf      	b.n	800ab86 <_strtol_l.constprop.0+0x3a>
 800abe6:	2b00      	cmp	r3, #0
 800abe8:	d1da      	bne.n	800aba0 <_strtol_l.constprop.0+0x54>
 800abea:	2c30      	cmp	r4, #48	@ 0x30
 800abec:	bf0c      	ite	eq
 800abee:	2308      	moveq	r3, #8
 800abf0:	230a      	movne	r3, #10
 800abf2:	e7d5      	b.n	800aba0 <_strtol_l.constprop.0+0x54>
 800abf4:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 800abf8:	2f19      	cmp	r7, #25
 800abfa:	d801      	bhi.n	800ac00 <_strtol_l.constprop.0+0xb4>
 800abfc:	3c37      	subs	r4, #55	@ 0x37
 800abfe:	e7de      	b.n	800abbe <_strtol_l.constprop.0+0x72>
 800ac00:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 800ac04:	2f19      	cmp	r7, #25
 800ac06:	d804      	bhi.n	800ac12 <_strtol_l.constprop.0+0xc6>
 800ac08:	3c57      	subs	r4, #87	@ 0x57
 800ac0a:	e7d8      	b.n	800abbe <_strtol_l.constprop.0+0x72>
 800ac0c:	f04f 32ff 	mov.w	r2, #4294967295
 800ac10:	e7e1      	b.n	800abd6 <_strtol_l.constprop.0+0x8a>
 800ac12:	1c53      	adds	r3, r2, #1
 800ac14:	d108      	bne.n	800ac28 <_strtol_l.constprop.0+0xdc>
 800ac16:	2322      	movs	r3, #34	@ 0x22
 800ac18:	f8ce 3000 	str.w	r3, [lr]
 800ac1c:	4660      	mov	r0, ip
 800ac1e:	f1b8 0f00 	cmp.w	r8, #0
 800ac22:	d0a0      	beq.n	800ab66 <_strtol_l.constprop.0+0x1a>
 800ac24:	1e69      	subs	r1, r5, #1
 800ac26:	e006      	b.n	800ac36 <_strtol_l.constprop.0+0xea>
 800ac28:	b106      	cbz	r6, 800ac2c <_strtol_l.constprop.0+0xe0>
 800ac2a:	4240      	negs	r0, r0
 800ac2c:	f1b8 0f00 	cmp.w	r8, #0
 800ac30:	d099      	beq.n	800ab66 <_strtol_l.constprop.0+0x1a>
 800ac32:	2a00      	cmp	r2, #0
 800ac34:	d1f6      	bne.n	800ac24 <_strtol_l.constprop.0+0xd8>
 800ac36:	f8c8 1000 	str.w	r1, [r8]
 800ac3a:	e794      	b.n	800ab66 <_strtol_l.constprop.0+0x1a>
 800ac3c:	0800cbb1 	.word	0x0800cbb1

0800ac40 <_strtol_r>:
 800ac40:	f7ff bf84 	b.w	800ab4c <_strtol_l.constprop.0>

0800ac44 <__ssputs_r>:
 800ac44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ac48:	688e      	ldr	r6, [r1, #8]
 800ac4a:	461f      	mov	r7, r3
 800ac4c:	42be      	cmp	r6, r7
 800ac4e:	680b      	ldr	r3, [r1, #0]
 800ac50:	4682      	mov	sl, r0
 800ac52:	460c      	mov	r4, r1
 800ac54:	4690      	mov	r8, r2
 800ac56:	d82d      	bhi.n	800acb4 <__ssputs_r+0x70>
 800ac58:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800ac5c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800ac60:	d026      	beq.n	800acb0 <__ssputs_r+0x6c>
 800ac62:	6965      	ldr	r5, [r4, #20]
 800ac64:	6909      	ldr	r1, [r1, #16]
 800ac66:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800ac6a:	eba3 0901 	sub.w	r9, r3, r1
 800ac6e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800ac72:	1c7b      	adds	r3, r7, #1
 800ac74:	444b      	add	r3, r9
 800ac76:	106d      	asrs	r5, r5, #1
 800ac78:	429d      	cmp	r5, r3
 800ac7a:	bf38      	it	cc
 800ac7c:	461d      	movcc	r5, r3
 800ac7e:	0553      	lsls	r3, r2, #21
 800ac80:	d527      	bpl.n	800acd2 <__ssputs_r+0x8e>
 800ac82:	4629      	mov	r1, r5
 800ac84:	f7fc fc3c 	bl	8007500 <_malloc_r>
 800ac88:	4606      	mov	r6, r0
 800ac8a:	b360      	cbz	r0, 800ace6 <__ssputs_r+0xa2>
 800ac8c:	6921      	ldr	r1, [r4, #16]
 800ac8e:	464a      	mov	r2, r9
 800ac90:	f7fd fdd5 	bl	800883e <memcpy>
 800ac94:	89a3      	ldrh	r3, [r4, #12]
 800ac96:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800ac9a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800ac9e:	81a3      	strh	r3, [r4, #12]
 800aca0:	6126      	str	r6, [r4, #16]
 800aca2:	6165      	str	r5, [r4, #20]
 800aca4:	444e      	add	r6, r9
 800aca6:	eba5 0509 	sub.w	r5, r5, r9
 800acaa:	6026      	str	r6, [r4, #0]
 800acac:	60a5      	str	r5, [r4, #8]
 800acae:	463e      	mov	r6, r7
 800acb0:	42be      	cmp	r6, r7
 800acb2:	d900      	bls.n	800acb6 <__ssputs_r+0x72>
 800acb4:	463e      	mov	r6, r7
 800acb6:	6820      	ldr	r0, [r4, #0]
 800acb8:	4632      	mov	r2, r6
 800acba:	4641      	mov	r1, r8
 800acbc:	f000 fb7c 	bl	800b3b8 <memmove>
 800acc0:	68a3      	ldr	r3, [r4, #8]
 800acc2:	1b9b      	subs	r3, r3, r6
 800acc4:	60a3      	str	r3, [r4, #8]
 800acc6:	6823      	ldr	r3, [r4, #0]
 800acc8:	4433      	add	r3, r6
 800acca:	6023      	str	r3, [r4, #0]
 800accc:	2000      	movs	r0, #0
 800acce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800acd2:	462a      	mov	r2, r5
 800acd4:	f000 ff2d 	bl	800bb32 <_realloc_r>
 800acd8:	4606      	mov	r6, r0
 800acda:	2800      	cmp	r0, #0
 800acdc:	d1e0      	bne.n	800aca0 <__ssputs_r+0x5c>
 800acde:	6921      	ldr	r1, [r4, #16]
 800ace0:	4650      	mov	r0, sl
 800ace2:	f7fe fc2d 	bl	8009540 <_free_r>
 800ace6:	230c      	movs	r3, #12
 800ace8:	f8ca 3000 	str.w	r3, [sl]
 800acec:	89a3      	ldrh	r3, [r4, #12]
 800acee:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800acf2:	81a3      	strh	r3, [r4, #12]
 800acf4:	f04f 30ff 	mov.w	r0, #4294967295
 800acf8:	e7e9      	b.n	800acce <__ssputs_r+0x8a>
	...

0800acfc <_svfiprintf_r>:
 800acfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad00:	4698      	mov	r8, r3
 800ad02:	898b      	ldrh	r3, [r1, #12]
 800ad04:	061b      	lsls	r3, r3, #24
 800ad06:	b09d      	sub	sp, #116	@ 0x74
 800ad08:	4607      	mov	r7, r0
 800ad0a:	460d      	mov	r5, r1
 800ad0c:	4614      	mov	r4, r2
 800ad0e:	d510      	bpl.n	800ad32 <_svfiprintf_r+0x36>
 800ad10:	690b      	ldr	r3, [r1, #16]
 800ad12:	b973      	cbnz	r3, 800ad32 <_svfiprintf_r+0x36>
 800ad14:	2140      	movs	r1, #64	@ 0x40
 800ad16:	f7fc fbf3 	bl	8007500 <_malloc_r>
 800ad1a:	6028      	str	r0, [r5, #0]
 800ad1c:	6128      	str	r0, [r5, #16]
 800ad1e:	b930      	cbnz	r0, 800ad2e <_svfiprintf_r+0x32>
 800ad20:	230c      	movs	r3, #12
 800ad22:	603b      	str	r3, [r7, #0]
 800ad24:	f04f 30ff 	mov.w	r0, #4294967295
 800ad28:	b01d      	add	sp, #116	@ 0x74
 800ad2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad2e:	2340      	movs	r3, #64	@ 0x40
 800ad30:	616b      	str	r3, [r5, #20]
 800ad32:	2300      	movs	r3, #0
 800ad34:	9309      	str	r3, [sp, #36]	@ 0x24
 800ad36:	2320      	movs	r3, #32
 800ad38:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800ad3c:	f8cd 800c 	str.w	r8, [sp, #12]
 800ad40:	2330      	movs	r3, #48	@ 0x30
 800ad42:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800aee0 <_svfiprintf_r+0x1e4>
 800ad46:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800ad4a:	f04f 0901 	mov.w	r9, #1
 800ad4e:	4623      	mov	r3, r4
 800ad50:	469a      	mov	sl, r3
 800ad52:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ad56:	b10a      	cbz	r2, 800ad5c <_svfiprintf_r+0x60>
 800ad58:	2a25      	cmp	r2, #37	@ 0x25
 800ad5a:	d1f9      	bne.n	800ad50 <_svfiprintf_r+0x54>
 800ad5c:	ebba 0b04 	subs.w	fp, sl, r4
 800ad60:	d00b      	beq.n	800ad7a <_svfiprintf_r+0x7e>
 800ad62:	465b      	mov	r3, fp
 800ad64:	4622      	mov	r2, r4
 800ad66:	4629      	mov	r1, r5
 800ad68:	4638      	mov	r0, r7
 800ad6a:	f7ff ff6b 	bl	800ac44 <__ssputs_r>
 800ad6e:	3001      	adds	r0, #1
 800ad70:	f000 80a7 	beq.w	800aec2 <_svfiprintf_r+0x1c6>
 800ad74:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ad76:	445a      	add	r2, fp
 800ad78:	9209      	str	r2, [sp, #36]	@ 0x24
 800ad7a:	f89a 3000 	ldrb.w	r3, [sl]
 800ad7e:	2b00      	cmp	r3, #0
 800ad80:	f000 809f 	beq.w	800aec2 <_svfiprintf_r+0x1c6>
 800ad84:	2300      	movs	r3, #0
 800ad86:	f04f 32ff 	mov.w	r2, #4294967295
 800ad8a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800ad8e:	f10a 0a01 	add.w	sl, sl, #1
 800ad92:	9304      	str	r3, [sp, #16]
 800ad94:	9307      	str	r3, [sp, #28]
 800ad96:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800ad9a:	931a      	str	r3, [sp, #104]	@ 0x68
 800ad9c:	4654      	mov	r4, sl
 800ad9e:	2205      	movs	r2, #5
 800ada0:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ada4:	484e      	ldr	r0, [pc, #312]	@ (800aee0 <_svfiprintf_r+0x1e4>)
 800ada6:	f7f5 fa1b 	bl	80001e0 <memchr>
 800adaa:	9a04      	ldr	r2, [sp, #16]
 800adac:	b9d8      	cbnz	r0, 800ade6 <_svfiprintf_r+0xea>
 800adae:	06d0      	lsls	r0, r2, #27
 800adb0:	bf44      	itt	mi
 800adb2:	2320      	movmi	r3, #32
 800adb4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800adb8:	0711      	lsls	r1, r2, #28
 800adba:	bf44      	itt	mi
 800adbc:	232b      	movmi	r3, #43	@ 0x2b
 800adbe:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800adc2:	f89a 3000 	ldrb.w	r3, [sl]
 800adc6:	2b2a      	cmp	r3, #42	@ 0x2a
 800adc8:	d015      	beq.n	800adf6 <_svfiprintf_r+0xfa>
 800adca:	9a07      	ldr	r2, [sp, #28]
 800adcc:	4654      	mov	r4, sl
 800adce:	2000      	movs	r0, #0
 800add0:	f04f 0c0a 	mov.w	ip, #10
 800add4:	4621      	mov	r1, r4
 800add6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800adda:	3b30      	subs	r3, #48	@ 0x30
 800addc:	2b09      	cmp	r3, #9
 800adde:	d94b      	bls.n	800ae78 <_svfiprintf_r+0x17c>
 800ade0:	b1b0      	cbz	r0, 800ae10 <_svfiprintf_r+0x114>
 800ade2:	9207      	str	r2, [sp, #28]
 800ade4:	e014      	b.n	800ae10 <_svfiprintf_r+0x114>
 800ade6:	eba0 0308 	sub.w	r3, r0, r8
 800adea:	fa09 f303 	lsl.w	r3, r9, r3
 800adee:	4313      	orrs	r3, r2
 800adf0:	9304      	str	r3, [sp, #16]
 800adf2:	46a2      	mov	sl, r4
 800adf4:	e7d2      	b.n	800ad9c <_svfiprintf_r+0xa0>
 800adf6:	9b03      	ldr	r3, [sp, #12]
 800adf8:	1d19      	adds	r1, r3, #4
 800adfa:	681b      	ldr	r3, [r3, #0]
 800adfc:	9103      	str	r1, [sp, #12]
 800adfe:	2b00      	cmp	r3, #0
 800ae00:	bfbb      	ittet	lt
 800ae02:	425b      	neglt	r3, r3
 800ae04:	f042 0202 	orrlt.w	r2, r2, #2
 800ae08:	9307      	strge	r3, [sp, #28]
 800ae0a:	9307      	strlt	r3, [sp, #28]
 800ae0c:	bfb8      	it	lt
 800ae0e:	9204      	strlt	r2, [sp, #16]
 800ae10:	7823      	ldrb	r3, [r4, #0]
 800ae12:	2b2e      	cmp	r3, #46	@ 0x2e
 800ae14:	d10a      	bne.n	800ae2c <_svfiprintf_r+0x130>
 800ae16:	7863      	ldrb	r3, [r4, #1]
 800ae18:	2b2a      	cmp	r3, #42	@ 0x2a
 800ae1a:	d132      	bne.n	800ae82 <_svfiprintf_r+0x186>
 800ae1c:	9b03      	ldr	r3, [sp, #12]
 800ae1e:	1d1a      	adds	r2, r3, #4
 800ae20:	681b      	ldr	r3, [r3, #0]
 800ae22:	9203      	str	r2, [sp, #12]
 800ae24:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800ae28:	3402      	adds	r4, #2
 800ae2a:	9305      	str	r3, [sp, #20]
 800ae2c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800aef0 <_svfiprintf_r+0x1f4>
 800ae30:	7821      	ldrb	r1, [r4, #0]
 800ae32:	2203      	movs	r2, #3
 800ae34:	4650      	mov	r0, sl
 800ae36:	f7f5 f9d3 	bl	80001e0 <memchr>
 800ae3a:	b138      	cbz	r0, 800ae4c <_svfiprintf_r+0x150>
 800ae3c:	9b04      	ldr	r3, [sp, #16]
 800ae3e:	eba0 000a 	sub.w	r0, r0, sl
 800ae42:	2240      	movs	r2, #64	@ 0x40
 800ae44:	4082      	lsls	r2, r0
 800ae46:	4313      	orrs	r3, r2
 800ae48:	3401      	adds	r4, #1
 800ae4a:	9304      	str	r3, [sp, #16]
 800ae4c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ae50:	4824      	ldr	r0, [pc, #144]	@ (800aee4 <_svfiprintf_r+0x1e8>)
 800ae52:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800ae56:	2206      	movs	r2, #6
 800ae58:	f7f5 f9c2 	bl	80001e0 <memchr>
 800ae5c:	2800      	cmp	r0, #0
 800ae5e:	d036      	beq.n	800aece <_svfiprintf_r+0x1d2>
 800ae60:	4b21      	ldr	r3, [pc, #132]	@ (800aee8 <_svfiprintf_r+0x1ec>)
 800ae62:	bb1b      	cbnz	r3, 800aeac <_svfiprintf_r+0x1b0>
 800ae64:	9b03      	ldr	r3, [sp, #12]
 800ae66:	3307      	adds	r3, #7
 800ae68:	f023 0307 	bic.w	r3, r3, #7
 800ae6c:	3308      	adds	r3, #8
 800ae6e:	9303      	str	r3, [sp, #12]
 800ae70:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ae72:	4433      	add	r3, r6
 800ae74:	9309      	str	r3, [sp, #36]	@ 0x24
 800ae76:	e76a      	b.n	800ad4e <_svfiprintf_r+0x52>
 800ae78:	fb0c 3202 	mla	r2, ip, r2, r3
 800ae7c:	460c      	mov	r4, r1
 800ae7e:	2001      	movs	r0, #1
 800ae80:	e7a8      	b.n	800add4 <_svfiprintf_r+0xd8>
 800ae82:	2300      	movs	r3, #0
 800ae84:	3401      	adds	r4, #1
 800ae86:	9305      	str	r3, [sp, #20]
 800ae88:	4619      	mov	r1, r3
 800ae8a:	f04f 0c0a 	mov.w	ip, #10
 800ae8e:	4620      	mov	r0, r4
 800ae90:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ae94:	3a30      	subs	r2, #48	@ 0x30
 800ae96:	2a09      	cmp	r2, #9
 800ae98:	d903      	bls.n	800aea2 <_svfiprintf_r+0x1a6>
 800ae9a:	2b00      	cmp	r3, #0
 800ae9c:	d0c6      	beq.n	800ae2c <_svfiprintf_r+0x130>
 800ae9e:	9105      	str	r1, [sp, #20]
 800aea0:	e7c4      	b.n	800ae2c <_svfiprintf_r+0x130>
 800aea2:	fb0c 2101 	mla	r1, ip, r1, r2
 800aea6:	4604      	mov	r4, r0
 800aea8:	2301      	movs	r3, #1
 800aeaa:	e7f0      	b.n	800ae8e <_svfiprintf_r+0x192>
 800aeac:	ab03      	add	r3, sp, #12
 800aeae:	9300      	str	r3, [sp, #0]
 800aeb0:	462a      	mov	r2, r5
 800aeb2:	4b0e      	ldr	r3, [pc, #56]	@ (800aeec <_svfiprintf_r+0x1f0>)
 800aeb4:	a904      	add	r1, sp, #16
 800aeb6:	4638      	mov	r0, r7
 800aeb8:	f7fc fc4e 	bl	8007758 <_printf_float>
 800aebc:	1c42      	adds	r2, r0, #1
 800aebe:	4606      	mov	r6, r0
 800aec0:	d1d6      	bne.n	800ae70 <_svfiprintf_r+0x174>
 800aec2:	89ab      	ldrh	r3, [r5, #12]
 800aec4:	065b      	lsls	r3, r3, #25
 800aec6:	f53f af2d 	bmi.w	800ad24 <_svfiprintf_r+0x28>
 800aeca:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800aecc:	e72c      	b.n	800ad28 <_svfiprintf_r+0x2c>
 800aece:	ab03      	add	r3, sp, #12
 800aed0:	9300      	str	r3, [sp, #0]
 800aed2:	462a      	mov	r2, r5
 800aed4:	4b05      	ldr	r3, [pc, #20]	@ (800aeec <_svfiprintf_r+0x1f0>)
 800aed6:	a904      	add	r1, sp, #16
 800aed8:	4638      	mov	r0, r7
 800aeda:	f7fc fed5 	bl	8007c88 <_printf_i>
 800aede:	e7ed      	b.n	800aebc <_svfiprintf_r+0x1c0>
 800aee0:	0800ccb1 	.word	0x0800ccb1
 800aee4:	0800ccbb 	.word	0x0800ccbb
 800aee8:	08007759 	.word	0x08007759
 800aeec:	0800ac45 	.word	0x0800ac45
 800aef0:	0800ccb7 	.word	0x0800ccb7

0800aef4 <__sfputc_r>:
 800aef4:	6893      	ldr	r3, [r2, #8]
 800aef6:	3b01      	subs	r3, #1
 800aef8:	2b00      	cmp	r3, #0
 800aefa:	b410      	push	{r4}
 800aefc:	6093      	str	r3, [r2, #8]
 800aefe:	da08      	bge.n	800af12 <__sfputc_r+0x1e>
 800af00:	6994      	ldr	r4, [r2, #24]
 800af02:	42a3      	cmp	r3, r4
 800af04:	db01      	blt.n	800af0a <__sfputc_r+0x16>
 800af06:	290a      	cmp	r1, #10
 800af08:	d103      	bne.n	800af12 <__sfputc_r+0x1e>
 800af0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800af0e:	f7fd bb5a 	b.w	80085c6 <__swbuf_r>
 800af12:	6813      	ldr	r3, [r2, #0]
 800af14:	1c58      	adds	r0, r3, #1
 800af16:	6010      	str	r0, [r2, #0]
 800af18:	7019      	strb	r1, [r3, #0]
 800af1a:	4608      	mov	r0, r1
 800af1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800af20:	4770      	bx	lr

0800af22 <__sfputs_r>:
 800af22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800af24:	4606      	mov	r6, r0
 800af26:	460f      	mov	r7, r1
 800af28:	4614      	mov	r4, r2
 800af2a:	18d5      	adds	r5, r2, r3
 800af2c:	42ac      	cmp	r4, r5
 800af2e:	d101      	bne.n	800af34 <__sfputs_r+0x12>
 800af30:	2000      	movs	r0, #0
 800af32:	e007      	b.n	800af44 <__sfputs_r+0x22>
 800af34:	f814 1b01 	ldrb.w	r1, [r4], #1
 800af38:	463a      	mov	r2, r7
 800af3a:	4630      	mov	r0, r6
 800af3c:	f7ff ffda 	bl	800aef4 <__sfputc_r>
 800af40:	1c43      	adds	r3, r0, #1
 800af42:	d1f3      	bne.n	800af2c <__sfputs_r+0xa>
 800af44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800af48 <_vfiprintf_r>:
 800af48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af4c:	460d      	mov	r5, r1
 800af4e:	b09d      	sub	sp, #116	@ 0x74
 800af50:	4614      	mov	r4, r2
 800af52:	4698      	mov	r8, r3
 800af54:	4606      	mov	r6, r0
 800af56:	b118      	cbz	r0, 800af60 <_vfiprintf_r+0x18>
 800af58:	6a03      	ldr	r3, [r0, #32]
 800af5a:	b90b      	cbnz	r3, 800af60 <_vfiprintf_r+0x18>
 800af5c:	f7fd fa54 	bl	8008408 <__sinit>
 800af60:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800af62:	07d9      	lsls	r1, r3, #31
 800af64:	d405      	bmi.n	800af72 <_vfiprintf_r+0x2a>
 800af66:	89ab      	ldrh	r3, [r5, #12]
 800af68:	059a      	lsls	r2, r3, #22
 800af6a:	d402      	bmi.n	800af72 <_vfiprintf_r+0x2a>
 800af6c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800af6e:	f7fd fc64 	bl	800883a <__retarget_lock_acquire_recursive>
 800af72:	89ab      	ldrh	r3, [r5, #12]
 800af74:	071b      	lsls	r3, r3, #28
 800af76:	d501      	bpl.n	800af7c <_vfiprintf_r+0x34>
 800af78:	692b      	ldr	r3, [r5, #16]
 800af7a:	b99b      	cbnz	r3, 800afa4 <_vfiprintf_r+0x5c>
 800af7c:	4629      	mov	r1, r5
 800af7e:	4630      	mov	r0, r6
 800af80:	f7fd fb60 	bl	8008644 <__swsetup_r>
 800af84:	b170      	cbz	r0, 800afa4 <_vfiprintf_r+0x5c>
 800af86:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800af88:	07dc      	lsls	r4, r3, #31
 800af8a:	d504      	bpl.n	800af96 <_vfiprintf_r+0x4e>
 800af8c:	f04f 30ff 	mov.w	r0, #4294967295
 800af90:	b01d      	add	sp, #116	@ 0x74
 800af92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af96:	89ab      	ldrh	r3, [r5, #12]
 800af98:	0598      	lsls	r0, r3, #22
 800af9a:	d4f7      	bmi.n	800af8c <_vfiprintf_r+0x44>
 800af9c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800af9e:	f7fd fc4d 	bl	800883c <__retarget_lock_release_recursive>
 800afa2:	e7f3      	b.n	800af8c <_vfiprintf_r+0x44>
 800afa4:	2300      	movs	r3, #0
 800afa6:	9309      	str	r3, [sp, #36]	@ 0x24
 800afa8:	2320      	movs	r3, #32
 800afaa:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800afae:	f8cd 800c 	str.w	r8, [sp, #12]
 800afb2:	2330      	movs	r3, #48	@ 0x30
 800afb4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800b164 <_vfiprintf_r+0x21c>
 800afb8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800afbc:	f04f 0901 	mov.w	r9, #1
 800afc0:	4623      	mov	r3, r4
 800afc2:	469a      	mov	sl, r3
 800afc4:	f813 2b01 	ldrb.w	r2, [r3], #1
 800afc8:	b10a      	cbz	r2, 800afce <_vfiprintf_r+0x86>
 800afca:	2a25      	cmp	r2, #37	@ 0x25
 800afcc:	d1f9      	bne.n	800afc2 <_vfiprintf_r+0x7a>
 800afce:	ebba 0b04 	subs.w	fp, sl, r4
 800afd2:	d00b      	beq.n	800afec <_vfiprintf_r+0xa4>
 800afd4:	465b      	mov	r3, fp
 800afd6:	4622      	mov	r2, r4
 800afd8:	4629      	mov	r1, r5
 800afda:	4630      	mov	r0, r6
 800afdc:	f7ff ffa1 	bl	800af22 <__sfputs_r>
 800afe0:	3001      	adds	r0, #1
 800afe2:	f000 80a7 	beq.w	800b134 <_vfiprintf_r+0x1ec>
 800afe6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800afe8:	445a      	add	r2, fp
 800afea:	9209      	str	r2, [sp, #36]	@ 0x24
 800afec:	f89a 3000 	ldrb.w	r3, [sl]
 800aff0:	2b00      	cmp	r3, #0
 800aff2:	f000 809f 	beq.w	800b134 <_vfiprintf_r+0x1ec>
 800aff6:	2300      	movs	r3, #0
 800aff8:	f04f 32ff 	mov.w	r2, #4294967295
 800affc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800b000:	f10a 0a01 	add.w	sl, sl, #1
 800b004:	9304      	str	r3, [sp, #16]
 800b006:	9307      	str	r3, [sp, #28]
 800b008:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800b00c:	931a      	str	r3, [sp, #104]	@ 0x68
 800b00e:	4654      	mov	r4, sl
 800b010:	2205      	movs	r2, #5
 800b012:	f814 1b01 	ldrb.w	r1, [r4], #1
 800b016:	4853      	ldr	r0, [pc, #332]	@ (800b164 <_vfiprintf_r+0x21c>)
 800b018:	f7f5 f8e2 	bl	80001e0 <memchr>
 800b01c:	9a04      	ldr	r2, [sp, #16]
 800b01e:	b9d8      	cbnz	r0, 800b058 <_vfiprintf_r+0x110>
 800b020:	06d1      	lsls	r1, r2, #27
 800b022:	bf44      	itt	mi
 800b024:	2320      	movmi	r3, #32
 800b026:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800b02a:	0713      	lsls	r3, r2, #28
 800b02c:	bf44      	itt	mi
 800b02e:	232b      	movmi	r3, #43	@ 0x2b
 800b030:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800b034:	f89a 3000 	ldrb.w	r3, [sl]
 800b038:	2b2a      	cmp	r3, #42	@ 0x2a
 800b03a:	d015      	beq.n	800b068 <_vfiprintf_r+0x120>
 800b03c:	9a07      	ldr	r2, [sp, #28]
 800b03e:	4654      	mov	r4, sl
 800b040:	2000      	movs	r0, #0
 800b042:	f04f 0c0a 	mov.w	ip, #10
 800b046:	4621      	mov	r1, r4
 800b048:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b04c:	3b30      	subs	r3, #48	@ 0x30
 800b04e:	2b09      	cmp	r3, #9
 800b050:	d94b      	bls.n	800b0ea <_vfiprintf_r+0x1a2>
 800b052:	b1b0      	cbz	r0, 800b082 <_vfiprintf_r+0x13a>
 800b054:	9207      	str	r2, [sp, #28]
 800b056:	e014      	b.n	800b082 <_vfiprintf_r+0x13a>
 800b058:	eba0 0308 	sub.w	r3, r0, r8
 800b05c:	fa09 f303 	lsl.w	r3, r9, r3
 800b060:	4313      	orrs	r3, r2
 800b062:	9304      	str	r3, [sp, #16]
 800b064:	46a2      	mov	sl, r4
 800b066:	e7d2      	b.n	800b00e <_vfiprintf_r+0xc6>
 800b068:	9b03      	ldr	r3, [sp, #12]
 800b06a:	1d19      	adds	r1, r3, #4
 800b06c:	681b      	ldr	r3, [r3, #0]
 800b06e:	9103      	str	r1, [sp, #12]
 800b070:	2b00      	cmp	r3, #0
 800b072:	bfbb      	ittet	lt
 800b074:	425b      	neglt	r3, r3
 800b076:	f042 0202 	orrlt.w	r2, r2, #2
 800b07a:	9307      	strge	r3, [sp, #28]
 800b07c:	9307      	strlt	r3, [sp, #28]
 800b07e:	bfb8      	it	lt
 800b080:	9204      	strlt	r2, [sp, #16]
 800b082:	7823      	ldrb	r3, [r4, #0]
 800b084:	2b2e      	cmp	r3, #46	@ 0x2e
 800b086:	d10a      	bne.n	800b09e <_vfiprintf_r+0x156>
 800b088:	7863      	ldrb	r3, [r4, #1]
 800b08a:	2b2a      	cmp	r3, #42	@ 0x2a
 800b08c:	d132      	bne.n	800b0f4 <_vfiprintf_r+0x1ac>
 800b08e:	9b03      	ldr	r3, [sp, #12]
 800b090:	1d1a      	adds	r2, r3, #4
 800b092:	681b      	ldr	r3, [r3, #0]
 800b094:	9203      	str	r2, [sp, #12]
 800b096:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800b09a:	3402      	adds	r4, #2
 800b09c:	9305      	str	r3, [sp, #20]
 800b09e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800b174 <_vfiprintf_r+0x22c>
 800b0a2:	7821      	ldrb	r1, [r4, #0]
 800b0a4:	2203      	movs	r2, #3
 800b0a6:	4650      	mov	r0, sl
 800b0a8:	f7f5 f89a 	bl	80001e0 <memchr>
 800b0ac:	b138      	cbz	r0, 800b0be <_vfiprintf_r+0x176>
 800b0ae:	9b04      	ldr	r3, [sp, #16]
 800b0b0:	eba0 000a 	sub.w	r0, r0, sl
 800b0b4:	2240      	movs	r2, #64	@ 0x40
 800b0b6:	4082      	lsls	r2, r0
 800b0b8:	4313      	orrs	r3, r2
 800b0ba:	3401      	adds	r4, #1
 800b0bc:	9304      	str	r3, [sp, #16]
 800b0be:	f814 1b01 	ldrb.w	r1, [r4], #1
 800b0c2:	4829      	ldr	r0, [pc, #164]	@ (800b168 <_vfiprintf_r+0x220>)
 800b0c4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800b0c8:	2206      	movs	r2, #6
 800b0ca:	f7f5 f889 	bl	80001e0 <memchr>
 800b0ce:	2800      	cmp	r0, #0
 800b0d0:	d03f      	beq.n	800b152 <_vfiprintf_r+0x20a>
 800b0d2:	4b26      	ldr	r3, [pc, #152]	@ (800b16c <_vfiprintf_r+0x224>)
 800b0d4:	bb1b      	cbnz	r3, 800b11e <_vfiprintf_r+0x1d6>
 800b0d6:	9b03      	ldr	r3, [sp, #12]
 800b0d8:	3307      	adds	r3, #7
 800b0da:	f023 0307 	bic.w	r3, r3, #7
 800b0de:	3308      	adds	r3, #8
 800b0e0:	9303      	str	r3, [sp, #12]
 800b0e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b0e4:	443b      	add	r3, r7
 800b0e6:	9309      	str	r3, [sp, #36]	@ 0x24
 800b0e8:	e76a      	b.n	800afc0 <_vfiprintf_r+0x78>
 800b0ea:	fb0c 3202 	mla	r2, ip, r2, r3
 800b0ee:	460c      	mov	r4, r1
 800b0f0:	2001      	movs	r0, #1
 800b0f2:	e7a8      	b.n	800b046 <_vfiprintf_r+0xfe>
 800b0f4:	2300      	movs	r3, #0
 800b0f6:	3401      	adds	r4, #1
 800b0f8:	9305      	str	r3, [sp, #20]
 800b0fa:	4619      	mov	r1, r3
 800b0fc:	f04f 0c0a 	mov.w	ip, #10
 800b100:	4620      	mov	r0, r4
 800b102:	f810 2b01 	ldrb.w	r2, [r0], #1
 800b106:	3a30      	subs	r2, #48	@ 0x30
 800b108:	2a09      	cmp	r2, #9
 800b10a:	d903      	bls.n	800b114 <_vfiprintf_r+0x1cc>
 800b10c:	2b00      	cmp	r3, #0
 800b10e:	d0c6      	beq.n	800b09e <_vfiprintf_r+0x156>
 800b110:	9105      	str	r1, [sp, #20]
 800b112:	e7c4      	b.n	800b09e <_vfiprintf_r+0x156>
 800b114:	fb0c 2101 	mla	r1, ip, r1, r2
 800b118:	4604      	mov	r4, r0
 800b11a:	2301      	movs	r3, #1
 800b11c:	e7f0      	b.n	800b100 <_vfiprintf_r+0x1b8>
 800b11e:	ab03      	add	r3, sp, #12
 800b120:	9300      	str	r3, [sp, #0]
 800b122:	462a      	mov	r2, r5
 800b124:	4b12      	ldr	r3, [pc, #72]	@ (800b170 <_vfiprintf_r+0x228>)
 800b126:	a904      	add	r1, sp, #16
 800b128:	4630      	mov	r0, r6
 800b12a:	f7fc fb15 	bl	8007758 <_printf_float>
 800b12e:	4607      	mov	r7, r0
 800b130:	1c78      	adds	r0, r7, #1
 800b132:	d1d6      	bne.n	800b0e2 <_vfiprintf_r+0x19a>
 800b134:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800b136:	07d9      	lsls	r1, r3, #31
 800b138:	d405      	bmi.n	800b146 <_vfiprintf_r+0x1fe>
 800b13a:	89ab      	ldrh	r3, [r5, #12]
 800b13c:	059a      	lsls	r2, r3, #22
 800b13e:	d402      	bmi.n	800b146 <_vfiprintf_r+0x1fe>
 800b140:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800b142:	f7fd fb7b 	bl	800883c <__retarget_lock_release_recursive>
 800b146:	89ab      	ldrh	r3, [r5, #12]
 800b148:	065b      	lsls	r3, r3, #25
 800b14a:	f53f af1f 	bmi.w	800af8c <_vfiprintf_r+0x44>
 800b14e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800b150:	e71e      	b.n	800af90 <_vfiprintf_r+0x48>
 800b152:	ab03      	add	r3, sp, #12
 800b154:	9300      	str	r3, [sp, #0]
 800b156:	462a      	mov	r2, r5
 800b158:	4b05      	ldr	r3, [pc, #20]	@ (800b170 <_vfiprintf_r+0x228>)
 800b15a:	a904      	add	r1, sp, #16
 800b15c:	4630      	mov	r0, r6
 800b15e:	f7fc fd93 	bl	8007c88 <_printf_i>
 800b162:	e7e4      	b.n	800b12e <_vfiprintf_r+0x1e6>
 800b164:	0800ccb1 	.word	0x0800ccb1
 800b168:	0800ccbb 	.word	0x0800ccbb
 800b16c:	08007759 	.word	0x08007759
 800b170:	0800af23 	.word	0x0800af23
 800b174:	0800ccb7 	.word	0x0800ccb7

0800b178 <__sflush_r>:
 800b178:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800b17c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b180:	0716      	lsls	r6, r2, #28
 800b182:	4605      	mov	r5, r0
 800b184:	460c      	mov	r4, r1
 800b186:	d454      	bmi.n	800b232 <__sflush_r+0xba>
 800b188:	684b      	ldr	r3, [r1, #4]
 800b18a:	2b00      	cmp	r3, #0
 800b18c:	dc02      	bgt.n	800b194 <__sflush_r+0x1c>
 800b18e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800b190:	2b00      	cmp	r3, #0
 800b192:	dd48      	ble.n	800b226 <__sflush_r+0xae>
 800b194:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800b196:	2e00      	cmp	r6, #0
 800b198:	d045      	beq.n	800b226 <__sflush_r+0xae>
 800b19a:	2300      	movs	r3, #0
 800b19c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800b1a0:	682f      	ldr	r7, [r5, #0]
 800b1a2:	6a21      	ldr	r1, [r4, #32]
 800b1a4:	602b      	str	r3, [r5, #0]
 800b1a6:	d030      	beq.n	800b20a <__sflush_r+0x92>
 800b1a8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800b1aa:	89a3      	ldrh	r3, [r4, #12]
 800b1ac:	0759      	lsls	r1, r3, #29
 800b1ae:	d505      	bpl.n	800b1bc <__sflush_r+0x44>
 800b1b0:	6863      	ldr	r3, [r4, #4]
 800b1b2:	1ad2      	subs	r2, r2, r3
 800b1b4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800b1b6:	b10b      	cbz	r3, 800b1bc <__sflush_r+0x44>
 800b1b8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800b1ba:	1ad2      	subs	r2, r2, r3
 800b1bc:	2300      	movs	r3, #0
 800b1be:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800b1c0:	6a21      	ldr	r1, [r4, #32]
 800b1c2:	4628      	mov	r0, r5
 800b1c4:	47b0      	blx	r6
 800b1c6:	1c43      	adds	r3, r0, #1
 800b1c8:	89a3      	ldrh	r3, [r4, #12]
 800b1ca:	d106      	bne.n	800b1da <__sflush_r+0x62>
 800b1cc:	6829      	ldr	r1, [r5, #0]
 800b1ce:	291d      	cmp	r1, #29
 800b1d0:	d82b      	bhi.n	800b22a <__sflush_r+0xb2>
 800b1d2:	4a2a      	ldr	r2, [pc, #168]	@ (800b27c <__sflush_r+0x104>)
 800b1d4:	410a      	asrs	r2, r1
 800b1d6:	07d6      	lsls	r6, r2, #31
 800b1d8:	d427      	bmi.n	800b22a <__sflush_r+0xb2>
 800b1da:	2200      	movs	r2, #0
 800b1dc:	6062      	str	r2, [r4, #4]
 800b1de:	04d9      	lsls	r1, r3, #19
 800b1e0:	6922      	ldr	r2, [r4, #16]
 800b1e2:	6022      	str	r2, [r4, #0]
 800b1e4:	d504      	bpl.n	800b1f0 <__sflush_r+0x78>
 800b1e6:	1c42      	adds	r2, r0, #1
 800b1e8:	d101      	bne.n	800b1ee <__sflush_r+0x76>
 800b1ea:	682b      	ldr	r3, [r5, #0]
 800b1ec:	b903      	cbnz	r3, 800b1f0 <__sflush_r+0x78>
 800b1ee:	6560      	str	r0, [r4, #84]	@ 0x54
 800b1f0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800b1f2:	602f      	str	r7, [r5, #0]
 800b1f4:	b1b9      	cbz	r1, 800b226 <__sflush_r+0xae>
 800b1f6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800b1fa:	4299      	cmp	r1, r3
 800b1fc:	d002      	beq.n	800b204 <__sflush_r+0x8c>
 800b1fe:	4628      	mov	r0, r5
 800b200:	f7fe f99e 	bl	8009540 <_free_r>
 800b204:	2300      	movs	r3, #0
 800b206:	6363      	str	r3, [r4, #52]	@ 0x34
 800b208:	e00d      	b.n	800b226 <__sflush_r+0xae>
 800b20a:	2301      	movs	r3, #1
 800b20c:	4628      	mov	r0, r5
 800b20e:	47b0      	blx	r6
 800b210:	4602      	mov	r2, r0
 800b212:	1c50      	adds	r0, r2, #1
 800b214:	d1c9      	bne.n	800b1aa <__sflush_r+0x32>
 800b216:	682b      	ldr	r3, [r5, #0]
 800b218:	2b00      	cmp	r3, #0
 800b21a:	d0c6      	beq.n	800b1aa <__sflush_r+0x32>
 800b21c:	2b1d      	cmp	r3, #29
 800b21e:	d001      	beq.n	800b224 <__sflush_r+0xac>
 800b220:	2b16      	cmp	r3, #22
 800b222:	d11e      	bne.n	800b262 <__sflush_r+0xea>
 800b224:	602f      	str	r7, [r5, #0]
 800b226:	2000      	movs	r0, #0
 800b228:	e022      	b.n	800b270 <__sflush_r+0xf8>
 800b22a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800b22e:	b21b      	sxth	r3, r3
 800b230:	e01b      	b.n	800b26a <__sflush_r+0xf2>
 800b232:	690f      	ldr	r7, [r1, #16]
 800b234:	2f00      	cmp	r7, #0
 800b236:	d0f6      	beq.n	800b226 <__sflush_r+0xae>
 800b238:	0793      	lsls	r3, r2, #30
 800b23a:	680e      	ldr	r6, [r1, #0]
 800b23c:	bf08      	it	eq
 800b23e:	694b      	ldreq	r3, [r1, #20]
 800b240:	600f      	str	r7, [r1, #0]
 800b242:	bf18      	it	ne
 800b244:	2300      	movne	r3, #0
 800b246:	eba6 0807 	sub.w	r8, r6, r7
 800b24a:	608b      	str	r3, [r1, #8]
 800b24c:	f1b8 0f00 	cmp.w	r8, #0
 800b250:	dde9      	ble.n	800b226 <__sflush_r+0xae>
 800b252:	6a21      	ldr	r1, [r4, #32]
 800b254:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800b256:	4643      	mov	r3, r8
 800b258:	463a      	mov	r2, r7
 800b25a:	4628      	mov	r0, r5
 800b25c:	47b0      	blx	r6
 800b25e:	2800      	cmp	r0, #0
 800b260:	dc08      	bgt.n	800b274 <__sflush_r+0xfc>
 800b262:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800b266:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800b26a:	81a3      	strh	r3, [r4, #12]
 800b26c:	f04f 30ff 	mov.w	r0, #4294967295
 800b270:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b274:	4407      	add	r7, r0
 800b276:	eba8 0800 	sub.w	r8, r8, r0
 800b27a:	e7e7      	b.n	800b24c <__sflush_r+0xd4>
 800b27c:	dfbffffe 	.word	0xdfbffffe

0800b280 <_fflush_r>:
 800b280:	b538      	push	{r3, r4, r5, lr}
 800b282:	690b      	ldr	r3, [r1, #16]
 800b284:	4605      	mov	r5, r0
 800b286:	460c      	mov	r4, r1
 800b288:	b913      	cbnz	r3, 800b290 <_fflush_r+0x10>
 800b28a:	2500      	movs	r5, #0
 800b28c:	4628      	mov	r0, r5
 800b28e:	bd38      	pop	{r3, r4, r5, pc}
 800b290:	b118      	cbz	r0, 800b29a <_fflush_r+0x1a>
 800b292:	6a03      	ldr	r3, [r0, #32]
 800b294:	b90b      	cbnz	r3, 800b29a <_fflush_r+0x1a>
 800b296:	f7fd f8b7 	bl	8008408 <__sinit>
 800b29a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800b29e:	2b00      	cmp	r3, #0
 800b2a0:	d0f3      	beq.n	800b28a <_fflush_r+0xa>
 800b2a2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800b2a4:	07d0      	lsls	r0, r2, #31
 800b2a6:	d404      	bmi.n	800b2b2 <_fflush_r+0x32>
 800b2a8:	0599      	lsls	r1, r3, #22
 800b2aa:	d402      	bmi.n	800b2b2 <_fflush_r+0x32>
 800b2ac:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800b2ae:	f7fd fac4 	bl	800883a <__retarget_lock_acquire_recursive>
 800b2b2:	4628      	mov	r0, r5
 800b2b4:	4621      	mov	r1, r4
 800b2b6:	f7ff ff5f 	bl	800b178 <__sflush_r>
 800b2ba:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800b2bc:	07da      	lsls	r2, r3, #31
 800b2be:	4605      	mov	r5, r0
 800b2c0:	d4e4      	bmi.n	800b28c <_fflush_r+0xc>
 800b2c2:	89a3      	ldrh	r3, [r4, #12]
 800b2c4:	059b      	lsls	r3, r3, #22
 800b2c6:	d4e1      	bmi.n	800b28c <_fflush_r+0xc>
 800b2c8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800b2ca:	f7fd fab7 	bl	800883c <__retarget_lock_release_recursive>
 800b2ce:	e7dd      	b.n	800b28c <_fflush_r+0xc>

0800b2d0 <fiprintf>:
 800b2d0:	b40e      	push	{r1, r2, r3}
 800b2d2:	b503      	push	{r0, r1, lr}
 800b2d4:	4601      	mov	r1, r0
 800b2d6:	ab03      	add	r3, sp, #12
 800b2d8:	4805      	ldr	r0, [pc, #20]	@ (800b2f0 <fiprintf+0x20>)
 800b2da:	f853 2b04 	ldr.w	r2, [r3], #4
 800b2de:	6800      	ldr	r0, [r0, #0]
 800b2e0:	9301      	str	r3, [sp, #4]
 800b2e2:	f7ff fe31 	bl	800af48 <_vfiprintf_r>
 800b2e6:	b002      	add	sp, #8
 800b2e8:	f85d eb04 	ldr.w	lr, [sp], #4
 800b2ec:	b003      	add	sp, #12
 800b2ee:	4770      	bx	lr
 800b2f0:	20000588 	.word	0x20000588

0800b2f4 <__swhatbuf_r>:
 800b2f4:	b570      	push	{r4, r5, r6, lr}
 800b2f6:	460c      	mov	r4, r1
 800b2f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b2fc:	2900      	cmp	r1, #0
 800b2fe:	b096      	sub	sp, #88	@ 0x58
 800b300:	4615      	mov	r5, r2
 800b302:	461e      	mov	r6, r3
 800b304:	da0d      	bge.n	800b322 <__swhatbuf_r+0x2e>
 800b306:	89a3      	ldrh	r3, [r4, #12]
 800b308:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800b30c:	f04f 0100 	mov.w	r1, #0
 800b310:	bf14      	ite	ne
 800b312:	2340      	movne	r3, #64	@ 0x40
 800b314:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800b318:	2000      	movs	r0, #0
 800b31a:	6031      	str	r1, [r6, #0]
 800b31c:	602b      	str	r3, [r5, #0]
 800b31e:	b016      	add	sp, #88	@ 0x58
 800b320:	bd70      	pop	{r4, r5, r6, pc}
 800b322:	466a      	mov	r2, sp
 800b324:	f000 f874 	bl	800b410 <_fstat_r>
 800b328:	2800      	cmp	r0, #0
 800b32a:	dbec      	blt.n	800b306 <__swhatbuf_r+0x12>
 800b32c:	9901      	ldr	r1, [sp, #4]
 800b32e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800b332:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800b336:	4259      	negs	r1, r3
 800b338:	4159      	adcs	r1, r3
 800b33a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b33e:	e7eb      	b.n	800b318 <__swhatbuf_r+0x24>

0800b340 <__smakebuf_r>:
 800b340:	898b      	ldrh	r3, [r1, #12]
 800b342:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b344:	079d      	lsls	r5, r3, #30
 800b346:	4606      	mov	r6, r0
 800b348:	460c      	mov	r4, r1
 800b34a:	d507      	bpl.n	800b35c <__smakebuf_r+0x1c>
 800b34c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800b350:	6023      	str	r3, [r4, #0]
 800b352:	6123      	str	r3, [r4, #16]
 800b354:	2301      	movs	r3, #1
 800b356:	6163      	str	r3, [r4, #20]
 800b358:	b003      	add	sp, #12
 800b35a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b35c:	ab01      	add	r3, sp, #4
 800b35e:	466a      	mov	r2, sp
 800b360:	f7ff ffc8 	bl	800b2f4 <__swhatbuf_r>
 800b364:	9f00      	ldr	r7, [sp, #0]
 800b366:	4605      	mov	r5, r0
 800b368:	4639      	mov	r1, r7
 800b36a:	4630      	mov	r0, r6
 800b36c:	f7fc f8c8 	bl	8007500 <_malloc_r>
 800b370:	b948      	cbnz	r0, 800b386 <__smakebuf_r+0x46>
 800b372:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800b376:	059a      	lsls	r2, r3, #22
 800b378:	d4ee      	bmi.n	800b358 <__smakebuf_r+0x18>
 800b37a:	f023 0303 	bic.w	r3, r3, #3
 800b37e:	f043 0302 	orr.w	r3, r3, #2
 800b382:	81a3      	strh	r3, [r4, #12]
 800b384:	e7e2      	b.n	800b34c <__smakebuf_r+0xc>
 800b386:	89a3      	ldrh	r3, [r4, #12]
 800b388:	6020      	str	r0, [r4, #0]
 800b38a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800b38e:	81a3      	strh	r3, [r4, #12]
 800b390:	9b01      	ldr	r3, [sp, #4]
 800b392:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800b396:	b15b      	cbz	r3, 800b3b0 <__smakebuf_r+0x70>
 800b398:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800b39c:	4630      	mov	r0, r6
 800b39e:	f000 f849 	bl	800b434 <_isatty_r>
 800b3a2:	b128      	cbz	r0, 800b3b0 <__smakebuf_r+0x70>
 800b3a4:	89a3      	ldrh	r3, [r4, #12]
 800b3a6:	f023 0303 	bic.w	r3, r3, #3
 800b3aa:	f043 0301 	orr.w	r3, r3, #1
 800b3ae:	81a3      	strh	r3, [r4, #12]
 800b3b0:	89a3      	ldrh	r3, [r4, #12]
 800b3b2:	431d      	orrs	r5, r3
 800b3b4:	81a5      	strh	r5, [r4, #12]
 800b3b6:	e7cf      	b.n	800b358 <__smakebuf_r+0x18>

0800b3b8 <memmove>:
 800b3b8:	4288      	cmp	r0, r1
 800b3ba:	b510      	push	{r4, lr}
 800b3bc:	eb01 0402 	add.w	r4, r1, r2
 800b3c0:	d902      	bls.n	800b3c8 <memmove+0x10>
 800b3c2:	4284      	cmp	r4, r0
 800b3c4:	4623      	mov	r3, r4
 800b3c6:	d807      	bhi.n	800b3d8 <memmove+0x20>
 800b3c8:	1e43      	subs	r3, r0, #1
 800b3ca:	42a1      	cmp	r1, r4
 800b3cc:	d008      	beq.n	800b3e0 <memmove+0x28>
 800b3ce:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b3d2:	f803 2f01 	strb.w	r2, [r3, #1]!
 800b3d6:	e7f8      	b.n	800b3ca <memmove+0x12>
 800b3d8:	4402      	add	r2, r0
 800b3da:	4601      	mov	r1, r0
 800b3dc:	428a      	cmp	r2, r1
 800b3de:	d100      	bne.n	800b3e2 <memmove+0x2a>
 800b3e0:	bd10      	pop	{r4, pc}
 800b3e2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800b3e6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800b3ea:	e7f7      	b.n	800b3dc <memmove+0x24>

0800b3ec <strncmp>:
 800b3ec:	b510      	push	{r4, lr}
 800b3ee:	b16a      	cbz	r2, 800b40c <strncmp+0x20>
 800b3f0:	3901      	subs	r1, #1
 800b3f2:	1884      	adds	r4, r0, r2
 800b3f4:	f810 2b01 	ldrb.w	r2, [r0], #1
 800b3f8:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800b3fc:	429a      	cmp	r2, r3
 800b3fe:	d103      	bne.n	800b408 <strncmp+0x1c>
 800b400:	42a0      	cmp	r0, r4
 800b402:	d001      	beq.n	800b408 <strncmp+0x1c>
 800b404:	2a00      	cmp	r2, #0
 800b406:	d1f5      	bne.n	800b3f4 <strncmp+0x8>
 800b408:	1ad0      	subs	r0, r2, r3
 800b40a:	bd10      	pop	{r4, pc}
 800b40c:	4610      	mov	r0, r2
 800b40e:	e7fc      	b.n	800b40a <strncmp+0x1e>

0800b410 <_fstat_r>:
 800b410:	b538      	push	{r3, r4, r5, lr}
 800b412:	4d07      	ldr	r5, [pc, #28]	@ (800b430 <_fstat_r+0x20>)
 800b414:	2300      	movs	r3, #0
 800b416:	4604      	mov	r4, r0
 800b418:	4608      	mov	r0, r1
 800b41a:	4611      	mov	r1, r2
 800b41c:	602b      	str	r3, [r5, #0]
 800b41e:	f7f7 f8a9 	bl	8002574 <_fstat>
 800b422:	1c43      	adds	r3, r0, #1
 800b424:	d102      	bne.n	800b42c <_fstat_r+0x1c>
 800b426:	682b      	ldr	r3, [r5, #0]
 800b428:	b103      	cbz	r3, 800b42c <_fstat_r+0x1c>
 800b42a:	6023      	str	r3, [r4, #0]
 800b42c:	bd38      	pop	{r3, r4, r5, pc}
 800b42e:	bf00      	nop
 800b430:	20000b10 	.word	0x20000b10

0800b434 <_isatty_r>:
 800b434:	b538      	push	{r3, r4, r5, lr}
 800b436:	4d06      	ldr	r5, [pc, #24]	@ (800b450 <_isatty_r+0x1c>)
 800b438:	2300      	movs	r3, #0
 800b43a:	4604      	mov	r4, r0
 800b43c:	4608      	mov	r0, r1
 800b43e:	602b      	str	r3, [r5, #0]
 800b440:	f7f7 f8a8 	bl	8002594 <_isatty>
 800b444:	1c43      	adds	r3, r0, #1
 800b446:	d102      	bne.n	800b44e <_isatty_r+0x1a>
 800b448:	682b      	ldr	r3, [r5, #0]
 800b44a:	b103      	cbz	r3, 800b44e <_isatty_r+0x1a>
 800b44c:	6023      	str	r3, [r4, #0]
 800b44e:	bd38      	pop	{r3, r4, r5, pc}
 800b450:	20000b10 	.word	0x20000b10
 800b454:	00000000 	.word	0x00000000

0800b458 <nan>:
 800b458:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 800b460 <nan+0x8>
 800b45c:	4770      	bx	lr
 800b45e:	bf00      	nop
 800b460:	00000000 	.word	0x00000000
 800b464:	7ff80000 	.word	0x7ff80000

0800b468 <abort>:
 800b468:	b508      	push	{r3, lr}
 800b46a:	2006      	movs	r0, #6
 800b46c:	f000 fbc4 	bl	800bbf8 <raise>
 800b470:	2001      	movs	r0, #1
 800b472:	f7f7 f82f 	bl	80024d4 <_exit>

0800b476 <_calloc_r>:
 800b476:	b570      	push	{r4, r5, r6, lr}
 800b478:	fba1 5402 	umull	r5, r4, r1, r2
 800b47c:	b93c      	cbnz	r4, 800b48e <_calloc_r+0x18>
 800b47e:	4629      	mov	r1, r5
 800b480:	f7fc f83e 	bl	8007500 <_malloc_r>
 800b484:	4606      	mov	r6, r0
 800b486:	b928      	cbnz	r0, 800b494 <_calloc_r+0x1e>
 800b488:	2600      	movs	r6, #0
 800b48a:	4630      	mov	r0, r6
 800b48c:	bd70      	pop	{r4, r5, r6, pc}
 800b48e:	220c      	movs	r2, #12
 800b490:	6002      	str	r2, [r0, #0]
 800b492:	e7f9      	b.n	800b488 <_calloc_r+0x12>
 800b494:	462a      	mov	r2, r5
 800b496:	4621      	mov	r1, r4
 800b498:	f7fd f92a 	bl	80086f0 <memset>
 800b49c:	e7f5      	b.n	800b48a <_calloc_r+0x14>

0800b49e <rshift>:
 800b49e:	6903      	ldr	r3, [r0, #16]
 800b4a0:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800b4a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b4a8:	ea4f 1261 	mov.w	r2, r1, asr #5
 800b4ac:	f100 0414 	add.w	r4, r0, #20
 800b4b0:	dd45      	ble.n	800b53e <rshift+0xa0>
 800b4b2:	f011 011f 	ands.w	r1, r1, #31
 800b4b6:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800b4ba:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800b4be:	d10c      	bne.n	800b4da <rshift+0x3c>
 800b4c0:	f100 0710 	add.w	r7, r0, #16
 800b4c4:	4629      	mov	r1, r5
 800b4c6:	42b1      	cmp	r1, r6
 800b4c8:	d334      	bcc.n	800b534 <rshift+0x96>
 800b4ca:	1a9b      	subs	r3, r3, r2
 800b4cc:	009b      	lsls	r3, r3, #2
 800b4ce:	1eea      	subs	r2, r5, #3
 800b4d0:	4296      	cmp	r6, r2
 800b4d2:	bf38      	it	cc
 800b4d4:	2300      	movcc	r3, #0
 800b4d6:	4423      	add	r3, r4
 800b4d8:	e015      	b.n	800b506 <rshift+0x68>
 800b4da:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800b4de:	f1c1 0820 	rsb	r8, r1, #32
 800b4e2:	40cf      	lsrs	r7, r1
 800b4e4:	f105 0e04 	add.w	lr, r5, #4
 800b4e8:	46a1      	mov	r9, r4
 800b4ea:	4576      	cmp	r6, lr
 800b4ec:	46f4      	mov	ip, lr
 800b4ee:	d815      	bhi.n	800b51c <rshift+0x7e>
 800b4f0:	1a9a      	subs	r2, r3, r2
 800b4f2:	0092      	lsls	r2, r2, #2
 800b4f4:	3a04      	subs	r2, #4
 800b4f6:	3501      	adds	r5, #1
 800b4f8:	42ae      	cmp	r6, r5
 800b4fa:	bf38      	it	cc
 800b4fc:	2200      	movcc	r2, #0
 800b4fe:	18a3      	adds	r3, r4, r2
 800b500:	50a7      	str	r7, [r4, r2]
 800b502:	b107      	cbz	r7, 800b506 <rshift+0x68>
 800b504:	3304      	adds	r3, #4
 800b506:	1b1a      	subs	r2, r3, r4
 800b508:	42a3      	cmp	r3, r4
 800b50a:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800b50e:	bf08      	it	eq
 800b510:	2300      	moveq	r3, #0
 800b512:	6102      	str	r2, [r0, #16]
 800b514:	bf08      	it	eq
 800b516:	6143      	streq	r3, [r0, #20]
 800b518:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b51c:	f8dc c000 	ldr.w	ip, [ip]
 800b520:	fa0c fc08 	lsl.w	ip, ip, r8
 800b524:	ea4c 0707 	orr.w	r7, ip, r7
 800b528:	f849 7b04 	str.w	r7, [r9], #4
 800b52c:	f85e 7b04 	ldr.w	r7, [lr], #4
 800b530:	40cf      	lsrs	r7, r1
 800b532:	e7da      	b.n	800b4ea <rshift+0x4c>
 800b534:	f851 cb04 	ldr.w	ip, [r1], #4
 800b538:	f847 cf04 	str.w	ip, [r7, #4]!
 800b53c:	e7c3      	b.n	800b4c6 <rshift+0x28>
 800b53e:	4623      	mov	r3, r4
 800b540:	e7e1      	b.n	800b506 <rshift+0x68>

0800b542 <__hexdig_fun>:
 800b542:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 800b546:	2b09      	cmp	r3, #9
 800b548:	d802      	bhi.n	800b550 <__hexdig_fun+0xe>
 800b54a:	3820      	subs	r0, #32
 800b54c:	b2c0      	uxtb	r0, r0
 800b54e:	4770      	bx	lr
 800b550:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 800b554:	2b05      	cmp	r3, #5
 800b556:	d801      	bhi.n	800b55c <__hexdig_fun+0x1a>
 800b558:	3847      	subs	r0, #71	@ 0x47
 800b55a:	e7f7      	b.n	800b54c <__hexdig_fun+0xa>
 800b55c:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800b560:	2b05      	cmp	r3, #5
 800b562:	d801      	bhi.n	800b568 <__hexdig_fun+0x26>
 800b564:	3827      	subs	r0, #39	@ 0x27
 800b566:	e7f1      	b.n	800b54c <__hexdig_fun+0xa>
 800b568:	2000      	movs	r0, #0
 800b56a:	4770      	bx	lr

0800b56c <__gethex>:
 800b56c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b570:	b085      	sub	sp, #20
 800b572:	468a      	mov	sl, r1
 800b574:	9302      	str	r3, [sp, #8]
 800b576:	680b      	ldr	r3, [r1, #0]
 800b578:	9001      	str	r0, [sp, #4]
 800b57a:	4690      	mov	r8, r2
 800b57c:	1c9c      	adds	r4, r3, #2
 800b57e:	46a1      	mov	r9, r4
 800b580:	f814 0b01 	ldrb.w	r0, [r4], #1
 800b584:	2830      	cmp	r0, #48	@ 0x30
 800b586:	d0fa      	beq.n	800b57e <__gethex+0x12>
 800b588:	eba9 0303 	sub.w	r3, r9, r3
 800b58c:	f1a3 0b02 	sub.w	fp, r3, #2
 800b590:	f7ff ffd7 	bl	800b542 <__hexdig_fun>
 800b594:	4605      	mov	r5, r0
 800b596:	2800      	cmp	r0, #0
 800b598:	d168      	bne.n	800b66c <__gethex+0x100>
 800b59a:	49a0      	ldr	r1, [pc, #640]	@ (800b81c <__gethex+0x2b0>)
 800b59c:	2201      	movs	r2, #1
 800b59e:	4648      	mov	r0, r9
 800b5a0:	f7ff ff24 	bl	800b3ec <strncmp>
 800b5a4:	4607      	mov	r7, r0
 800b5a6:	2800      	cmp	r0, #0
 800b5a8:	d167      	bne.n	800b67a <__gethex+0x10e>
 800b5aa:	f899 0001 	ldrb.w	r0, [r9, #1]
 800b5ae:	4626      	mov	r6, r4
 800b5b0:	f7ff ffc7 	bl	800b542 <__hexdig_fun>
 800b5b4:	2800      	cmp	r0, #0
 800b5b6:	d062      	beq.n	800b67e <__gethex+0x112>
 800b5b8:	4623      	mov	r3, r4
 800b5ba:	7818      	ldrb	r0, [r3, #0]
 800b5bc:	2830      	cmp	r0, #48	@ 0x30
 800b5be:	4699      	mov	r9, r3
 800b5c0:	f103 0301 	add.w	r3, r3, #1
 800b5c4:	d0f9      	beq.n	800b5ba <__gethex+0x4e>
 800b5c6:	f7ff ffbc 	bl	800b542 <__hexdig_fun>
 800b5ca:	fab0 f580 	clz	r5, r0
 800b5ce:	096d      	lsrs	r5, r5, #5
 800b5d0:	f04f 0b01 	mov.w	fp, #1
 800b5d4:	464a      	mov	r2, r9
 800b5d6:	4616      	mov	r6, r2
 800b5d8:	3201      	adds	r2, #1
 800b5da:	7830      	ldrb	r0, [r6, #0]
 800b5dc:	f7ff ffb1 	bl	800b542 <__hexdig_fun>
 800b5e0:	2800      	cmp	r0, #0
 800b5e2:	d1f8      	bne.n	800b5d6 <__gethex+0x6a>
 800b5e4:	498d      	ldr	r1, [pc, #564]	@ (800b81c <__gethex+0x2b0>)
 800b5e6:	2201      	movs	r2, #1
 800b5e8:	4630      	mov	r0, r6
 800b5ea:	f7ff feff 	bl	800b3ec <strncmp>
 800b5ee:	2800      	cmp	r0, #0
 800b5f0:	d13f      	bne.n	800b672 <__gethex+0x106>
 800b5f2:	b944      	cbnz	r4, 800b606 <__gethex+0x9a>
 800b5f4:	1c74      	adds	r4, r6, #1
 800b5f6:	4622      	mov	r2, r4
 800b5f8:	4616      	mov	r6, r2
 800b5fa:	3201      	adds	r2, #1
 800b5fc:	7830      	ldrb	r0, [r6, #0]
 800b5fe:	f7ff ffa0 	bl	800b542 <__hexdig_fun>
 800b602:	2800      	cmp	r0, #0
 800b604:	d1f8      	bne.n	800b5f8 <__gethex+0x8c>
 800b606:	1ba4      	subs	r4, r4, r6
 800b608:	00a7      	lsls	r7, r4, #2
 800b60a:	7833      	ldrb	r3, [r6, #0]
 800b60c:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 800b610:	2b50      	cmp	r3, #80	@ 0x50
 800b612:	d13e      	bne.n	800b692 <__gethex+0x126>
 800b614:	7873      	ldrb	r3, [r6, #1]
 800b616:	2b2b      	cmp	r3, #43	@ 0x2b
 800b618:	d033      	beq.n	800b682 <__gethex+0x116>
 800b61a:	2b2d      	cmp	r3, #45	@ 0x2d
 800b61c:	d034      	beq.n	800b688 <__gethex+0x11c>
 800b61e:	1c71      	adds	r1, r6, #1
 800b620:	2400      	movs	r4, #0
 800b622:	7808      	ldrb	r0, [r1, #0]
 800b624:	f7ff ff8d 	bl	800b542 <__hexdig_fun>
 800b628:	1e43      	subs	r3, r0, #1
 800b62a:	b2db      	uxtb	r3, r3
 800b62c:	2b18      	cmp	r3, #24
 800b62e:	d830      	bhi.n	800b692 <__gethex+0x126>
 800b630:	f1a0 0210 	sub.w	r2, r0, #16
 800b634:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800b638:	f7ff ff83 	bl	800b542 <__hexdig_fun>
 800b63c:	f100 3cff 	add.w	ip, r0, #4294967295
 800b640:	fa5f fc8c 	uxtb.w	ip, ip
 800b644:	f1bc 0f18 	cmp.w	ip, #24
 800b648:	f04f 030a 	mov.w	r3, #10
 800b64c:	d91e      	bls.n	800b68c <__gethex+0x120>
 800b64e:	b104      	cbz	r4, 800b652 <__gethex+0xe6>
 800b650:	4252      	negs	r2, r2
 800b652:	4417      	add	r7, r2
 800b654:	f8ca 1000 	str.w	r1, [sl]
 800b658:	b1ed      	cbz	r5, 800b696 <__gethex+0x12a>
 800b65a:	f1bb 0f00 	cmp.w	fp, #0
 800b65e:	bf0c      	ite	eq
 800b660:	2506      	moveq	r5, #6
 800b662:	2500      	movne	r5, #0
 800b664:	4628      	mov	r0, r5
 800b666:	b005      	add	sp, #20
 800b668:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b66c:	2500      	movs	r5, #0
 800b66e:	462c      	mov	r4, r5
 800b670:	e7b0      	b.n	800b5d4 <__gethex+0x68>
 800b672:	2c00      	cmp	r4, #0
 800b674:	d1c7      	bne.n	800b606 <__gethex+0x9a>
 800b676:	4627      	mov	r7, r4
 800b678:	e7c7      	b.n	800b60a <__gethex+0x9e>
 800b67a:	464e      	mov	r6, r9
 800b67c:	462f      	mov	r7, r5
 800b67e:	2501      	movs	r5, #1
 800b680:	e7c3      	b.n	800b60a <__gethex+0x9e>
 800b682:	2400      	movs	r4, #0
 800b684:	1cb1      	adds	r1, r6, #2
 800b686:	e7cc      	b.n	800b622 <__gethex+0xb6>
 800b688:	2401      	movs	r4, #1
 800b68a:	e7fb      	b.n	800b684 <__gethex+0x118>
 800b68c:	fb03 0002 	mla	r0, r3, r2, r0
 800b690:	e7ce      	b.n	800b630 <__gethex+0xc4>
 800b692:	4631      	mov	r1, r6
 800b694:	e7de      	b.n	800b654 <__gethex+0xe8>
 800b696:	eba6 0309 	sub.w	r3, r6, r9
 800b69a:	3b01      	subs	r3, #1
 800b69c:	4629      	mov	r1, r5
 800b69e:	2b07      	cmp	r3, #7
 800b6a0:	dc0a      	bgt.n	800b6b8 <__gethex+0x14c>
 800b6a2:	9801      	ldr	r0, [sp, #4]
 800b6a4:	f7fd ff96 	bl	80095d4 <_Balloc>
 800b6a8:	4604      	mov	r4, r0
 800b6aa:	b940      	cbnz	r0, 800b6be <__gethex+0x152>
 800b6ac:	4b5c      	ldr	r3, [pc, #368]	@ (800b820 <__gethex+0x2b4>)
 800b6ae:	4602      	mov	r2, r0
 800b6b0:	21e4      	movs	r1, #228	@ 0xe4
 800b6b2:	485c      	ldr	r0, [pc, #368]	@ (800b824 <__gethex+0x2b8>)
 800b6b4:	f7fd f8d8 	bl	8008868 <__assert_func>
 800b6b8:	3101      	adds	r1, #1
 800b6ba:	105b      	asrs	r3, r3, #1
 800b6bc:	e7ef      	b.n	800b69e <__gethex+0x132>
 800b6be:	f100 0a14 	add.w	sl, r0, #20
 800b6c2:	2300      	movs	r3, #0
 800b6c4:	4655      	mov	r5, sl
 800b6c6:	469b      	mov	fp, r3
 800b6c8:	45b1      	cmp	r9, r6
 800b6ca:	d337      	bcc.n	800b73c <__gethex+0x1d0>
 800b6cc:	f845 bb04 	str.w	fp, [r5], #4
 800b6d0:	eba5 050a 	sub.w	r5, r5, sl
 800b6d4:	10ad      	asrs	r5, r5, #2
 800b6d6:	6125      	str	r5, [r4, #16]
 800b6d8:	4658      	mov	r0, fp
 800b6da:	f7fe f86d 	bl	80097b8 <__hi0bits>
 800b6de:	016d      	lsls	r5, r5, #5
 800b6e0:	f8d8 6000 	ldr.w	r6, [r8]
 800b6e4:	1a2d      	subs	r5, r5, r0
 800b6e6:	42b5      	cmp	r5, r6
 800b6e8:	dd54      	ble.n	800b794 <__gethex+0x228>
 800b6ea:	1bad      	subs	r5, r5, r6
 800b6ec:	4629      	mov	r1, r5
 800b6ee:	4620      	mov	r0, r4
 800b6f0:	f7fe fc01 	bl	8009ef6 <__any_on>
 800b6f4:	4681      	mov	r9, r0
 800b6f6:	b178      	cbz	r0, 800b718 <__gethex+0x1ac>
 800b6f8:	1e6b      	subs	r3, r5, #1
 800b6fa:	1159      	asrs	r1, r3, #5
 800b6fc:	f003 021f 	and.w	r2, r3, #31
 800b700:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 800b704:	f04f 0901 	mov.w	r9, #1
 800b708:	fa09 f202 	lsl.w	r2, r9, r2
 800b70c:	420a      	tst	r2, r1
 800b70e:	d003      	beq.n	800b718 <__gethex+0x1ac>
 800b710:	454b      	cmp	r3, r9
 800b712:	dc36      	bgt.n	800b782 <__gethex+0x216>
 800b714:	f04f 0902 	mov.w	r9, #2
 800b718:	4629      	mov	r1, r5
 800b71a:	4620      	mov	r0, r4
 800b71c:	f7ff febf 	bl	800b49e <rshift>
 800b720:	442f      	add	r7, r5
 800b722:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800b726:	42bb      	cmp	r3, r7
 800b728:	da42      	bge.n	800b7b0 <__gethex+0x244>
 800b72a:	9801      	ldr	r0, [sp, #4]
 800b72c:	4621      	mov	r1, r4
 800b72e:	f7fd ff91 	bl	8009654 <_Bfree>
 800b732:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800b734:	2300      	movs	r3, #0
 800b736:	6013      	str	r3, [r2, #0]
 800b738:	25a3      	movs	r5, #163	@ 0xa3
 800b73a:	e793      	b.n	800b664 <__gethex+0xf8>
 800b73c:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 800b740:	2a2e      	cmp	r2, #46	@ 0x2e
 800b742:	d012      	beq.n	800b76a <__gethex+0x1fe>
 800b744:	2b20      	cmp	r3, #32
 800b746:	d104      	bne.n	800b752 <__gethex+0x1e6>
 800b748:	f845 bb04 	str.w	fp, [r5], #4
 800b74c:	f04f 0b00 	mov.w	fp, #0
 800b750:	465b      	mov	r3, fp
 800b752:	7830      	ldrb	r0, [r6, #0]
 800b754:	9303      	str	r3, [sp, #12]
 800b756:	f7ff fef4 	bl	800b542 <__hexdig_fun>
 800b75a:	9b03      	ldr	r3, [sp, #12]
 800b75c:	f000 000f 	and.w	r0, r0, #15
 800b760:	4098      	lsls	r0, r3
 800b762:	ea4b 0b00 	orr.w	fp, fp, r0
 800b766:	3304      	adds	r3, #4
 800b768:	e7ae      	b.n	800b6c8 <__gethex+0x15c>
 800b76a:	45b1      	cmp	r9, r6
 800b76c:	d8ea      	bhi.n	800b744 <__gethex+0x1d8>
 800b76e:	492b      	ldr	r1, [pc, #172]	@ (800b81c <__gethex+0x2b0>)
 800b770:	9303      	str	r3, [sp, #12]
 800b772:	2201      	movs	r2, #1
 800b774:	4630      	mov	r0, r6
 800b776:	f7ff fe39 	bl	800b3ec <strncmp>
 800b77a:	9b03      	ldr	r3, [sp, #12]
 800b77c:	2800      	cmp	r0, #0
 800b77e:	d1e1      	bne.n	800b744 <__gethex+0x1d8>
 800b780:	e7a2      	b.n	800b6c8 <__gethex+0x15c>
 800b782:	1ea9      	subs	r1, r5, #2
 800b784:	4620      	mov	r0, r4
 800b786:	f7fe fbb6 	bl	8009ef6 <__any_on>
 800b78a:	2800      	cmp	r0, #0
 800b78c:	d0c2      	beq.n	800b714 <__gethex+0x1a8>
 800b78e:	f04f 0903 	mov.w	r9, #3
 800b792:	e7c1      	b.n	800b718 <__gethex+0x1ac>
 800b794:	da09      	bge.n	800b7aa <__gethex+0x23e>
 800b796:	1b75      	subs	r5, r6, r5
 800b798:	4621      	mov	r1, r4
 800b79a:	9801      	ldr	r0, [sp, #4]
 800b79c:	462a      	mov	r2, r5
 800b79e:	f7fe f971 	bl	8009a84 <__lshift>
 800b7a2:	1b7f      	subs	r7, r7, r5
 800b7a4:	4604      	mov	r4, r0
 800b7a6:	f100 0a14 	add.w	sl, r0, #20
 800b7aa:	f04f 0900 	mov.w	r9, #0
 800b7ae:	e7b8      	b.n	800b722 <__gethex+0x1b6>
 800b7b0:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800b7b4:	42bd      	cmp	r5, r7
 800b7b6:	dd6f      	ble.n	800b898 <__gethex+0x32c>
 800b7b8:	1bed      	subs	r5, r5, r7
 800b7ba:	42ae      	cmp	r6, r5
 800b7bc:	dc34      	bgt.n	800b828 <__gethex+0x2bc>
 800b7be:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800b7c2:	2b02      	cmp	r3, #2
 800b7c4:	d022      	beq.n	800b80c <__gethex+0x2a0>
 800b7c6:	2b03      	cmp	r3, #3
 800b7c8:	d024      	beq.n	800b814 <__gethex+0x2a8>
 800b7ca:	2b01      	cmp	r3, #1
 800b7cc:	d115      	bne.n	800b7fa <__gethex+0x28e>
 800b7ce:	42ae      	cmp	r6, r5
 800b7d0:	d113      	bne.n	800b7fa <__gethex+0x28e>
 800b7d2:	2e01      	cmp	r6, #1
 800b7d4:	d10b      	bne.n	800b7ee <__gethex+0x282>
 800b7d6:	9a02      	ldr	r2, [sp, #8]
 800b7d8:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800b7dc:	6013      	str	r3, [r2, #0]
 800b7de:	2301      	movs	r3, #1
 800b7e0:	6123      	str	r3, [r4, #16]
 800b7e2:	f8ca 3000 	str.w	r3, [sl]
 800b7e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b7e8:	2562      	movs	r5, #98	@ 0x62
 800b7ea:	601c      	str	r4, [r3, #0]
 800b7ec:	e73a      	b.n	800b664 <__gethex+0xf8>
 800b7ee:	1e71      	subs	r1, r6, #1
 800b7f0:	4620      	mov	r0, r4
 800b7f2:	f7fe fb80 	bl	8009ef6 <__any_on>
 800b7f6:	2800      	cmp	r0, #0
 800b7f8:	d1ed      	bne.n	800b7d6 <__gethex+0x26a>
 800b7fa:	9801      	ldr	r0, [sp, #4]
 800b7fc:	4621      	mov	r1, r4
 800b7fe:	f7fd ff29 	bl	8009654 <_Bfree>
 800b802:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800b804:	2300      	movs	r3, #0
 800b806:	6013      	str	r3, [r2, #0]
 800b808:	2550      	movs	r5, #80	@ 0x50
 800b80a:	e72b      	b.n	800b664 <__gethex+0xf8>
 800b80c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b80e:	2b00      	cmp	r3, #0
 800b810:	d1f3      	bne.n	800b7fa <__gethex+0x28e>
 800b812:	e7e0      	b.n	800b7d6 <__gethex+0x26a>
 800b814:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b816:	2b00      	cmp	r3, #0
 800b818:	d1dd      	bne.n	800b7d6 <__gethex+0x26a>
 800b81a:	e7ee      	b.n	800b7fa <__gethex+0x28e>
 800b81c:	0800cb58 	.word	0x0800cb58
 800b820:	0800c9ef 	.word	0x0800c9ef
 800b824:	0800ccca 	.word	0x0800ccca
 800b828:	1e6f      	subs	r7, r5, #1
 800b82a:	f1b9 0f00 	cmp.w	r9, #0
 800b82e:	d130      	bne.n	800b892 <__gethex+0x326>
 800b830:	b127      	cbz	r7, 800b83c <__gethex+0x2d0>
 800b832:	4639      	mov	r1, r7
 800b834:	4620      	mov	r0, r4
 800b836:	f7fe fb5e 	bl	8009ef6 <__any_on>
 800b83a:	4681      	mov	r9, r0
 800b83c:	117a      	asrs	r2, r7, #5
 800b83e:	2301      	movs	r3, #1
 800b840:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800b844:	f007 071f 	and.w	r7, r7, #31
 800b848:	40bb      	lsls	r3, r7
 800b84a:	4213      	tst	r3, r2
 800b84c:	4629      	mov	r1, r5
 800b84e:	4620      	mov	r0, r4
 800b850:	bf18      	it	ne
 800b852:	f049 0902 	orrne.w	r9, r9, #2
 800b856:	f7ff fe22 	bl	800b49e <rshift>
 800b85a:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800b85e:	1b76      	subs	r6, r6, r5
 800b860:	2502      	movs	r5, #2
 800b862:	f1b9 0f00 	cmp.w	r9, #0
 800b866:	d047      	beq.n	800b8f8 <__gethex+0x38c>
 800b868:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800b86c:	2b02      	cmp	r3, #2
 800b86e:	d015      	beq.n	800b89c <__gethex+0x330>
 800b870:	2b03      	cmp	r3, #3
 800b872:	d017      	beq.n	800b8a4 <__gethex+0x338>
 800b874:	2b01      	cmp	r3, #1
 800b876:	d109      	bne.n	800b88c <__gethex+0x320>
 800b878:	f019 0f02 	tst.w	r9, #2
 800b87c:	d006      	beq.n	800b88c <__gethex+0x320>
 800b87e:	f8da 3000 	ldr.w	r3, [sl]
 800b882:	ea49 0903 	orr.w	r9, r9, r3
 800b886:	f019 0f01 	tst.w	r9, #1
 800b88a:	d10e      	bne.n	800b8aa <__gethex+0x33e>
 800b88c:	f045 0510 	orr.w	r5, r5, #16
 800b890:	e032      	b.n	800b8f8 <__gethex+0x38c>
 800b892:	f04f 0901 	mov.w	r9, #1
 800b896:	e7d1      	b.n	800b83c <__gethex+0x2d0>
 800b898:	2501      	movs	r5, #1
 800b89a:	e7e2      	b.n	800b862 <__gethex+0x2f6>
 800b89c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b89e:	f1c3 0301 	rsb	r3, r3, #1
 800b8a2:	930f      	str	r3, [sp, #60]	@ 0x3c
 800b8a4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b8a6:	2b00      	cmp	r3, #0
 800b8a8:	d0f0      	beq.n	800b88c <__gethex+0x320>
 800b8aa:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800b8ae:	f104 0314 	add.w	r3, r4, #20
 800b8b2:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800b8b6:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800b8ba:	f04f 0c00 	mov.w	ip, #0
 800b8be:	4618      	mov	r0, r3
 800b8c0:	f853 2b04 	ldr.w	r2, [r3], #4
 800b8c4:	f1b2 3fff 	cmp.w	r2, #4294967295
 800b8c8:	d01b      	beq.n	800b902 <__gethex+0x396>
 800b8ca:	3201      	adds	r2, #1
 800b8cc:	6002      	str	r2, [r0, #0]
 800b8ce:	2d02      	cmp	r5, #2
 800b8d0:	f104 0314 	add.w	r3, r4, #20
 800b8d4:	d13c      	bne.n	800b950 <__gethex+0x3e4>
 800b8d6:	f8d8 2000 	ldr.w	r2, [r8]
 800b8da:	3a01      	subs	r2, #1
 800b8dc:	42b2      	cmp	r2, r6
 800b8de:	d109      	bne.n	800b8f4 <__gethex+0x388>
 800b8e0:	1171      	asrs	r1, r6, #5
 800b8e2:	2201      	movs	r2, #1
 800b8e4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b8e8:	f006 061f 	and.w	r6, r6, #31
 800b8ec:	fa02 f606 	lsl.w	r6, r2, r6
 800b8f0:	421e      	tst	r6, r3
 800b8f2:	d13a      	bne.n	800b96a <__gethex+0x3fe>
 800b8f4:	f045 0520 	orr.w	r5, r5, #32
 800b8f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b8fa:	601c      	str	r4, [r3, #0]
 800b8fc:	9b02      	ldr	r3, [sp, #8]
 800b8fe:	601f      	str	r7, [r3, #0]
 800b900:	e6b0      	b.n	800b664 <__gethex+0xf8>
 800b902:	4299      	cmp	r1, r3
 800b904:	f843 cc04 	str.w	ip, [r3, #-4]
 800b908:	d8d9      	bhi.n	800b8be <__gethex+0x352>
 800b90a:	68a3      	ldr	r3, [r4, #8]
 800b90c:	459b      	cmp	fp, r3
 800b90e:	db17      	blt.n	800b940 <__gethex+0x3d4>
 800b910:	6861      	ldr	r1, [r4, #4]
 800b912:	9801      	ldr	r0, [sp, #4]
 800b914:	3101      	adds	r1, #1
 800b916:	f7fd fe5d 	bl	80095d4 <_Balloc>
 800b91a:	4681      	mov	r9, r0
 800b91c:	b918      	cbnz	r0, 800b926 <__gethex+0x3ba>
 800b91e:	4b1a      	ldr	r3, [pc, #104]	@ (800b988 <__gethex+0x41c>)
 800b920:	4602      	mov	r2, r0
 800b922:	2184      	movs	r1, #132	@ 0x84
 800b924:	e6c5      	b.n	800b6b2 <__gethex+0x146>
 800b926:	6922      	ldr	r2, [r4, #16]
 800b928:	3202      	adds	r2, #2
 800b92a:	f104 010c 	add.w	r1, r4, #12
 800b92e:	0092      	lsls	r2, r2, #2
 800b930:	300c      	adds	r0, #12
 800b932:	f7fc ff84 	bl	800883e <memcpy>
 800b936:	4621      	mov	r1, r4
 800b938:	9801      	ldr	r0, [sp, #4]
 800b93a:	f7fd fe8b 	bl	8009654 <_Bfree>
 800b93e:	464c      	mov	r4, r9
 800b940:	6923      	ldr	r3, [r4, #16]
 800b942:	1c5a      	adds	r2, r3, #1
 800b944:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800b948:	6122      	str	r2, [r4, #16]
 800b94a:	2201      	movs	r2, #1
 800b94c:	615a      	str	r2, [r3, #20]
 800b94e:	e7be      	b.n	800b8ce <__gethex+0x362>
 800b950:	6922      	ldr	r2, [r4, #16]
 800b952:	455a      	cmp	r2, fp
 800b954:	dd0b      	ble.n	800b96e <__gethex+0x402>
 800b956:	2101      	movs	r1, #1
 800b958:	4620      	mov	r0, r4
 800b95a:	f7ff fda0 	bl	800b49e <rshift>
 800b95e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800b962:	3701      	adds	r7, #1
 800b964:	42bb      	cmp	r3, r7
 800b966:	f6ff aee0 	blt.w	800b72a <__gethex+0x1be>
 800b96a:	2501      	movs	r5, #1
 800b96c:	e7c2      	b.n	800b8f4 <__gethex+0x388>
 800b96e:	f016 061f 	ands.w	r6, r6, #31
 800b972:	d0fa      	beq.n	800b96a <__gethex+0x3fe>
 800b974:	4453      	add	r3, sl
 800b976:	f1c6 0620 	rsb	r6, r6, #32
 800b97a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800b97e:	f7fd ff1b 	bl	80097b8 <__hi0bits>
 800b982:	42b0      	cmp	r0, r6
 800b984:	dbe7      	blt.n	800b956 <__gethex+0x3ea>
 800b986:	e7f0      	b.n	800b96a <__gethex+0x3fe>
 800b988:	0800c9ef 	.word	0x0800c9ef

0800b98c <L_shift>:
 800b98c:	f1c2 0208 	rsb	r2, r2, #8
 800b990:	0092      	lsls	r2, r2, #2
 800b992:	b570      	push	{r4, r5, r6, lr}
 800b994:	f1c2 0620 	rsb	r6, r2, #32
 800b998:	6843      	ldr	r3, [r0, #4]
 800b99a:	6804      	ldr	r4, [r0, #0]
 800b99c:	fa03 f506 	lsl.w	r5, r3, r6
 800b9a0:	432c      	orrs	r4, r5
 800b9a2:	40d3      	lsrs	r3, r2
 800b9a4:	6004      	str	r4, [r0, #0]
 800b9a6:	f840 3f04 	str.w	r3, [r0, #4]!
 800b9aa:	4288      	cmp	r0, r1
 800b9ac:	d3f4      	bcc.n	800b998 <L_shift+0xc>
 800b9ae:	bd70      	pop	{r4, r5, r6, pc}

0800b9b0 <__match>:
 800b9b0:	b530      	push	{r4, r5, lr}
 800b9b2:	6803      	ldr	r3, [r0, #0]
 800b9b4:	3301      	adds	r3, #1
 800b9b6:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b9ba:	b914      	cbnz	r4, 800b9c2 <__match+0x12>
 800b9bc:	6003      	str	r3, [r0, #0]
 800b9be:	2001      	movs	r0, #1
 800b9c0:	bd30      	pop	{r4, r5, pc}
 800b9c2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800b9c6:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 800b9ca:	2d19      	cmp	r5, #25
 800b9cc:	bf98      	it	ls
 800b9ce:	3220      	addls	r2, #32
 800b9d0:	42a2      	cmp	r2, r4
 800b9d2:	d0f0      	beq.n	800b9b6 <__match+0x6>
 800b9d4:	2000      	movs	r0, #0
 800b9d6:	e7f3      	b.n	800b9c0 <__match+0x10>

0800b9d8 <__hexnan>:
 800b9d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b9dc:	680b      	ldr	r3, [r1, #0]
 800b9de:	6801      	ldr	r1, [r0, #0]
 800b9e0:	115e      	asrs	r6, r3, #5
 800b9e2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800b9e6:	f013 031f 	ands.w	r3, r3, #31
 800b9ea:	b087      	sub	sp, #28
 800b9ec:	bf18      	it	ne
 800b9ee:	3604      	addne	r6, #4
 800b9f0:	2500      	movs	r5, #0
 800b9f2:	1f37      	subs	r7, r6, #4
 800b9f4:	4682      	mov	sl, r0
 800b9f6:	4690      	mov	r8, r2
 800b9f8:	9301      	str	r3, [sp, #4]
 800b9fa:	f846 5c04 	str.w	r5, [r6, #-4]
 800b9fe:	46b9      	mov	r9, r7
 800ba00:	463c      	mov	r4, r7
 800ba02:	9502      	str	r5, [sp, #8]
 800ba04:	46ab      	mov	fp, r5
 800ba06:	784a      	ldrb	r2, [r1, #1]
 800ba08:	1c4b      	adds	r3, r1, #1
 800ba0a:	9303      	str	r3, [sp, #12]
 800ba0c:	b342      	cbz	r2, 800ba60 <__hexnan+0x88>
 800ba0e:	4610      	mov	r0, r2
 800ba10:	9105      	str	r1, [sp, #20]
 800ba12:	9204      	str	r2, [sp, #16]
 800ba14:	f7ff fd95 	bl	800b542 <__hexdig_fun>
 800ba18:	2800      	cmp	r0, #0
 800ba1a:	d151      	bne.n	800bac0 <__hexnan+0xe8>
 800ba1c:	9a04      	ldr	r2, [sp, #16]
 800ba1e:	9905      	ldr	r1, [sp, #20]
 800ba20:	2a20      	cmp	r2, #32
 800ba22:	d818      	bhi.n	800ba56 <__hexnan+0x7e>
 800ba24:	9b02      	ldr	r3, [sp, #8]
 800ba26:	459b      	cmp	fp, r3
 800ba28:	dd13      	ble.n	800ba52 <__hexnan+0x7a>
 800ba2a:	454c      	cmp	r4, r9
 800ba2c:	d206      	bcs.n	800ba3c <__hexnan+0x64>
 800ba2e:	2d07      	cmp	r5, #7
 800ba30:	dc04      	bgt.n	800ba3c <__hexnan+0x64>
 800ba32:	462a      	mov	r2, r5
 800ba34:	4649      	mov	r1, r9
 800ba36:	4620      	mov	r0, r4
 800ba38:	f7ff ffa8 	bl	800b98c <L_shift>
 800ba3c:	4544      	cmp	r4, r8
 800ba3e:	d952      	bls.n	800bae6 <__hexnan+0x10e>
 800ba40:	2300      	movs	r3, #0
 800ba42:	f1a4 0904 	sub.w	r9, r4, #4
 800ba46:	f844 3c04 	str.w	r3, [r4, #-4]
 800ba4a:	f8cd b008 	str.w	fp, [sp, #8]
 800ba4e:	464c      	mov	r4, r9
 800ba50:	461d      	mov	r5, r3
 800ba52:	9903      	ldr	r1, [sp, #12]
 800ba54:	e7d7      	b.n	800ba06 <__hexnan+0x2e>
 800ba56:	2a29      	cmp	r2, #41	@ 0x29
 800ba58:	d157      	bne.n	800bb0a <__hexnan+0x132>
 800ba5a:	3102      	adds	r1, #2
 800ba5c:	f8ca 1000 	str.w	r1, [sl]
 800ba60:	f1bb 0f00 	cmp.w	fp, #0
 800ba64:	d051      	beq.n	800bb0a <__hexnan+0x132>
 800ba66:	454c      	cmp	r4, r9
 800ba68:	d206      	bcs.n	800ba78 <__hexnan+0xa0>
 800ba6a:	2d07      	cmp	r5, #7
 800ba6c:	dc04      	bgt.n	800ba78 <__hexnan+0xa0>
 800ba6e:	462a      	mov	r2, r5
 800ba70:	4649      	mov	r1, r9
 800ba72:	4620      	mov	r0, r4
 800ba74:	f7ff ff8a 	bl	800b98c <L_shift>
 800ba78:	4544      	cmp	r4, r8
 800ba7a:	d936      	bls.n	800baea <__hexnan+0x112>
 800ba7c:	f1a8 0204 	sub.w	r2, r8, #4
 800ba80:	4623      	mov	r3, r4
 800ba82:	f853 1b04 	ldr.w	r1, [r3], #4
 800ba86:	f842 1f04 	str.w	r1, [r2, #4]!
 800ba8a:	429f      	cmp	r7, r3
 800ba8c:	d2f9      	bcs.n	800ba82 <__hexnan+0xaa>
 800ba8e:	1b3b      	subs	r3, r7, r4
 800ba90:	f023 0303 	bic.w	r3, r3, #3
 800ba94:	3304      	adds	r3, #4
 800ba96:	3401      	adds	r4, #1
 800ba98:	3e03      	subs	r6, #3
 800ba9a:	42b4      	cmp	r4, r6
 800ba9c:	bf88      	it	hi
 800ba9e:	2304      	movhi	r3, #4
 800baa0:	4443      	add	r3, r8
 800baa2:	2200      	movs	r2, #0
 800baa4:	f843 2b04 	str.w	r2, [r3], #4
 800baa8:	429f      	cmp	r7, r3
 800baaa:	d2fb      	bcs.n	800baa4 <__hexnan+0xcc>
 800baac:	683b      	ldr	r3, [r7, #0]
 800baae:	b91b      	cbnz	r3, 800bab8 <__hexnan+0xe0>
 800bab0:	4547      	cmp	r7, r8
 800bab2:	d128      	bne.n	800bb06 <__hexnan+0x12e>
 800bab4:	2301      	movs	r3, #1
 800bab6:	603b      	str	r3, [r7, #0]
 800bab8:	2005      	movs	r0, #5
 800baba:	b007      	add	sp, #28
 800babc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bac0:	3501      	adds	r5, #1
 800bac2:	2d08      	cmp	r5, #8
 800bac4:	f10b 0b01 	add.w	fp, fp, #1
 800bac8:	dd06      	ble.n	800bad8 <__hexnan+0x100>
 800baca:	4544      	cmp	r4, r8
 800bacc:	d9c1      	bls.n	800ba52 <__hexnan+0x7a>
 800bace:	2300      	movs	r3, #0
 800bad0:	f844 3c04 	str.w	r3, [r4, #-4]
 800bad4:	2501      	movs	r5, #1
 800bad6:	3c04      	subs	r4, #4
 800bad8:	6822      	ldr	r2, [r4, #0]
 800bada:	f000 000f 	and.w	r0, r0, #15
 800bade:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800bae2:	6020      	str	r0, [r4, #0]
 800bae4:	e7b5      	b.n	800ba52 <__hexnan+0x7a>
 800bae6:	2508      	movs	r5, #8
 800bae8:	e7b3      	b.n	800ba52 <__hexnan+0x7a>
 800baea:	9b01      	ldr	r3, [sp, #4]
 800baec:	2b00      	cmp	r3, #0
 800baee:	d0dd      	beq.n	800baac <__hexnan+0xd4>
 800baf0:	f1c3 0320 	rsb	r3, r3, #32
 800baf4:	f04f 32ff 	mov.w	r2, #4294967295
 800baf8:	40da      	lsrs	r2, r3
 800bafa:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800bafe:	4013      	ands	r3, r2
 800bb00:	f846 3c04 	str.w	r3, [r6, #-4]
 800bb04:	e7d2      	b.n	800baac <__hexnan+0xd4>
 800bb06:	3f04      	subs	r7, #4
 800bb08:	e7d0      	b.n	800baac <__hexnan+0xd4>
 800bb0a:	2004      	movs	r0, #4
 800bb0c:	e7d5      	b.n	800baba <__hexnan+0xe2>

0800bb0e <__ascii_mbtowc>:
 800bb0e:	b082      	sub	sp, #8
 800bb10:	b901      	cbnz	r1, 800bb14 <__ascii_mbtowc+0x6>
 800bb12:	a901      	add	r1, sp, #4
 800bb14:	b142      	cbz	r2, 800bb28 <__ascii_mbtowc+0x1a>
 800bb16:	b14b      	cbz	r3, 800bb2c <__ascii_mbtowc+0x1e>
 800bb18:	7813      	ldrb	r3, [r2, #0]
 800bb1a:	600b      	str	r3, [r1, #0]
 800bb1c:	7812      	ldrb	r2, [r2, #0]
 800bb1e:	1e10      	subs	r0, r2, #0
 800bb20:	bf18      	it	ne
 800bb22:	2001      	movne	r0, #1
 800bb24:	b002      	add	sp, #8
 800bb26:	4770      	bx	lr
 800bb28:	4610      	mov	r0, r2
 800bb2a:	e7fb      	b.n	800bb24 <__ascii_mbtowc+0x16>
 800bb2c:	f06f 0001 	mvn.w	r0, #1
 800bb30:	e7f8      	b.n	800bb24 <__ascii_mbtowc+0x16>

0800bb32 <_realloc_r>:
 800bb32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb36:	4680      	mov	r8, r0
 800bb38:	4615      	mov	r5, r2
 800bb3a:	460c      	mov	r4, r1
 800bb3c:	b921      	cbnz	r1, 800bb48 <_realloc_r+0x16>
 800bb3e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bb42:	4611      	mov	r1, r2
 800bb44:	f7fb bcdc 	b.w	8007500 <_malloc_r>
 800bb48:	b92a      	cbnz	r2, 800bb56 <_realloc_r+0x24>
 800bb4a:	f7fd fcf9 	bl	8009540 <_free_r>
 800bb4e:	2400      	movs	r4, #0
 800bb50:	4620      	mov	r0, r4
 800bb52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bb56:	f000 f86b 	bl	800bc30 <_malloc_usable_size_r>
 800bb5a:	4285      	cmp	r5, r0
 800bb5c:	4606      	mov	r6, r0
 800bb5e:	d802      	bhi.n	800bb66 <_realloc_r+0x34>
 800bb60:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800bb64:	d8f4      	bhi.n	800bb50 <_realloc_r+0x1e>
 800bb66:	4629      	mov	r1, r5
 800bb68:	4640      	mov	r0, r8
 800bb6a:	f7fb fcc9 	bl	8007500 <_malloc_r>
 800bb6e:	4607      	mov	r7, r0
 800bb70:	2800      	cmp	r0, #0
 800bb72:	d0ec      	beq.n	800bb4e <_realloc_r+0x1c>
 800bb74:	42b5      	cmp	r5, r6
 800bb76:	462a      	mov	r2, r5
 800bb78:	4621      	mov	r1, r4
 800bb7a:	bf28      	it	cs
 800bb7c:	4632      	movcs	r2, r6
 800bb7e:	f7fc fe5e 	bl	800883e <memcpy>
 800bb82:	4621      	mov	r1, r4
 800bb84:	4640      	mov	r0, r8
 800bb86:	f7fd fcdb 	bl	8009540 <_free_r>
 800bb8a:	463c      	mov	r4, r7
 800bb8c:	e7e0      	b.n	800bb50 <_realloc_r+0x1e>

0800bb8e <__ascii_wctomb>:
 800bb8e:	4603      	mov	r3, r0
 800bb90:	4608      	mov	r0, r1
 800bb92:	b141      	cbz	r1, 800bba6 <__ascii_wctomb+0x18>
 800bb94:	2aff      	cmp	r2, #255	@ 0xff
 800bb96:	d904      	bls.n	800bba2 <__ascii_wctomb+0x14>
 800bb98:	228a      	movs	r2, #138	@ 0x8a
 800bb9a:	601a      	str	r2, [r3, #0]
 800bb9c:	f04f 30ff 	mov.w	r0, #4294967295
 800bba0:	4770      	bx	lr
 800bba2:	700a      	strb	r2, [r1, #0]
 800bba4:	2001      	movs	r0, #1
 800bba6:	4770      	bx	lr

0800bba8 <_raise_r>:
 800bba8:	291f      	cmp	r1, #31
 800bbaa:	b538      	push	{r3, r4, r5, lr}
 800bbac:	4605      	mov	r5, r0
 800bbae:	460c      	mov	r4, r1
 800bbb0:	d904      	bls.n	800bbbc <_raise_r+0x14>
 800bbb2:	2316      	movs	r3, #22
 800bbb4:	6003      	str	r3, [r0, #0]
 800bbb6:	f04f 30ff 	mov.w	r0, #4294967295
 800bbba:	bd38      	pop	{r3, r4, r5, pc}
 800bbbc:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800bbbe:	b112      	cbz	r2, 800bbc6 <_raise_r+0x1e>
 800bbc0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800bbc4:	b94b      	cbnz	r3, 800bbda <_raise_r+0x32>
 800bbc6:	4628      	mov	r0, r5
 800bbc8:	f000 f830 	bl	800bc2c <_getpid_r>
 800bbcc:	4622      	mov	r2, r4
 800bbce:	4601      	mov	r1, r0
 800bbd0:	4628      	mov	r0, r5
 800bbd2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bbd6:	f000 b817 	b.w	800bc08 <_kill_r>
 800bbda:	2b01      	cmp	r3, #1
 800bbdc:	d00a      	beq.n	800bbf4 <_raise_r+0x4c>
 800bbde:	1c59      	adds	r1, r3, #1
 800bbe0:	d103      	bne.n	800bbea <_raise_r+0x42>
 800bbe2:	2316      	movs	r3, #22
 800bbe4:	6003      	str	r3, [r0, #0]
 800bbe6:	2001      	movs	r0, #1
 800bbe8:	e7e7      	b.n	800bbba <_raise_r+0x12>
 800bbea:	2100      	movs	r1, #0
 800bbec:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800bbf0:	4620      	mov	r0, r4
 800bbf2:	4798      	blx	r3
 800bbf4:	2000      	movs	r0, #0
 800bbf6:	e7e0      	b.n	800bbba <_raise_r+0x12>

0800bbf8 <raise>:
 800bbf8:	4b02      	ldr	r3, [pc, #8]	@ (800bc04 <raise+0xc>)
 800bbfa:	4601      	mov	r1, r0
 800bbfc:	6818      	ldr	r0, [r3, #0]
 800bbfe:	f7ff bfd3 	b.w	800bba8 <_raise_r>
 800bc02:	bf00      	nop
 800bc04:	20000588 	.word	0x20000588

0800bc08 <_kill_r>:
 800bc08:	b538      	push	{r3, r4, r5, lr}
 800bc0a:	4d07      	ldr	r5, [pc, #28]	@ (800bc28 <_kill_r+0x20>)
 800bc0c:	2300      	movs	r3, #0
 800bc0e:	4604      	mov	r4, r0
 800bc10:	4608      	mov	r0, r1
 800bc12:	4611      	mov	r1, r2
 800bc14:	602b      	str	r3, [r5, #0]
 800bc16:	f7f6 fc4d 	bl	80024b4 <_kill>
 800bc1a:	1c43      	adds	r3, r0, #1
 800bc1c:	d102      	bne.n	800bc24 <_kill_r+0x1c>
 800bc1e:	682b      	ldr	r3, [r5, #0]
 800bc20:	b103      	cbz	r3, 800bc24 <_kill_r+0x1c>
 800bc22:	6023      	str	r3, [r4, #0]
 800bc24:	bd38      	pop	{r3, r4, r5, pc}
 800bc26:	bf00      	nop
 800bc28:	20000b10 	.word	0x20000b10

0800bc2c <_getpid_r>:
 800bc2c:	f7f6 bc3a 	b.w	80024a4 <_getpid>

0800bc30 <_malloc_usable_size_r>:
 800bc30:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800bc34:	1f18      	subs	r0, r3, #4
 800bc36:	2b00      	cmp	r3, #0
 800bc38:	bfbc      	itt	lt
 800bc3a:	580b      	ldrlt	r3, [r1, r0]
 800bc3c:	18c0      	addlt	r0, r0, r3
 800bc3e:	4770      	bx	lr

0800bc40 <_init>:
 800bc40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bc42:	bf00      	nop
 800bc44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800bc46:	bc08      	pop	{r3}
 800bc48:	469e      	mov	lr, r3
 800bc4a:	4770      	bx	lr

0800bc4c <_fini>:
 800bc4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bc4e:	bf00      	nop
 800bc50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800bc52:	bc08      	pop	{r3}
 800bc54:	469e      	mov	lr, r3
 800bc56:	4770      	bx	lr
